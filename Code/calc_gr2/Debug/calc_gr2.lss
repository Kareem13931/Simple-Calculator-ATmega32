
calc_gr2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000633e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000148  00800060  0000633e  000063d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  008001a8  008001a8  0000651a  2**0
                  ALLOC
  3 .stab         00002a6c  00000000  00000000  0000651c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cb8  00000000  00000000  00008f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000002c0  00000000  00000000  00009c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000315  00000000  00000000  00009f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003d94  00000000  00000000  0000a215  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001d03  00000000  00000000  0000dfa9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001cc7  00000000  00000000  0000fcac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002e0  00000000  00000000  00011974  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003f4  00000000  00000000  00011c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000028ea  00000000  00000000  00012048  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00014932  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e3       	ldi	r30, 0x3E	; 62
      68:	f3 e6       	ldi	r31, 0x63	; 99
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 3a       	cpi	r26, 0xA8	; 168
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 ea       	ldi	r26, 0xA8	; 168
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3b       	cpi	r26, 0xB8	; 184
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a5 2e 	call	0x5d4a	; 0x5d4a <main>
      8a:	0c 94 9d 31 	jmp	0x633a	; 0x633a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 3d 14 	call	0x287a	; 0x287a <__subsf3>
      be:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <__fixsfdi>:
      ea:	ef 92       	push	r14
      ec:	ff 92       	push	r15
      ee:	0f 93       	push	r16
      f0:	1f 93       	push	r17
      f2:	7b 01       	movw	r14, r22
      f4:	8c 01       	movw	r16, r24
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	30 e0       	ldi	r19, 0x00	; 0
      fa:	40 e0       	ldi	r20, 0x00	; 0
      fc:	50 e0       	ldi	r21, 0x00	; 0
      fe:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
     102:	88 23       	and	r24, r24
     104:	0c f0       	brlt	.+2      	; 0x108 <__fixsfdi+0x1e>
     106:	5c c0       	rjmp	.+184    	; 0x1c0 <__fixsfdi+0xd6>
     108:	c8 01       	movw	r24, r16
     10a:	b7 01       	movw	r22, r14
     10c:	90 58       	subi	r25, 0x80	; 128
     10e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__fixunssfdi>
     112:	21 95       	neg	r18
     114:	e1 e0       	ldi	r30, 0x01	; 1
     116:	12 16       	cp	r1, r18
     118:	08 f0       	brcs	.+2      	; 0x11c <__fixsfdi+0x32>
     11a:	e0 e0       	ldi	r30, 0x00	; 0
     11c:	31 95       	neg	r19
     11e:	f1 e0       	ldi	r31, 0x01	; 1
     120:	13 16       	cp	r1, r19
     122:	08 f0       	brcs	.+2      	; 0x126 <__fixsfdi+0x3c>
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	e3 2e       	mov	r14, r19
     128:	ee 1a       	sub	r14, r30
     12a:	e1 e0       	ldi	r30, 0x01	; 1
     12c:	3e 15       	cp	r19, r14
     12e:	08 f0       	brcs	.+2      	; 0x132 <__fixsfdi+0x48>
     130:	e0 e0       	ldi	r30, 0x00	; 0
     132:	fe 2b       	or	r31, r30
     134:	41 95       	neg	r20
     136:	a1 e0       	ldi	r26, 0x01	; 1
     138:	14 16       	cp	r1, r20
     13a:	08 f0       	brcs	.+2      	; 0x13e <__fixsfdi+0x54>
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	f4 2e       	mov	r15, r20
     140:	ff 1a       	sub	r15, r31
     142:	e1 e0       	ldi	r30, 0x01	; 1
     144:	4f 15       	cp	r20, r15
     146:	08 f0       	brcs	.+2      	; 0x14a <__fixsfdi+0x60>
     148:	e0 e0       	ldi	r30, 0x00	; 0
     14a:	ae 2b       	or	r26, r30
     14c:	51 95       	neg	r21
     14e:	f1 e0       	ldi	r31, 0x01	; 1
     150:	15 16       	cp	r1, r21
     152:	08 f0       	brcs	.+2      	; 0x156 <__fixsfdi+0x6c>
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	05 2f       	mov	r16, r21
     158:	0a 1b       	sub	r16, r26
     15a:	e1 e0       	ldi	r30, 0x01	; 1
     15c:	50 17       	cp	r21, r16
     15e:	08 f0       	brcs	.+2      	; 0x162 <__fixsfdi+0x78>
     160:	e0 e0       	ldi	r30, 0x00	; 0
     162:	fe 2b       	or	r31, r30
     164:	61 95       	neg	r22
     166:	a1 e0       	ldi	r26, 0x01	; 1
     168:	16 16       	cp	r1, r22
     16a:	08 f0       	brcs	.+2      	; 0x16e <__fixsfdi+0x84>
     16c:	a0 e0       	ldi	r26, 0x00	; 0
     16e:	16 2f       	mov	r17, r22
     170:	1f 1b       	sub	r17, r31
     172:	e1 e0       	ldi	r30, 0x01	; 1
     174:	61 17       	cp	r22, r17
     176:	08 f0       	brcs	.+2      	; 0x17a <__fixsfdi+0x90>
     178:	e0 e0       	ldi	r30, 0x00	; 0
     17a:	ae 2b       	or	r26, r30
     17c:	71 95       	neg	r23
     17e:	f1 e0       	ldi	r31, 0x01	; 1
     180:	17 16       	cp	r1, r23
     182:	08 f0       	brcs	.+2      	; 0x186 <__fixsfdi+0x9c>
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	b7 2f       	mov	r27, r23
     188:	ba 1b       	sub	r27, r26
     18a:	e1 e0       	ldi	r30, 0x01	; 1
     18c:	7b 17       	cp	r23, r27
     18e:	08 f0       	brcs	.+2      	; 0x192 <__fixsfdi+0xa8>
     190:	e0 e0       	ldi	r30, 0x00	; 0
     192:	fe 2b       	or	r31, r30
     194:	81 95       	neg	r24
     196:	a1 e0       	ldi	r26, 0x01	; 1
     198:	18 16       	cp	r1, r24
     19a:	08 f0       	brcs	.+2      	; 0x19e <__fixsfdi+0xb4>
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	38 2f       	mov	r19, r24
     1a0:	3f 1b       	sub	r19, r31
     1a2:	f3 2f       	mov	r31, r19
     1a4:	e1 e0       	ldi	r30, 0x01	; 1
     1a6:	83 17       	cp	r24, r19
     1a8:	08 f0       	brcs	.+2      	; 0x1ac <__fixsfdi+0xc2>
     1aa:	e0 e0       	ldi	r30, 0x00	; 0
     1ac:	ae 2b       	or	r26, r30
     1ae:	91 95       	neg	r25
     1b0:	3e 2d       	mov	r19, r14
     1b2:	4f 2d       	mov	r20, r15
     1b4:	50 2f       	mov	r21, r16
     1b6:	61 2f       	mov	r22, r17
     1b8:	7b 2f       	mov	r23, r27
     1ba:	8f 2f       	mov	r24, r31
     1bc:	9a 1b       	sub	r25, r26
     1be:	04 c0       	rjmp	.+8      	; 0x1c8 <__fixsfdi+0xde>
     1c0:	c8 01       	movw	r24, r16
     1c2:	b7 01       	movw	r22, r14
     1c4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__fixunssfdi>
     1c8:	1f 91       	pop	r17
     1ca:	0f 91       	pop	r16
     1cc:	ff 90       	pop	r15
     1ce:	ef 90       	pop	r14
     1d0:	08 95       	ret

000001d2 <__fixunssfdi>:
     1d2:	a0 e0       	ldi	r26, 0x00	; 0
     1d4:	b0 e0       	ldi	r27, 0x00	; 0
     1d6:	ef ee       	ldi	r30, 0xEF	; 239
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	0c 94 66 31 	jmp	0x62cc	; 0x62cc <__prologue_saves__>
     1de:	7b 01       	movw	r14, r22
     1e0:	8c 01       	movw	r16, r24
     1e2:	20 e0       	ldi	r18, 0x00	; 0
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	40 e8       	ldi	r20, 0x80	; 128
     1e8:	5f e3       	ldi	r21, 0x3F	; 63
     1ea:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
     1ee:	88 23       	and	r24, r24
     1f0:	4c f4       	brge	.+18     	; 0x204 <__fixunssfdi+0x32>
     1f2:	aa 24       	eor	r10, r10
     1f4:	bb 24       	eor	r11, r11
     1f6:	cc 24       	eor	r12, r12
     1f8:	dd 24       	eor	r13, r13
     1fa:	ee 24       	eor	r14, r14
     1fc:	ff 24       	eor	r15, r15
     1fe:	00 e0       	ldi	r16, 0x00	; 0
     200:	10 e0       	ldi	r17, 0x00	; 0
     202:	86 c0       	rjmp	.+268    	; 0x310 <__fixunssfdi+0x13e>
     204:	c8 01       	movw	r24, r16
     206:	b7 01       	movw	r22, r14
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	40 e8       	ldi	r20, 0x80	; 128
     20e:	5f e4       	ldi	r21, 0x4F	; 79
     210:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
     214:	88 23       	and	r24, r24
     216:	54 f4       	brge	.+20     	; 0x22c <__fixunssfdi+0x5a>
     218:	c8 01       	movw	r24, r16
     21a:	b7 01       	movw	r22, r14
     21c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     220:	5b 01       	movw	r10, r22
     222:	6c 01       	movw	r12, r24
     224:	ee 24       	eor	r14, r14
     226:	ff 24       	eor	r15, r15
     228:	87 01       	movw	r16, r14
     22a:	72 c0       	rjmp	.+228    	; 0x310 <__fixunssfdi+0x13e>
     22c:	c8 01       	movw	r24, r16
     22e:	b7 01       	movw	r22, r14
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	40 e8       	ldi	r20, 0x80	; 128
     236:	5f e5       	ldi	r21, 0x5F	; 95
     238:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
     23c:	87 fd       	sbrc	r24, 7
     23e:	0f c0       	rjmp	.+30     	; 0x25e <__fixunssfdi+0x8c>
     240:	aa 24       	eor	r10, r10
     242:	aa 94       	dec	r10
     244:	bb 24       	eor	r11, r11
     246:	ba 94       	dec	r11
     248:	cc 24       	eor	r12, r12
     24a:	ca 94       	dec	r12
     24c:	dd 24       	eor	r13, r13
     24e:	da 94       	dec	r13
     250:	ee 24       	eor	r14, r14
     252:	ea 94       	dec	r14
     254:	ff 24       	eor	r15, r15
     256:	fa 94       	dec	r15
     258:	0f ef       	ldi	r16, 0xFF	; 255
     25a:	1f ef       	ldi	r17, 0xFF	; 255
     25c:	59 c0       	rjmp	.+178    	; 0x310 <__fixunssfdi+0x13e>
     25e:	c8 01       	movw	r24, r16
     260:	b7 01       	movw	r22, r14
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	40 e8       	ldi	r20, 0x80	; 128
     268:	5f e2       	ldi	r21, 0x2F	; 47
     26a:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
     26e:	7b 01       	movw	r14, r22
     270:	8c 01       	movw	r16, r24
     272:	22 24       	eor	r2, r2
     274:	33 24       	eor	r3, r3
     276:	21 01       	movw	r4, r2
     278:	90 e1       	ldi	r25, 0x10	; 16
     27a:	a9 2e       	mov	r10, r25
     27c:	b1 2c       	mov	r11, r1
     27e:	c1 2c       	mov	r12, r1
     280:	d1 2c       	mov	r13, r1
     282:	c0 e0       	ldi	r28, 0x00	; 0
     284:	d0 e0       	ldi	r29, 0x00	; 0
     286:	61 e0       	ldi	r22, 0x01	; 1
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0a 2c       	mov	r0, r10
     290:	04 c0       	rjmp	.+8      	; 0x29a <__fixunssfdi+0xc8>
     292:	66 0f       	add	r22, r22
     294:	77 1f       	adc	r23, r23
     296:	88 1f       	adc	r24, r24
     298:	99 1f       	adc	r25, r25
     29a:	0a 94       	dec	r0
     29c:	d2 f7       	brpl	.-12     	; 0x292 <__fixunssfdi+0xc0>
     29e:	0e 94 b3 17 	call	0x2f66	; 0x2f66 <__floatunsisf>
     2a2:	3b 01       	movw	r6, r22
     2a4:	4c 01       	movw	r8, r24
     2a6:	c8 01       	movw	r24, r16
     2a8:	b7 01       	movw	r22, r14
     2aa:	a4 01       	movw	r20, r8
     2ac:	93 01       	movw	r18, r6
     2ae:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__gesf2>
     2b2:	88 23       	and	r24, r24
     2b4:	64 f0       	brlt	.+24     	; 0x2ce <__fixunssfdi+0xfc>
     2b6:	2a 28       	or	r2, r10
     2b8:	3b 28       	or	r3, r11
     2ba:	4c 28       	or	r4, r12
     2bc:	5d 28       	or	r5, r13
     2be:	c8 01       	movw	r24, r16
     2c0:	b7 01       	movw	r22, r14
     2c2:	a4 01       	movw	r20, r8
     2c4:	93 01       	movw	r18, r6
     2c6:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <__divsf3>
     2ca:	7b 01       	movw	r14, r22
     2cc:	8c 01       	movw	r16, r24
     2ce:	d6 94       	lsr	r13
     2d0:	c7 94       	ror	r12
     2d2:	b7 94       	ror	r11
     2d4:	a7 94       	ror	r10
     2d6:	21 96       	adiw	r28, 0x01	; 1
     2d8:	c5 30       	cpi	r28, 0x05	; 5
     2da:	d1 05       	cpc	r29, r1
     2dc:	a1 f6       	brne	.-88     	; 0x286 <__fixunssfdi+0xb4>
     2de:	c8 01       	movw	r24, r16
     2e0:	b7 01       	movw	r22, r14
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e8       	ldi	r20, 0x80	; 128
     2e8:	5f e4       	ldi	r21, 0x4F	; 79
     2ea:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
     2ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     2f2:	5b 01       	movw	r10, r22
     2f4:	6c 01       	movw	r12, r24
     2f6:	9b 01       	movw	r18, r22
     2f8:	a6 01       	movw	r20, r12
     2fa:	60 e0       	ldi	r22, 0x00	; 0
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	02 2d       	mov	r16, r2
     304:	0e 94 2c 18 	call	0x3058	; 0x3058 <__ashldi3>
     308:	59 01       	movw	r10, r18
     30a:	6a 01       	movw	r12, r20
     30c:	7b 01       	movw	r14, r22
     30e:	8c 01       	movw	r16, r24
     310:	95 01       	movw	r18, r10
     312:	a6 01       	movw	r20, r12
     314:	b7 01       	movw	r22, r14
     316:	c8 01       	movw	r24, r16
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	e2 e1       	ldi	r30, 0x12	; 18
     31e:	0c 94 82 31 	jmp	0x6304	; 0x6304 <__epilogue_restores__>

00000322 <__floatdisf>:
     322:	a4 e0       	ldi	r26, 0x04	; 4
     324:	b0 e0       	ldi	r27, 0x00	; 0
     326:	e7 e9       	ldi	r30, 0x97	; 151
     328:	f1 e0       	ldi	r31, 0x01	; 1
     32a:	0c 94 68 31 	jmp	0x62d0	; 0x62d0 <__prologue_saves__+0x4>
     32e:	49 01       	movw	r8, r18
     330:	5a 01       	movw	r10, r20
     332:	6b 01       	movw	r12, r22
     334:	7c 01       	movw	r14, r24
     336:	d5 01       	movw	r26, r10
     338:	c4 01       	movw	r24, r8
     33a:	9c 01       	movw	r18, r24
     33c:	ad 01       	movw	r20, r26
     33e:	55 0f       	add	r21, r21
     340:	22 0b       	sbc	r18, r18
     342:	32 2f       	mov	r19, r18
     344:	a9 01       	movw	r20, r18
     346:	88 15       	cp	r24, r8
     348:	99 f4       	brne	.+38     	; 0x370 <__floatdisf+0x4e>
     34a:	99 15       	cp	r25, r9
     34c:	89 f4       	brne	.+34     	; 0x370 <__floatdisf+0x4e>
     34e:	aa 15       	cp	r26, r10
     350:	79 f4       	brne	.+30     	; 0x370 <__floatdisf+0x4e>
     352:	bb 15       	cp	r27, r11
     354:	69 f4       	brne	.+26     	; 0x370 <__floatdisf+0x4e>
     356:	2c 15       	cp	r18, r12
     358:	59 f4       	brne	.+22     	; 0x370 <__floatdisf+0x4e>
     35a:	2d 15       	cp	r18, r13
     35c:	49 f4       	brne	.+18     	; 0x370 <__floatdisf+0x4e>
     35e:	2e 15       	cp	r18, r14
     360:	39 f4       	brne	.+14     	; 0x370 <__floatdisf+0x4e>
     362:	2f 15       	cp	r18, r15
     364:	29 f4       	brne	.+10     	; 0x370 <__floatdisf+0x4e>
     366:	c5 01       	movw	r24, r10
     368:	b4 01       	movw	r22, r8
     36a:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
     36e:	d0 c0       	rjmp	.+416    	; 0x510 <__floatdisf+0x1ee>
     370:	94 01       	movw	r18, r8
     372:	a5 01       	movw	r20, r10
     374:	b6 01       	movw	r22, r12
     376:	c7 01       	movw	r24, r14
     378:	00 e2       	ldi	r16, 0x20	; 32
     37a:	0e 94 ab 18 	call	0x3156	; 0x3156 <__ashrdi3>
     37e:	c9 01       	movw	r24, r18
     380:	a4 2f       	mov	r26, r20
     382:	b5 2f       	mov	r27, r21
     384:	b7 ff       	sbrs	r27, 7
     386:	07 c0       	rjmp	.+14     	; 0x396 <__floatdisf+0x74>
     388:	b0 95       	com	r27
     38a:	a0 95       	com	r26
     38c:	90 95       	com	r25
     38e:	81 95       	neg	r24
     390:	9f 4f       	sbci	r25, 0xFF	; 255
     392:	af 4f       	sbci	r26, 0xFF	; 255
     394:	bf 4f       	sbci	r27, 0xFF	; 255
     396:	80 30       	cpi	r24, 0x00	; 0
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	92 07       	cpc	r25, r18
     39c:	21 e0       	ldi	r18, 0x01	; 1
     39e:	a2 07       	cpc	r26, r18
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	b2 07       	cpc	r27, r18
     3a4:	80 f4       	brcc	.+32     	; 0x3c6 <__floatdisf+0xa4>
     3a6:	8f 3f       	cpi	r24, 0xFF	; 255
     3a8:	91 05       	cpc	r25, r1
     3aa:	a1 05       	cpc	r26, r1
     3ac:	b1 05       	cpc	r27, r1
     3ae:	31 f0       	breq	.+12     	; 0x3bc <__floatdisf+0x9a>
     3b0:	28 f0       	brcs	.+10     	; 0x3bc <__floatdisf+0x9a>
     3b2:	28 e0       	ldi	r18, 0x08	; 8
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	50 e0       	ldi	r21, 0x00	; 0
     3ba:	16 c0       	rjmp	.+44     	; 0x3e8 <__floatdisf+0xc6>
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	40 e0       	ldi	r20, 0x00	; 0
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	11 c0       	rjmp	.+34     	; 0x3e8 <__floatdisf+0xc6>
     3c6:	80 30       	cpi	r24, 0x00	; 0
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	93 07       	cpc	r25, r19
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	a3 07       	cpc	r26, r19
     3d0:	31 e0       	ldi	r19, 0x01	; 1
     3d2:	b3 07       	cpc	r27, r19
     3d4:	28 f0       	brcs	.+10     	; 0x3e0 <__floatdisf+0xbe>
     3d6:	28 e1       	ldi	r18, 0x18	; 24
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	50 e0       	ldi	r21, 0x00	; 0
     3de:	04 c0       	rjmp	.+8      	; 0x3e8 <__floatdisf+0xc6>
     3e0:	20 e1       	ldi	r18, 0x10	; 16
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	40 e0       	ldi	r20, 0x00	; 0
     3e6:	50 e0       	ldi	r21, 0x00	; 0
     3e8:	60 e2       	ldi	r22, 0x20	; 32
     3ea:	46 2e       	mov	r4, r22
     3ec:	51 2c       	mov	r5, r1
     3ee:	61 2c       	mov	r6, r1
     3f0:	71 2c       	mov	r7, r1
     3f2:	42 1a       	sub	r4, r18
     3f4:	53 0a       	sbc	r5, r19
     3f6:	64 0a       	sbc	r6, r20
     3f8:	75 0a       	sbc	r7, r21
     3fa:	04 c0       	rjmp	.+8      	; 0x404 <__floatdisf+0xe2>
     3fc:	b6 95       	lsr	r27
     3fe:	a7 95       	ror	r26
     400:	97 95       	ror	r25
     402:	87 95       	ror	r24
     404:	2a 95       	dec	r18
     406:	d2 f7       	brpl	.-12     	; 0x3fc <__floatdisf+0xda>
     408:	fc 01       	movw	r30, r24
     40a:	ea 56       	subi	r30, 0x6A	; 106
     40c:	ff 4f       	sbci	r31, 0xFF	; 255
     40e:	80 81       	ld	r24, Z
     410:	48 1a       	sub	r4, r24
     412:	51 08       	sbc	r5, r1
     414:	61 08       	sbc	r6, r1
     416:	71 08       	sbc	r7, r1
     418:	41 14       	cp	r4, r1
     41a:	51 04       	cpc	r5, r1
     41c:	61 04       	cpc	r6, r1
     41e:	71 04       	cpc	r7, r1
     420:	29 f4       	brne	.+10     	; 0x42c <__floatdisf+0x10a>
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	70 e0       	ldi	r23, 0x00	; 0
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	9f ed       	ldi	r25, 0xDF	; 223
     42a:	72 c0       	rjmp	.+228    	; 0x510 <__floatdisf+0x1ee>
     42c:	81 e2       	ldi	r24, 0x21	; 33
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	a0 e0       	ldi	r26, 0x00	; 0
     432:	b0 e0       	ldi	r27, 0x00	; 0
     434:	84 19       	sub	r24, r4
     436:	95 09       	sbc	r25, r5
     438:	a6 09       	sbc	r26, r6
     43a:	b7 09       	sbc	r27, r7
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	9a 83       	std	Y+2, r25	; 0x02
     440:	ab 83       	std	Y+3, r26	; 0x03
     442:	bc 83       	std	Y+4, r27	; 0x04
     444:	19 81       	ldd	r17, Y+1	; 0x01
     446:	94 01       	movw	r18, r8
     448:	a5 01       	movw	r20, r10
     44a:	b6 01       	movw	r22, r12
     44c:	c7 01       	movw	r24, r14
     44e:	01 2f       	mov	r16, r17
     450:	0e 94 ab 18 	call	0x3156	; 0x3156 <__ashrdi3>
     454:	c9 01       	movw	r24, r18
     456:	da 01       	movw	r26, r20
     458:	2c 01       	movw	r4, r24
     45a:	3d 01       	movw	r6, r26
     45c:	80 e2       	ldi	r24, 0x20	; 32
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	a9 81       	ldd	r26, Y+1	; 0x01
     462:	ba 81       	ldd	r27, Y+2	; 0x02
     464:	8a 1b       	sub	r24, r26
     466:	9b 0b       	sbc	r25, r27
     468:	a5 01       	movw	r20, r10
     46a:	94 01       	movw	r18, r8
     46c:	04 c0       	rjmp	.+8      	; 0x476 <__floatdisf+0x154>
     46e:	22 0f       	add	r18, r18
     470:	33 1f       	adc	r19, r19
     472:	44 1f       	adc	r20, r20
     474:	55 1f       	adc	r21, r21
     476:	8a 95       	dec	r24
     478:	d2 f7       	brpl	.-12     	; 0x46e <__floatdisf+0x14c>
     47a:	21 15       	cp	r18, r1
     47c:	31 05       	cpc	r19, r1
     47e:	41 05       	cpc	r20, r1
     480:	51 05       	cpc	r21, r1
     482:	41 f0       	breq	.+16     	; 0x494 <__floatdisf+0x172>
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	a0 e0       	ldi	r26, 0x00	; 0
     48a:	b0 e0       	ldi	r27, 0x00	; 0
     48c:	48 2a       	or	r4, r24
     48e:	59 2a       	or	r5, r25
     490:	6a 2a       	or	r6, r26
     492:	7b 2a       	or	r7, r27
     494:	29 81       	ldd	r18, Y+1	; 0x01
     496:	3a 81       	ldd	r19, Y+2	; 0x02
     498:	4b 81       	ldd	r20, Y+3	; 0x03
     49a:	5c 81       	ldd	r21, Y+4	; 0x04
     49c:	20 32       	cpi	r18, 0x20	; 32
     49e:	31 05       	cpc	r19, r1
     4a0:	41 05       	cpc	r20, r1
     4a2:	51 05       	cpc	r21, r1
     4a4:	59 f4       	brne	.+22     	; 0x4bc <__floatdisf+0x19a>
     4a6:	0f 2e       	mov	r0, r31
     4a8:	f0 e0       	ldi	r31, 0x00	; 0
     4aa:	cf 2e       	mov	r12, r31
     4ac:	f0 e0       	ldi	r31, 0x00	; 0
     4ae:	df 2e       	mov	r13, r31
     4b0:	f0 e8       	ldi	r31, 0x80	; 128
     4b2:	ef 2e       	mov	r14, r31
     4b4:	ff e4       	ldi	r31, 0x4F	; 79
     4b6:	ff 2e       	mov	r15, r31
     4b8:	f0 2d       	mov	r31, r0
     4ba:	22 c0       	rjmp	.+68     	; 0x500 <__floatdisf+0x1de>
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	9a 81       	ldd	r25, Y+2	; 0x02
     4c0:	ab 81       	ldd	r26, Y+3	; 0x03
     4c2:	bc 81       	ldd	r27, Y+4	; 0x04
     4c4:	4f 97       	sbiw	r24, 0x1f	; 31
     4c6:	a1 05       	cpc	r26, r1
     4c8:	b1 05       	cpc	r27, r1
     4ca:	59 f4       	brne	.+22     	; 0x4e2 <__floatdisf+0x1c0>
     4cc:	0f 2e       	mov	r0, r31
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	cf 2e       	mov	r12, r31
     4d2:	f0 e0       	ldi	r31, 0x00	; 0
     4d4:	df 2e       	mov	r13, r31
     4d6:	f0 e0       	ldi	r31, 0x00	; 0
     4d8:	ef 2e       	mov	r14, r31
     4da:	ff e4       	ldi	r31, 0x4F	; 79
     4dc:	ff 2e       	mov	r15, r31
     4de:	f0 2d       	mov	r31, r0
     4e0:	0f c0       	rjmp	.+30     	; 0x500 <__floatdisf+0x1de>
     4e2:	61 e0       	ldi	r22, 0x01	; 1
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <__floatdisf+0x1d2>
     4ec:	66 0f       	add	r22, r22
     4ee:	77 1f       	adc	r23, r23
     4f0:	88 1f       	adc	r24, r24
     4f2:	99 1f       	adc	r25, r25
     4f4:	1a 95       	dec	r17
     4f6:	d2 f7       	brpl	.-12     	; 0x4ec <__floatdisf+0x1ca>
     4f8:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
     4fc:	6b 01       	movw	r12, r22
     4fe:	7c 01       	movw	r14, r24
     500:	c3 01       	movw	r24, r6
     502:	b2 01       	movw	r22, r4
     504:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
     508:	a7 01       	movw	r20, r14
     50a:	96 01       	movw	r18, r12
     50c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
     510:	24 96       	adiw	r28, 0x04	; 4
     512:	e0 e1       	ldi	r30, 0x10	; 16
     514:	0c 94 84 31 	jmp	0x6308	; 0x6308 <__epilogue_restores__+0x4>

00000518 <__divdi3>:
     518:	a2 e7       	ldi	r26, 0x72	; 114
     51a:	b0 e0       	ldi	r27, 0x00	; 0
     51c:	e2 e9       	ldi	r30, 0x92	; 146
     51e:	f2 e0       	ldi	r31, 0x02	; 2
     520:	0c 94 66 31 	jmp	0x62cc	; 0x62cc <__prologue_saves__>
     524:	98 2e       	mov	r9, r24
     526:	89 2e       	mov	r8, r25
     528:	71 2e       	mov	r7, r17
     52a:	88 e0       	ldi	r24, 0x08	; 8
     52c:	fe 01       	movw	r30, r28
     52e:	31 96       	adiw	r30, 0x01	; 1
     530:	df 01       	movw	r26, r30
     532:	68 2e       	mov	r6, r24
     534:	1d 92       	st	X+, r1
     536:	6a 94       	dec	r6
     538:	e9 f7       	brne	.-6      	; 0x534 <__divdi3+0x1c>
     53a:	29 83       	std	Y+1, r18	; 0x01
     53c:	3a 83       	std	Y+2, r19	; 0x02
     53e:	4b 83       	std	Y+3, r20	; 0x03
     540:	5c 83       	std	Y+4, r21	; 0x04
     542:	6d 83       	std	Y+5, r22	; 0x05
     544:	7e 83       	std	Y+6, r23	; 0x06
     546:	9f 82       	std	Y+7, r9	; 0x07
     548:	98 87       	std	Y+8, r25	; 0x08
     54a:	fe 01       	movw	r30, r28
     54c:	39 96       	adiw	r30, 0x09	; 9
     54e:	df 01       	movw	r26, r30
     550:	1d 92       	st	X+, r1
     552:	8a 95       	dec	r24
     554:	e9 f7       	brne	.-6      	; 0x550 <__divdi3+0x38>
     556:	a9 86       	std	Y+9, r10	; 0x09
     558:	ba 86       	std	Y+10, r11	; 0x0a
     55a:	cb 86       	std	Y+11, r12	; 0x0b
     55c:	dc 86       	std	Y+12, r13	; 0x0c
     55e:	ed 86       	std	Y+13, r14	; 0x0d
     560:	fe 86       	std	Y+14, r15	; 0x0e
     562:	0f 87       	std	Y+15, r16	; 0x0f
     564:	18 8b       	std	Y+16, r17	; 0x10
     566:	8d 81       	ldd	r24, Y+5	; 0x05
     568:	9e 81       	ldd	r25, Y+6	; 0x06
     56a:	af 81       	ldd	r26, Y+7	; 0x07
     56c:	b8 85       	ldd	r27, Y+8	; 0x08
     56e:	b7 fd       	sbrc	r27, 7
     570:	07 c0       	rjmp	.+14     	; 0x580 <__divdi3+0x68>
     572:	e1 96       	adiw	r28, 0x31	; 49
     574:	1c ae       	std	Y+60, r1	; 0x3c
     576:	1d ae       	std	Y+61, r1	; 0x3d
     578:	1e ae       	std	Y+62, r1	; 0x3e
     57a:	1f ae       	std	Y+63, r1	; 0x3f
     57c:	e1 97       	sbiw	r28, 0x31	; 49
     57e:	64 c0       	rjmp	.+200    	; 0x648 <__divdi3+0x130>
     580:	21 95       	neg	r18
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	12 16       	cp	r1, r18
     586:	08 f0       	brcs	.+2      	; 0x58a <__divdi3+0x72>
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	31 95       	neg	r19
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	13 16       	cp	r1, r19
     590:	08 f0       	brcs	.+2      	; 0x594 <__divdi3+0x7c>
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	b3 2f       	mov	r27, r19
     596:	b8 1b       	sub	r27, r24
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	3b 17       	cp	r19, r27
     59c:	08 f0       	brcs	.+2      	; 0x5a0 <__divdi3+0x88>
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	98 2b       	or	r25, r24
     5a2:	41 95       	neg	r20
     5a4:	31 e0       	ldi	r19, 0x01	; 1
     5a6:	14 16       	cp	r1, r20
     5a8:	08 f0       	brcs	.+2      	; 0x5ac <__divdi3+0x94>
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	a4 2f       	mov	r26, r20
     5ae:	a9 1b       	sub	r26, r25
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	4a 17       	cp	r20, r26
     5b4:	08 f0       	brcs	.+2      	; 0x5b8 <__divdi3+0xa0>
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	38 2b       	or	r19, r24
     5ba:	51 95       	neg	r21
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	15 16       	cp	r1, r21
     5c0:	08 f0       	brcs	.+2      	; 0x5c4 <__divdi3+0xac>
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	f5 2f       	mov	r31, r21
     5c6:	f3 1b       	sub	r31, r19
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	5f 17       	cp	r21, r31
     5cc:	08 f0       	brcs	.+2      	; 0x5d0 <__divdi3+0xb8>
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	98 2b       	or	r25, r24
     5d2:	61 95       	neg	r22
     5d4:	31 e0       	ldi	r19, 0x01	; 1
     5d6:	16 16       	cp	r1, r22
     5d8:	08 f0       	brcs	.+2      	; 0x5dc <__divdi3+0xc4>
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	e6 2f       	mov	r30, r22
     5de:	e9 1b       	sub	r30, r25
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	6e 17       	cp	r22, r30
     5e4:	08 f0       	brcs	.+2      	; 0x5e8 <__divdi3+0xd0>
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	38 2b       	or	r19, r24
     5ea:	71 95       	neg	r23
     5ec:	41 e0       	ldi	r20, 0x01	; 1
     5ee:	17 16       	cp	r1, r23
     5f0:	08 f0       	brcs	.+2      	; 0x5f4 <__divdi3+0xdc>
     5f2:	40 e0       	ldi	r20, 0x00	; 0
     5f4:	57 2f       	mov	r21, r23
     5f6:	53 1b       	sub	r21, r19
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	75 17       	cp	r23, r21
     5fc:	08 f0       	brcs	.+2      	; 0x600 <__divdi3+0xe8>
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	48 2b       	or	r20, r24
     602:	89 2d       	mov	r24, r9
     604:	81 95       	neg	r24
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	18 16       	cp	r1, r24
     60a:	08 f0       	brcs	.+2      	; 0x60e <__divdi3+0xf6>
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	68 2e       	mov	r6, r24
     610:	64 1a       	sub	r6, r20
     612:	46 2d       	mov	r20, r6
     614:	31 e0       	ldi	r19, 0x01	; 1
     616:	86 15       	cp	r24, r6
     618:	08 f0       	brcs	.+2      	; 0x61c <__divdi3+0x104>
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	93 2b       	or	r25, r19
     61e:	88 2d       	mov	r24, r8
     620:	81 95       	neg	r24
     622:	89 1b       	sub	r24, r25
     624:	29 83       	std	Y+1, r18	; 0x01
     626:	ba 83       	std	Y+2, r27	; 0x02
     628:	ab 83       	std	Y+3, r26	; 0x03
     62a:	fc 83       	std	Y+4, r31	; 0x04
     62c:	ed 83       	std	Y+5, r30	; 0x05
     62e:	5e 83       	std	Y+6, r21	; 0x06
     630:	4f 83       	std	Y+7, r20	; 0x07
     632:	88 87       	std	Y+8, r24	; 0x08
     634:	2f ef       	ldi	r18, 0xFF	; 255
     636:	3f ef       	ldi	r19, 0xFF	; 255
     638:	4f ef       	ldi	r20, 0xFF	; 255
     63a:	5f ef       	ldi	r21, 0xFF	; 255
     63c:	e1 96       	adiw	r28, 0x31	; 49
     63e:	2c af       	std	Y+60, r18	; 0x3c
     640:	3d af       	std	Y+61, r19	; 0x3d
     642:	4e af       	std	Y+62, r20	; 0x3e
     644:	5f af       	std	Y+63, r21	; 0x3f
     646:	e1 97       	sbiw	r28, 0x31	; 49
     648:	8d 85       	ldd	r24, Y+13	; 0x0d
     64a:	9e 85       	ldd	r25, Y+14	; 0x0e
     64c:	af 85       	ldd	r26, Y+15	; 0x0f
     64e:	b8 89       	ldd	r27, Y+16	; 0x10
     650:	b7 ff       	sbrs	r27, 7
     652:	6a c0       	rjmp	.+212    	; 0x728 <__divdi3+0x210>
     654:	e1 96       	adiw	r28, 0x31	; 49
     656:	4c ad       	ldd	r20, Y+60	; 0x3c
     658:	5d ad       	ldd	r21, Y+61	; 0x3d
     65a:	6e ad       	ldd	r22, Y+62	; 0x3e
     65c:	7f ad       	ldd	r23, Y+63	; 0x3f
     65e:	e1 97       	sbiw	r28, 0x31	; 49
     660:	40 95       	com	r20
     662:	50 95       	com	r21
     664:	60 95       	com	r22
     666:	70 95       	com	r23
     668:	e1 96       	adiw	r28, 0x31	; 49
     66a:	4c af       	std	Y+60, r20	; 0x3c
     66c:	5d af       	std	Y+61, r21	; 0x3d
     66e:	6e af       	std	Y+62, r22	; 0x3e
     670:	7f af       	std	Y+63, r23	; 0x3f
     672:	e1 97       	sbiw	r28, 0x31	; 49
     674:	a1 94       	neg	r10
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	1a 14       	cp	r1, r10
     67a:	08 f0       	brcs	.+2      	; 0x67e <__divdi3+0x166>
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	b1 94       	neg	r11
     680:	91 e0       	ldi	r25, 0x01	; 1
     682:	1b 14       	cp	r1, r11
     684:	08 f0       	brcs	.+2      	; 0x688 <__divdi3+0x170>
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	6b 2d       	mov	r22, r11
     68a:	68 1b       	sub	r22, r24
     68c:	81 e0       	ldi	r24, 0x01	; 1
     68e:	b6 16       	cp	r11, r22
     690:	08 f0       	brcs	.+2      	; 0x694 <__divdi3+0x17c>
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	98 2b       	or	r25, r24
     696:	c1 94       	neg	r12
     698:	21 e0       	ldi	r18, 0x01	; 1
     69a:	1c 14       	cp	r1, r12
     69c:	08 f0       	brcs	.+2      	; 0x6a0 <__divdi3+0x188>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	5c 2d       	mov	r21, r12
     6a2:	59 1b       	sub	r21, r25
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	c5 16       	cp	r12, r21
     6a8:	08 f0       	brcs	.+2      	; 0x6ac <__divdi3+0x194>
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	28 2b       	or	r18, r24
     6ae:	d1 94       	neg	r13
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	1d 14       	cp	r1, r13
     6b4:	08 f0       	brcs	.+2      	; 0x6b8 <__divdi3+0x1a0>
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	4d 2d       	mov	r20, r13
     6ba:	42 1b       	sub	r20, r18
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	d4 16       	cp	r13, r20
     6c0:	08 f0       	brcs	.+2      	; 0x6c4 <__divdi3+0x1ac>
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	98 2b       	or	r25, r24
     6c6:	e1 94       	neg	r14
     6c8:	21 e0       	ldi	r18, 0x01	; 1
     6ca:	1e 14       	cp	r1, r14
     6cc:	08 f0       	brcs	.+2      	; 0x6d0 <__divdi3+0x1b8>
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	3e 2d       	mov	r19, r14
     6d2:	39 1b       	sub	r19, r25
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	e3 16       	cp	r14, r19
     6d8:	08 f0       	brcs	.+2      	; 0x6dc <__divdi3+0x1c4>
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	28 2b       	or	r18, r24
     6de:	f1 94       	neg	r15
     6e0:	91 e0       	ldi	r25, 0x01	; 1
     6e2:	1f 14       	cp	r1, r15
     6e4:	08 f0       	brcs	.+2      	; 0x6e8 <__divdi3+0x1d0>
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	7f 2d       	mov	r23, r15
     6ea:	72 1b       	sub	r23, r18
     6ec:	27 2f       	mov	r18, r23
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	f7 16       	cp	r15, r23
     6f2:	08 f0       	brcs	.+2      	; 0x6f6 <__divdi3+0x1de>
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	98 2b       	or	r25, r24
     6f8:	01 95       	neg	r16
     6fa:	11 e0       	ldi	r17, 0x01	; 1
     6fc:	10 16       	cp	r1, r16
     6fe:	08 f0       	brcs	.+2      	; 0x702 <__divdi3+0x1ea>
     700:	10 e0       	ldi	r17, 0x00	; 0
     702:	80 2f       	mov	r24, r16
     704:	89 1b       	sub	r24, r25
     706:	98 2f       	mov	r25, r24
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	09 17       	cp	r16, r25
     70c:	08 f0       	brcs	.+2      	; 0x710 <__divdi3+0x1f8>
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	18 2b       	or	r17, r24
     712:	87 2d       	mov	r24, r7
     714:	81 95       	neg	r24
     716:	81 1b       	sub	r24, r17
     718:	a9 86       	std	Y+9, r10	; 0x09
     71a:	6a 87       	std	Y+10, r22	; 0x0a
     71c:	5b 87       	std	Y+11, r21	; 0x0b
     71e:	4c 87       	std	Y+12, r20	; 0x0c
     720:	3d 87       	std	Y+13, r19	; 0x0d
     722:	2e 87       	std	Y+14, r18	; 0x0e
     724:	9f 87       	std	Y+15, r25	; 0x0f
     726:	88 8b       	std	Y+16, r24	; 0x10
     728:	99 81       	ldd	r25, Y+1	; 0x01
     72a:	2a 81       	ldd	r18, Y+2	; 0x02
     72c:	3b 81       	ldd	r19, Y+3	; 0x03
     72e:	4c 81       	ldd	r20, Y+4	; 0x04
     730:	5d 81       	ldd	r21, Y+5	; 0x05
     732:	6e 81       	ldd	r22, Y+6	; 0x06
     734:	7f 81       	ldd	r23, Y+7	; 0x07
     736:	a8 85       	ldd	r26, Y+8	; 0x08
     738:	b9 85       	ldd	r27, Y+9	; 0x09
     73a:	1a 85       	ldd	r17, Y+10	; 0x0a
     73c:	0b 85       	ldd	r16, Y+11	; 0x0b
     73e:	fc 84       	ldd	r15, Y+12	; 0x0c
     740:	ed 84       	ldd	r14, Y+13	; 0x0d
     742:	de 84       	ldd	r13, Y+14	; 0x0e
     744:	cf 84       	ldd	r12, Y+15	; 0x0f
     746:	b8 88       	ldd	r11, Y+16	; 0x10
     748:	88 e0       	ldi	r24, 0x08	; 8
     74a:	e1 e1       	ldi	r30, 0x11	; 17
     74c:	8e 2e       	mov	r8, r30
     74e:	91 2c       	mov	r9, r1
     750:	8c 0e       	add	r8, r28
     752:	9d 1e       	adc	r9, r29
     754:	f4 01       	movw	r30, r8
     756:	68 2e       	mov	r6, r24
     758:	11 92       	st	Z+, r1
     75a:	6a 94       	dec	r6
     75c:	e9 f7       	brne	.-6      	; 0x758 <__divdi3+0x240>
     75e:	99 8b       	std	Y+17, r25	; 0x11
     760:	2a 8b       	std	Y+18, r18	; 0x12
     762:	3b 8b       	std	Y+19, r19	; 0x13
     764:	4c 8b       	std	Y+20, r20	; 0x14
     766:	5d 8b       	std	Y+21, r21	; 0x15
     768:	6e 8b       	std	Y+22, r22	; 0x16
     76a:	7f 8b       	std	Y+23, r23	; 0x17
     76c:	a8 8f       	std	Y+24, r26	; 0x18
     76e:	9e 01       	movw	r18, r28
     770:	27 5e       	subi	r18, 0xE7	; 231
     772:	3f 4f       	sbci	r19, 0xFF	; 255
     774:	f9 01       	movw	r30, r18
     776:	11 92       	st	Z+, r1
     778:	8a 95       	dec	r24
     77a:	e9 f7       	brne	.-6      	; 0x776 <__divdi3+0x25e>
     77c:	b9 8f       	std	Y+25, r27	; 0x19
     77e:	1a 8f       	std	Y+26, r17	; 0x1a
     780:	0b 8f       	std	Y+27, r16	; 0x1b
     782:	fc 8e       	std	Y+28, r15	; 0x1c
     784:	ed 8e       	std	Y+29, r14	; 0x1d
     786:	de 8e       	std	Y+30, r13	; 0x1e
     788:	cf 8e       	std	Y+31, r12	; 0x1f
     78a:	b8 a2       	std	Y+32, r11	; 0x20
     78c:	29 8c       	ldd	r2, Y+25	; 0x19
     78e:	3a 8c       	ldd	r3, Y+26	; 0x1a
     790:	4b 8c       	ldd	r4, Y+27	; 0x1b
     792:	5c 8c       	ldd	r5, Y+28	; 0x1c
     794:	ed 8c       	ldd	r14, Y+29	; 0x1d
     796:	fe 8c       	ldd	r15, Y+30	; 0x1e
     798:	0f 8d       	ldd	r16, Y+31	; 0x1f
     79a:	18 a1       	ldd	r17, Y+32	; 0x20
     79c:	69 88       	ldd	r6, Y+17	; 0x11
     79e:	7a 88       	ldd	r7, Y+18	; 0x12
     7a0:	8b 88       	ldd	r8, Y+19	; 0x13
     7a2:	9c 88       	ldd	r9, Y+20	; 0x14
     7a4:	21 96       	adiw	r28, 0x01	; 1
     7a6:	6c ae       	std	Y+60, r6	; 0x3c
     7a8:	7d ae       	std	Y+61, r7	; 0x3d
     7aa:	8e ae       	std	Y+62, r8	; 0x3e
     7ac:	9f ae       	std	Y+63, r9	; 0x3f
     7ae:	21 97       	sbiw	r28, 0x01	; 1
     7b0:	6d 88       	ldd	r6, Y+21	; 0x15
     7b2:	7e 88       	ldd	r7, Y+22	; 0x16
     7b4:	8f 88       	ldd	r8, Y+23	; 0x17
     7b6:	98 8c       	ldd	r9, Y+24	; 0x18
     7b8:	e1 14       	cp	r14, r1
     7ba:	f1 04       	cpc	r15, r1
     7bc:	01 05       	cpc	r16, r1
     7be:	11 05       	cpc	r17, r1
     7c0:	09 f0       	breq	.+2      	; 0x7c4 <__divdi3+0x2ac>
     7c2:	d9 c3       	rjmp	.+1970   	; 0xf76 <__stack+0x717>
     7c4:	62 14       	cp	r6, r2
     7c6:	73 04       	cpc	r7, r3
     7c8:	84 04       	cpc	r8, r4
     7ca:	95 04       	cpc	r9, r5
     7cc:	08 f0       	brcs	.+2      	; 0x7d0 <__divdi3+0x2b8>
     7ce:	57 c1       	rjmp	.+686    	; 0xa7e <__stack+0x21f>
     7d0:	00 e0       	ldi	r16, 0x00	; 0
     7d2:	20 16       	cp	r2, r16
     7d4:	00 e0       	ldi	r16, 0x00	; 0
     7d6:	30 06       	cpc	r3, r16
     7d8:	01 e0       	ldi	r16, 0x01	; 1
     7da:	40 06       	cpc	r4, r16
     7dc:	00 e0       	ldi	r16, 0x00	; 0
     7de:	50 06       	cpc	r5, r16
     7e0:	88 f4       	brcc	.+34     	; 0x804 <__divdi3+0x2ec>
     7e2:	1f ef       	ldi	r17, 0xFF	; 255
     7e4:	21 16       	cp	r2, r17
     7e6:	31 04       	cpc	r3, r1
     7e8:	41 04       	cpc	r4, r1
     7ea:	51 04       	cpc	r5, r1
     7ec:	39 f0       	breq	.+14     	; 0x7fc <__divdi3+0x2e4>
     7ee:	30 f0       	brcs	.+12     	; 0x7fc <__divdi3+0x2e4>
     7f0:	48 e0       	ldi	r20, 0x08	; 8
     7f2:	e4 2e       	mov	r14, r20
     7f4:	f1 2c       	mov	r15, r1
     7f6:	01 2d       	mov	r16, r1
     7f8:	11 2d       	mov	r17, r1
     7fa:	18 c0       	rjmp	.+48     	; 0x82c <__divdi3+0x314>
     7fc:	ee 24       	eor	r14, r14
     7fe:	ff 24       	eor	r15, r15
     800:	87 01       	movw	r16, r14
     802:	14 c0       	rjmp	.+40     	; 0x82c <__divdi3+0x314>
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	22 16       	cp	r2, r18
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	32 06       	cpc	r3, r18
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	42 06       	cpc	r4, r18
     810:	21 e0       	ldi	r18, 0x01	; 1
     812:	52 06       	cpc	r5, r18
     814:	30 f0       	brcs	.+12     	; 0x822 <__divdi3+0x30a>
     816:	38 e1       	ldi	r19, 0x18	; 24
     818:	e3 2e       	mov	r14, r19
     81a:	f1 2c       	mov	r15, r1
     81c:	01 2d       	mov	r16, r1
     81e:	11 2d       	mov	r17, r1
     820:	05 c0       	rjmp	.+10     	; 0x82c <__divdi3+0x314>
     822:	20 e1       	ldi	r18, 0x10	; 16
     824:	e2 2e       	mov	r14, r18
     826:	f1 2c       	mov	r15, r1
     828:	01 2d       	mov	r16, r1
     82a:	11 2d       	mov	r17, r1
     82c:	d2 01       	movw	r26, r4
     82e:	c1 01       	movw	r24, r2
     830:	0e 2c       	mov	r0, r14
     832:	04 c0       	rjmp	.+8      	; 0x83c <__divdi3+0x324>
     834:	b6 95       	lsr	r27
     836:	a7 95       	ror	r26
     838:	97 95       	ror	r25
     83a:	87 95       	ror	r24
     83c:	0a 94       	dec	r0
     83e:	d2 f7       	brpl	.-12     	; 0x834 <__divdi3+0x31c>
     840:	8a 56       	subi	r24, 0x6A	; 106
     842:	9f 4f       	sbci	r25, 0xFF	; 255
     844:	dc 01       	movw	r26, r24
     846:	2c 91       	ld	r18, X
     848:	80 e2       	ldi	r24, 0x20	; 32
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	a0 e0       	ldi	r26, 0x00	; 0
     84e:	b0 e0       	ldi	r27, 0x00	; 0
     850:	8e 19       	sub	r24, r14
     852:	9f 09       	sbc	r25, r15
     854:	a0 0b       	sbc	r26, r16
     856:	b1 0b       	sbc	r27, r17
     858:	7c 01       	movw	r14, r24
     85a:	8d 01       	movw	r16, r26
     85c:	e2 1a       	sub	r14, r18
     85e:	f1 08       	sbc	r15, r1
     860:	01 09       	sbc	r16, r1
     862:	11 09       	sbc	r17, r1
     864:	e1 14       	cp	r14, r1
     866:	f1 04       	cpc	r15, r1
     868:	01 05       	cpc	r16, r1
     86a:	11 05       	cpc	r17, r1
     86c:	d1 f1       	breq	.+116    	; 0x8e2 <__stack+0x83>
     86e:	0e 2c       	mov	r0, r14
     870:	04 c0       	rjmp	.+8      	; 0x87a <__stack+0x1b>
     872:	22 0c       	add	r2, r2
     874:	33 1c       	adc	r3, r3
     876:	44 1c       	adc	r4, r4
     878:	55 1c       	adc	r5, r5
     87a:	0a 94       	dec	r0
     87c:	d2 f7       	brpl	.-12     	; 0x872 <__stack+0x13>
     87e:	a4 01       	movw	r20, r8
     880:	93 01       	movw	r18, r6
     882:	0e 2c       	mov	r0, r14
     884:	04 c0       	rjmp	.+8      	; 0x88e <__stack+0x2f>
     886:	22 0f       	add	r18, r18
     888:	33 1f       	adc	r19, r19
     88a:	44 1f       	adc	r20, r20
     88c:	55 1f       	adc	r21, r21
     88e:	0a 94       	dec	r0
     890:	d2 f7       	brpl	.-12     	; 0x886 <__stack+0x27>
     892:	80 e2       	ldi	r24, 0x20	; 32
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	8e 19       	sub	r24, r14
     898:	9f 09       	sbc	r25, r15
     89a:	21 96       	adiw	r28, 0x01	; 1
     89c:	6c ac       	ldd	r6, Y+60	; 0x3c
     89e:	7d ac       	ldd	r7, Y+61	; 0x3d
     8a0:	8e ac       	ldd	r8, Y+62	; 0x3e
     8a2:	9f ac       	ldd	r9, Y+63	; 0x3f
     8a4:	21 97       	sbiw	r28, 0x01	; 1
     8a6:	04 c0       	rjmp	.+8      	; 0x8b0 <__stack+0x51>
     8a8:	96 94       	lsr	r9
     8aa:	87 94       	ror	r8
     8ac:	77 94       	ror	r7
     8ae:	67 94       	ror	r6
     8b0:	8a 95       	dec	r24
     8b2:	d2 f7       	brpl	.-12     	; 0x8a8 <__stack+0x49>
     8b4:	62 2a       	or	r6, r18
     8b6:	73 2a       	or	r7, r19
     8b8:	84 2a       	or	r8, r20
     8ba:	95 2a       	or	r9, r21
     8bc:	21 96       	adiw	r28, 0x01	; 1
     8be:	ac ac       	ldd	r10, Y+60	; 0x3c
     8c0:	bd ac       	ldd	r11, Y+61	; 0x3d
     8c2:	ce ac       	ldd	r12, Y+62	; 0x3e
     8c4:	df ac       	ldd	r13, Y+63	; 0x3f
     8c6:	21 97       	sbiw	r28, 0x01	; 1
     8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <__stack+0x73>
     8ca:	aa 0c       	add	r10, r10
     8cc:	bb 1c       	adc	r11, r11
     8ce:	cc 1c       	adc	r12, r12
     8d0:	dd 1c       	adc	r13, r13
     8d2:	ea 94       	dec	r14
     8d4:	d2 f7       	brpl	.-12     	; 0x8ca <__stack+0x6b>
     8d6:	21 96       	adiw	r28, 0x01	; 1
     8d8:	ac ae       	std	Y+60, r10	; 0x3c
     8da:	bd ae       	std	Y+61, r11	; 0x3d
     8dc:	ce ae       	std	Y+62, r12	; 0x3e
     8de:	df ae       	std	Y+63, r13	; 0x3f
     8e0:	21 97       	sbiw	r28, 0x01	; 1
     8e2:	62 01       	movw	r12, r4
     8e4:	ee 24       	eor	r14, r14
     8e6:	ff 24       	eor	r15, r15
     8e8:	29 96       	adiw	r28, 0x09	; 9
     8ea:	cc ae       	std	Y+60, r12	; 0x3c
     8ec:	dd ae       	std	Y+61, r13	; 0x3d
     8ee:	ee ae       	std	Y+62, r14	; 0x3e
     8f0:	ff ae       	std	Y+63, r15	; 0x3f
     8f2:	29 97       	sbiw	r28, 0x09	; 9
     8f4:	92 01       	movw	r18, r4
     8f6:	81 01       	movw	r16, r2
     8f8:	20 70       	andi	r18, 0x00	; 0
     8fa:	30 70       	andi	r19, 0x00	; 0
     8fc:	2d 96       	adiw	r28, 0x0d	; 13
     8fe:	0c af       	std	Y+60, r16	; 0x3c
     900:	1d af       	std	Y+61, r17	; 0x3d
     902:	2e af       	std	Y+62, r18	; 0x3e
     904:	3f af       	std	Y+63, r19	; 0x3f
     906:	2d 97       	sbiw	r28, 0x0d	; 13
     908:	c4 01       	movw	r24, r8
     90a:	b3 01       	movw	r22, r6
     90c:	a7 01       	movw	r20, r14
     90e:	96 01       	movw	r18, r12
     910:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     914:	7b 01       	movw	r14, r22
     916:	8c 01       	movw	r16, r24
     918:	c4 01       	movw	r24, r8
     91a:	b3 01       	movw	r22, r6
     91c:	29 96       	adiw	r28, 0x09	; 9
     91e:	2c ad       	ldd	r18, Y+60	; 0x3c
     920:	3d ad       	ldd	r19, Y+61	; 0x3d
     922:	4e ad       	ldd	r20, Y+62	; 0x3e
     924:	5f ad       	ldd	r21, Y+63	; 0x3f
     926:	29 97       	sbiw	r28, 0x09	; 9
     928:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     92c:	c9 01       	movw	r24, r18
     92e:	da 01       	movw	r26, r20
     930:	3c 01       	movw	r6, r24
     932:	4d 01       	movw	r8, r26
     934:	c4 01       	movw	r24, r8
     936:	b3 01       	movw	r22, r6
     938:	2d 96       	adiw	r28, 0x0d	; 13
     93a:	2c ad       	ldd	r18, Y+60	; 0x3c
     93c:	3d ad       	ldd	r19, Y+61	; 0x3d
     93e:	4e ad       	ldd	r20, Y+62	; 0x3e
     940:	5f ad       	ldd	r21, Y+63	; 0x3f
     942:	2d 97       	sbiw	r28, 0x0d	; 13
     944:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     948:	9b 01       	movw	r18, r22
     94a:	ac 01       	movw	r20, r24
     94c:	87 01       	movw	r16, r14
     94e:	ff 24       	eor	r15, r15
     950:	ee 24       	eor	r14, r14
     952:	21 96       	adiw	r28, 0x01	; 1
     954:	ac ac       	ldd	r10, Y+60	; 0x3c
     956:	bd ac       	ldd	r11, Y+61	; 0x3d
     958:	ce ac       	ldd	r12, Y+62	; 0x3e
     95a:	df ac       	ldd	r13, Y+63	; 0x3f
     95c:	21 97       	sbiw	r28, 0x01	; 1
     95e:	c6 01       	movw	r24, r12
     960:	aa 27       	eor	r26, r26
     962:	bb 27       	eor	r27, r27
     964:	57 01       	movw	r10, r14
     966:	68 01       	movw	r12, r16
     968:	a8 2a       	or	r10, r24
     96a:	b9 2a       	or	r11, r25
     96c:	ca 2a       	or	r12, r26
     96e:	db 2a       	or	r13, r27
     970:	a2 16       	cp	r10, r18
     972:	b3 06       	cpc	r11, r19
     974:	c4 06       	cpc	r12, r20
     976:	d5 06       	cpc	r13, r21
     978:	e0 f4       	brcc	.+56     	; 0x9b2 <__stack+0x153>
     97a:	08 94       	sec
     97c:	61 08       	sbc	r6, r1
     97e:	71 08       	sbc	r7, r1
     980:	81 08       	sbc	r8, r1
     982:	91 08       	sbc	r9, r1
     984:	a2 0c       	add	r10, r2
     986:	b3 1c       	adc	r11, r3
     988:	c4 1c       	adc	r12, r4
     98a:	d5 1c       	adc	r13, r5
     98c:	a2 14       	cp	r10, r2
     98e:	b3 04       	cpc	r11, r3
     990:	c4 04       	cpc	r12, r4
     992:	d5 04       	cpc	r13, r5
     994:	70 f0       	brcs	.+28     	; 0x9b2 <__stack+0x153>
     996:	a2 16       	cp	r10, r18
     998:	b3 06       	cpc	r11, r19
     99a:	c4 06       	cpc	r12, r20
     99c:	d5 06       	cpc	r13, r21
     99e:	48 f4       	brcc	.+18     	; 0x9b2 <__stack+0x153>
     9a0:	08 94       	sec
     9a2:	61 08       	sbc	r6, r1
     9a4:	71 08       	sbc	r7, r1
     9a6:	81 08       	sbc	r8, r1
     9a8:	91 08       	sbc	r9, r1
     9aa:	a2 0c       	add	r10, r2
     9ac:	b3 1c       	adc	r11, r3
     9ae:	c4 1c       	adc	r12, r4
     9b0:	d5 1c       	adc	r13, r5
     9b2:	a2 1a       	sub	r10, r18
     9b4:	b3 0a       	sbc	r11, r19
     9b6:	c4 0a       	sbc	r12, r20
     9b8:	d5 0a       	sbc	r13, r21
     9ba:	c6 01       	movw	r24, r12
     9bc:	b5 01       	movw	r22, r10
     9be:	29 96       	adiw	r28, 0x09	; 9
     9c0:	2c ad       	ldd	r18, Y+60	; 0x3c
     9c2:	3d ad       	ldd	r19, Y+61	; 0x3d
     9c4:	4e ad       	ldd	r20, Y+62	; 0x3e
     9c6:	5f ad       	ldd	r21, Y+63	; 0x3f
     9c8:	29 97       	sbiw	r28, 0x09	; 9
     9ca:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     9ce:	7b 01       	movw	r14, r22
     9d0:	8c 01       	movw	r16, r24
     9d2:	c6 01       	movw	r24, r12
     9d4:	b5 01       	movw	r22, r10
     9d6:	29 96       	adiw	r28, 0x09	; 9
     9d8:	2c ad       	ldd	r18, Y+60	; 0x3c
     9da:	3d ad       	ldd	r19, Y+61	; 0x3d
     9dc:	4e ad       	ldd	r20, Y+62	; 0x3e
     9de:	5f ad       	ldd	r21, Y+63	; 0x3f
     9e0:	29 97       	sbiw	r28, 0x09	; 9
     9e2:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     9e6:	c9 01       	movw	r24, r18
     9e8:	da 01       	movw	r26, r20
     9ea:	5c 01       	movw	r10, r24
     9ec:	6d 01       	movw	r12, r26
     9ee:	c6 01       	movw	r24, r12
     9f0:	b5 01       	movw	r22, r10
     9f2:	2d 96       	adiw	r28, 0x0d	; 13
     9f4:	2c ad       	ldd	r18, Y+60	; 0x3c
     9f6:	3d ad       	ldd	r19, Y+61	; 0x3d
     9f8:	4e ad       	ldd	r20, Y+62	; 0x3e
     9fa:	5f ad       	ldd	r21, Y+63	; 0x3f
     9fc:	2d 97       	sbiw	r28, 0x0d	; 13
     9fe:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     a02:	9b 01       	movw	r18, r22
     a04:	ac 01       	movw	r20, r24
     a06:	87 01       	movw	r16, r14
     a08:	ff 24       	eor	r15, r15
     a0a:	ee 24       	eor	r14, r14
     a0c:	21 96       	adiw	r28, 0x01	; 1
     a0e:	8c ad       	ldd	r24, Y+60	; 0x3c
     a10:	9d ad       	ldd	r25, Y+61	; 0x3d
     a12:	ae ad       	ldd	r26, Y+62	; 0x3e
     a14:	bf ad       	ldd	r27, Y+63	; 0x3f
     a16:	21 97       	sbiw	r28, 0x01	; 1
     a18:	a0 70       	andi	r26, 0x00	; 0
     a1a:	b0 70       	andi	r27, 0x00	; 0
     a1c:	e8 2a       	or	r14, r24
     a1e:	f9 2a       	or	r15, r25
     a20:	0a 2b       	or	r16, r26
     a22:	1b 2b       	or	r17, r27
     a24:	e2 16       	cp	r14, r18
     a26:	f3 06       	cpc	r15, r19
     a28:	04 07       	cpc	r16, r20
     a2a:	15 07       	cpc	r17, r21
     a2c:	c0 f4       	brcc	.+48     	; 0xa5e <__stack+0x1ff>
     a2e:	08 94       	sec
     a30:	a1 08       	sbc	r10, r1
     a32:	b1 08       	sbc	r11, r1
     a34:	c1 08       	sbc	r12, r1
     a36:	d1 08       	sbc	r13, r1
     a38:	e2 0c       	add	r14, r2
     a3a:	f3 1c       	adc	r15, r3
     a3c:	04 1d       	adc	r16, r4
     a3e:	15 1d       	adc	r17, r5
     a40:	e2 14       	cp	r14, r2
     a42:	f3 04       	cpc	r15, r3
     a44:	04 05       	cpc	r16, r4
     a46:	15 05       	cpc	r17, r5
     a48:	50 f0       	brcs	.+20     	; 0xa5e <__stack+0x1ff>
     a4a:	e2 16       	cp	r14, r18
     a4c:	f3 06       	cpc	r15, r19
     a4e:	04 07       	cpc	r16, r20
     a50:	15 07       	cpc	r17, r21
     a52:	28 f4       	brcc	.+10     	; 0xa5e <__stack+0x1ff>
     a54:	08 94       	sec
     a56:	a1 08       	sbc	r10, r1
     a58:	b1 08       	sbc	r11, r1
     a5a:	c1 08       	sbc	r12, r1
     a5c:	d1 08       	sbc	r13, r1
     a5e:	d3 01       	movw	r26, r6
     a60:	99 27       	eor	r25, r25
     a62:	88 27       	eor	r24, r24
     a64:	86 01       	movw	r16, r12
     a66:	75 01       	movw	r14, r10
     a68:	e8 2a       	or	r14, r24
     a6a:	f9 2a       	or	r15, r25
     a6c:	0a 2b       	or	r16, r26
     a6e:	1b 2b       	or	r17, r27
     a70:	25 96       	adiw	r28, 0x05	; 5
     a72:	ec ae       	std	Y+60, r14	; 0x3c
     a74:	fd ae       	std	Y+61, r15	; 0x3d
     a76:	0e af       	std	Y+62, r16	; 0x3e
     a78:	1f af       	std	Y+63, r17	; 0x3f
     a7a:	25 97       	sbiw	r28, 0x05	; 5
     a7c:	eb c4       	rjmp	.+2518   	; 0x1454 <__stack+0xbf5>
     a7e:	21 14       	cp	r2, r1
     a80:	31 04       	cpc	r3, r1
     a82:	41 04       	cpc	r4, r1
     a84:	51 04       	cpc	r5, r1
     a86:	71 f4       	brne	.+28     	; 0xaa4 <__stack+0x245>
     a88:	61 e0       	ldi	r22, 0x01	; 1
     a8a:	70 e0       	ldi	r23, 0x00	; 0
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	40 e0       	ldi	r20, 0x00	; 0
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     a9c:	c9 01       	movw	r24, r18
     a9e:	da 01       	movw	r26, r20
     aa0:	1c 01       	movw	r2, r24
     aa2:	2d 01       	movw	r4, r26
     aa4:	00 e0       	ldi	r16, 0x00	; 0
     aa6:	20 16       	cp	r2, r16
     aa8:	00 e0       	ldi	r16, 0x00	; 0
     aaa:	30 06       	cpc	r3, r16
     aac:	01 e0       	ldi	r16, 0x01	; 1
     aae:	40 06       	cpc	r4, r16
     ab0:	00 e0       	ldi	r16, 0x00	; 0
     ab2:	50 06       	cpc	r5, r16
     ab4:	88 f4       	brcc	.+34     	; 0xad8 <__stack+0x279>
     ab6:	1f ef       	ldi	r17, 0xFF	; 255
     ab8:	21 16       	cp	r2, r17
     aba:	31 04       	cpc	r3, r1
     abc:	41 04       	cpc	r4, r1
     abe:	51 04       	cpc	r5, r1
     ac0:	31 f0       	breq	.+12     	; 0xace <__stack+0x26f>
     ac2:	28 f0       	brcs	.+10     	; 0xace <__stack+0x26f>
     ac4:	48 e0       	ldi	r20, 0x08	; 8
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	60 e0       	ldi	r22, 0x00	; 0
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	17 c0       	rjmp	.+46     	; 0xafc <__stack+0x29d>
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	60 e0       	ldi	r22, 0x00	; 0
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	12 c0       	rjmp	.+36     	; 0xafc <__stack+0x29d>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	22 16       	cp	r2, r18
     adc:	20 e0       	ldi	r18, 0x00	; 0
     ade:	32 06       	cpc	r3, r18
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	42 06       	cpc	r4, r18
     ae4:	21 e0       	ldi	r18, 0x01	; 1
     ae6:	52 06       	cpc	r5, r18
     ae8:	28 f0       	brcs	.+10     	; 0xaf4 <__stack+0x295>
     aea:	48 e1       	ldi	r20, 0x18	; 24
     aec:	50 e0       	ldi	r21, 0x00	; 0
     aee:	60 e0       	ldi	r22, 0x00	; 0
     af0:	70 e0       	ldi	r23, 0x00	; 0
     af2:	04 c0       	rjmp	.+8      	; 0xafc <__stack+0x29d>
     af4:	40 e1       	ldi	r20, 0x10	; 16
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	d2 01       	movw	r26, r4
     afe:	c1 01       	movw	r24, r2
     b00:	04 2e       	mov	r0, r20
     b02:	04 c0       	rjmp	.+8      	; 0xb0c <__stack+0x2ad>
     b04:	b6 95       	lsr	r27
     b06:	a7 95       	ror	r26
     b08:	97 95       	ror	r25
     b0a:	87 95       	ror	r24
     b0c:	0a 94       	dec	r0
     b0e:	d2 f7       	brpl	.-12     	; 0xb04 <__stack+0x2a5>
     b10:	8a 56       	subi	r24, 0x6A	; 106
     b12:	9f 4f       	sbci	r25, 0xFF	; 255
     b14:	dc 01       	movw	r26, r24
     b16:	2c 91       	ld	r18, X
     b18:	e0 e2       	ldi	r30, 0x20	; 32
     b1a:	ee 2e       	mov	r14, r30
     b1c:	f1 2c       	mov	r15, r1
     b1e:	01 2d       	mov	r16, r1
     b20:	11 2d       	mov	r17, r1
     b22:	d8 01       	movw	r26, r16
     b24:	c7 01       	movw	r24, r14
     b26:	84 1b       	sub	r24, r20
     b28:	95 0b       	sbc	r25, r21
     b2a:	a6 0b       	sbc	r26, r22
     b2c:	b7 0b       	sbc	r27, r23
     b2e:	82 1b       	sub	r24, r18
     b30:	91 09       	sbc	r25, r1
     b32:	a1 09       	sbc	r26, r1
     b34:	b1 09       	sbc	r27, r1
     b36:	00 97       	sbiw	r24, 0x00	; 0
     b38:	a1 05       	cpc	r26, r1
     b3a:	b1 05       	cpc	r27, r1
     b3c:	61 f4       	brne	.+24     	; 0xb56 <__stack+0x2f7>
     b3e:	64 01       	movw	r12, r8
     b40:	53 01       	movw	r10, r6
     b42:	a2 18       	sub	r10, r2
     b44:	b3 08       	sbc	r11, r3
     b46:	c4 08       	sbc	r12, r4
     b48:	d5 08       	sbc	r13, r5
     b4a:	31 e0       	ldi	r19, 0x01	; 1
     b4c:	63 2e       	mov	r6, r19
     b4e:	71 2c       	mov	r7, r1
     b50:	81 2c       	mov	r8, r1
     b52:	91 2c       	mov	r9, r1
     b54:	24 c1       	rjmp	.+584    	; 0xd9e <__stack+0x53f>
     b56:	e3 96       	adiw	r28, 0x33	; 51
     b58:	8f af       	std	Y+63, r24	; 0x3f
     b5a:	e3 97       	sbiw	r28, 0x33	; 51
     b5c:	08 2e       	mov	r0, r24
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__stack+0x309>
     b60:	22 0c       	add	r2, r2
     b62:	33 1c       	adc	r3, r3
     b64:	44 1c       	adc	r4, r4
     b66:	55 1c       	adc	r5, r5
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__stack+0x301>
     b6c:	ee 2d       	mov	r30, r14
     b6e:	e8 1b       	sub	r30, r24
     b70:	64 01       	movw	r12, r8
     b72:	53 01       	movw	r10, r6
     b74:	0e 2e       	mov	r0, r30
     b76:	04 c0       	rjmp	.+8      	; 0xb80 <__stack+0x321>
     b78:	d6 94       	lsr	r13
     b7a:	c7 94       	ror	r12
     b7c:	b7 94       	ror	r11
     b7e:	a7 94       	ror	r10
     b80:	0a 94       	dec	r0
     b82:	d2 f7       	brpl	.-12     	; 0xb78 <__stack+0x319>
     b84:	a4 01       	movw	r20, r8
     b86:	93 01       	movw	r18, r6
     b88:	e3 96       	adiw	r28, 0x33	; 51
     b8a:	0f ac       	ldd	r0, Y+63	; 0x3f
     b8c:	e3 97       	sbiw	r28, 0x33	; 51
     b8e:	04 c0       	rjmp	.+8      	; 0xb98 <__stack+0x339>
     b90:	22 0f       	add	r18, r18
     b92:	33 1f       	adc	r19, r19
     b94:	44 1f       	adc	r20, r20
     b96:	55 1f       	adc	r21, r21
     b98:	0a 94       	dec	r0
     b9a:	d2 f7       	brpl	.-12     	; 0xb90 <__stack+0x331>
     b9c:	21 96       	adiw	r28, 0x01	; 1
     b9e:	6c ac       	ldd	r6, Y+60	; 0x3c
     ba0:	7d ac       	ldd	r7, Y+61	; 0x3d
     ba2:	8e ac       	ldd	r8, Y+62	; 0x3e
     ba4:	9f ac       	ldd	r9, Y+63	; 0x3f
     ba6:	21 97       	sbiw	r28, 0x01	; 1
     ba8:	0e 2e       	mov	r0, r30
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__stack+0x355>
     bac:	96 94       	lsr	r9
     bae:	87 94       	ror	r8
     bb0:	77 94       	ror	r7
     bb2:	67 94       	ror	r6
     bb4:	0a 94       	dec	r0
     bb6:	d2 f7       	brpl	.-12     	; 0xbac <__stack+0x34d>
     bb8:	84 01       	movw	r16, r8
     bba:	73 01       	movw	r14, r6
     bbc:	e2 2a       	or	r14, r18
     bbe:	f3 2a       	or	r15, r19
     bc0:	04 2b       	or	r16, r20
     bc2:	15 2b       	or	r17, r21
     bc4:	e9 ae       	std	Y+57, r14	; 0x39
     bc6:	fa ae       	std	Y+58, r15	; 0x3a
     bc8:	0b af       	std	Y+59, r16	; 0x3b
     bca:	1c af       	std	Y+60, r17	; 0x3c
     bcc:	32 01       	movw	r6, r4
     bce:	88 24       	eor	r8, r8
     bd0:	99 24       	eor	r9, r9
     bd2:	92 01       	movw	r18, r4
     bd4:	81 01       	movw	r16, r2
     bd6:	20 70       	andi	r18, 0x00	; 0
     bd8:	30 70       	andi	r19, 0x00	; 0
     bda:	61 96       	adiw	r28, 0x11	; 17
     bdc:	0c af       	std	Y+60, r16	; 0x3c
     bde:	1d af       	std	Y+61, r17	; 0x3d
     be0:	2e af       	std	Y+62, r18	; 0x3e
     be2:	3f af       	std	Y+63, r19	; 0x3f
     be4:	61 97       	sbiw	r28, 0x11	; 17
     be6:	c6 01       	movw	r24, r12
     be8:	b5 01       	movw	r22, r10
     bea:	a4 01       	movw	r20, r8
     bec:	93 01       	movw	r18, r6
     bee:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     bf2:	7b 01       	movw	r14, r22
     bf4:	8c 01       	movw	r16, r24
     bf6:	c6 01       	movw	r24, r12
     bf8:	b5 01       	movw	r22, r10
     bfa:	a4 01       	movw	r20, r8
     bfc:	93 01       	movw	r18, r6
     bfe:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     c02:	c9 01       	movw	r24, r18
     c04:	da 01       	movw	r26, r20
     c06:	65 96       	adiw	r28, 0x15	; 21
     c08:	8c af       	std	Y+60, r24	; 0x3c
     c0a:	9d af       	std	Y+61, r25	; 0x3d
     c0c:	ae af       	std	Y+62, r26	; 0x3e
     c0e:	bf af       	std	Y+63, r27	; 0x3f
     c10:	65 97       	sbiw	r28, 0x15	; 21
     c12:	bc 01       	movw	r22, r24
     c14:	cd 01       	movw	r24, r26
     c16:	61 96       	adiw	r28, 0x11	; 17
     c18:	2c ad       	ldd	r18, Y+60	; 0x3c
     c1a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c1c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c1e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c20:	61 97       	sbiw	r28, 0x11	; 17
     c22:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     c26:	9b 01       	movw	r18, r22
     c28:	ac 01       	movw	r20, r24
     c2a:	87 01       	movw	r16, r14
     c2c:	ff 24       	eor	r15, r15
     c2e:	ee 24       	eor	r14, r14
     c30:	a9 ac       	ldd	r10, Y+57	; 0x39
     c32:	ba ac       	ldd	r11, Y+58	; 0x3a
     c34:	cb ac       	ldd	r12, Y+59	; 0x3b
     c36:	dc ac       	ldd	r13, Y+60	; 0x3c
     c38:	c6 01       	movw	r24, r12
     c3a:	aa 27       	eor	r26, r26
     c3c:	bb 27       	eor	r27, r27
     c3e:	5c 01       	movw	r10, r24
     c40:	6d 01       	movw	r12, r26
     c42:	ae 28       	or	r10, r14
     c44:	bf 28       	or	r11, r15
     c46:	c0 2a       	or	r12, r16
     c48:	d1 2a       	or	r13, r17
     c4a:	a2 16       	cp	r10, r18
     c4c:	b3 06       	cpc	r11, r19
     c4e:	c4 06       	cpc	r12, r20
     c50:	d5 06       	cpc	r13, r21
     c52:	60 f5       	brcc	.+88     	; 0xcac <__stack+0x44d>
     c54:	65 96       	adiw	r28, 0x15	; 21
     c56:	6c ad       	ldd	r22, Y+60	; 0x3c
     c58:	7d ad       	ldd	r23, Y+61	; 0x3d
     c5a:	8e ad       	ldd	r24, Y+62	; 0x3e
     c5c:	9f ad       	ldd	r25, Y+63	; 0x3f
     c5e:	65 97       	sbiw	r28, 0x15	; 21
     c60:	61 50       	subi	r22, 0x01	; 1
     c62:	70 40       	sbci	r23, 0x00	; 0
     c64:	80 40       	sbci	r24, 0x00	; 0
     c66:	90 40       	sbci	r25, 0x00	; 0
     c68:	65 96       	adiw	r28, 0x15	; 21
     c6a:	6c af       	std	Y+60, r22	; 0x3c
     c6c:	7d af       	std	Y+61, r23	; 0x3d
     c6e:	8e af       	std	Y+62, r24	; 0x3e
     c70:	9f af       	std	Y+63, r25	; 0x3f
     c72:	65 97       	sbiw	r28, 0x15	; 21
     c74:	a2 0c       	add	r10, r2
     c76:	b3 1c       	adc	r11, r3
     c78:	c4 1c       	adc	r12, r4
     c7a:	d5 1c       	adc	r13, r5
     c7c:	a2 14       	cp	r10, r2
     c7e:	b3 04       	cpc	r11, r3
     c80:	c4 04       	cpc	r12, r4
     c82:	d5 04       	cpc	r13, r5
     c84:	98 f0       	brcs	.+38     	; 0xcac <__stack+0x44d>
     c86:	a2 16       	cp	r10, r18
     c88:	b3 06       	cpc	r11, r19
     c8a:	c4 06       	cpc	r12, r20
     c8c:	d5 06       	cpc	r13, r21
     c8e:	70 f4       	brcc	.+28     	; 0xcac <__stack+0x44d>
     c90:	61 50       	subi	r22, 0x01	; 1
     c92:	70 40       	sbci	r23, 0x00	; 0
     c94:	80 40       	sbci	r24, 0x00	; 0
     c96:	90 40       	sbci	r25, 0x00	; 0
     c98:	65 96       	adiw	r28, 0x15	; 21
     c9a:	6c af       	std	Y+60, r22	; 0x3c
     c9c:	7d af       	std	Y+61, r23	; 0x3d
     c9e:	8e af       	std	Y+62, r24	; 0x3e
     ca0:	9f af       	std	Y+63, r25	; 0x3f
     ca2:	65 97       	sbiw	r28, 0x15	; 21
     ca4:	a2 0c       	add	r10, r2
     ca6:	b3 1c       	adc	r11, r3
     ca8:	c4 1c       	adc	r12, r4
     caa:	d5 1c       	adc	r13, r5
     cac:	a2 1a       	sub	r10, r18
     cae:	b3 0a       	sbc	r11, r19
     cb0:	c4 0a       	sbc	r12, r20
     cb2:	d5 0a       	sbc	r13, r21
     cb4:	c6 01       	movw	r24, r12
     cb6:	b5 01       	movw	r22, r10
     cb8:	a4 01       	movw	r20, r8
     cba:	93 01       	movw	r18, r6
     cbc:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     cc0:	7b 01       	movw	r14, r22
     cc2:	8c 01       	movw	r16, r24
     cc4:	c6 01       	movw	r24, r12
     cc6:	b5 01       	movw	r22, r10
     cc8:	a4 01       	movw	r20, r8
     cca:	93 01       	movw	r18, r6
     ccc:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     cd0:	c9 01       	movw	r24, r18
     cd2:	da 01       	movw	r26, r20
     cd4:	3c 01       	movw	r6, r24
     cd6:	4d 01       	movw	r8, r26
     cd8:	c4 01       	movw	r24, r8
     cda:	b3 01       	movw	r22, r6
     cdc:	61 96       	adiw	r28, 0x11	; 17
     cde:	2c ad       	ldd	r18, Y+60	; 0x3c
     ce0:	3d ad       	ldd	r19, Y+61	; 0x3d
     ce2:	4e ad       	ldd	r20, Y+62	; 0x3e
     ce4:	5f ad       	ldd	r21, Y+63	; 0x3f
     ce6:	61 97       	sbiw	r28, 0x11	; 17
     ce8:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     cec:	9b 01       	movw	r18, r22
     cee:	ac 01       	movw	r20, r24
     cf0:	87 01       	movw	r16, r14
     cf2:	ff 24       	eor	r15, r15
     cf4:	ee 24       	eor	r14, r14
     cf6:	89 ad       	ldd	r24, Y+57	; 0x39
     cf8:	9a ad       	ldd	r25, Y+58	; 0x3a
     cfa:	ab ad       	ldd	r26, Y+59	; 0x3b
     cfc:	bc ad       	ldd	r27, Y+60	; 0x3c
     cfe:	a0 70       	andi	r26, 0x00	; 0
     d00:	b0 70       	andi	r27, 0x00	; 0
     d02:	57 01       	movw	r10, r14
     d04:	68 01       	movw	r12, r16
     d06:	a8 2a       	or	r10, r24
     d08:	b9 2a       	or	r11, r25
     d0a:	ca 2a       	or	r12, r26
     d0c:	db 2a       	or	r13, r27
     d0e:	a2 16       	cp	r10, r18
     d10:	b3 06       	cpc	r11, r19
     d12:	c4 06       	cpc	r12, r20
     d14:	d5 06       	cpc	r13, r21
     d16:	e0 f4       	brcc	.+56     	; 0xd50 <__stack+0x4f1>
     d18:	08 94       	sec
     d1a:	61 08       	sbc	r6, r1
     d1c:	71 08       	sbc	r7, r1
     d1e:	81 08       	sbc	r8, r1
     d20:	91 08       	sbc	r9, r1
     d22:	a2 0c       	add	r10, r2
     d24:	b3 1c       	adc	r11, r3
     d26:	c4 1c       	adc	r12, r4
     d28:	d5 1c       	adc	r13, r5
     d2a:	a2 14       	cp	r10, r2
     d2c:	b3 04       	cpc	r11, r3
     d2e:	c4 04       	cpc	r12, r4
     d30:	d5 04       	cpc	r13, r5
     d32:	70 f0       	brcs	.+28     	; 0xd50 <__stack+0x4f1>
     d34:	a2 16       	cp	r10, r18
     d36:	b3 06       	cpc	r11, r19
     d38:	c4 06       	cpc	r12, r20
     d3a:	d5 06       	cpc	r13, r21
     d3c:	48 f4       	brcc	.+18     	; 0xd50 <__stack+0x4f1>
     d3e:	08 94       	sec
     d40:	61 08       	sbc	r6, r1
     d42:	71 08       	sbc	r7, r1
     d44:	81 08       	sbc	r8, r1
     d46:	91 08       	sbc	r9, r1
     d48:	a2 0c       	add	r10, r2
     d4a:	b3 1c       	adc	r11, r3
     d4c:	c4 1c       	adc	r12, r4
     d4e:	d5 1c       	adc	r13, r5
     d50:	21 96       	adiw	r28, 0x01	; 1
     d52:	8c ad       	ldd	r24, Y+60	; 0x3c
     d54:	9d ad       	ldd	r25, Y+61	; 0x3d
     d56:	ae ad       	ldd	r26, Y+62	; 0x3e
     d58:	bf ad       	ldd	r27, Y+63	; 0x3f
     d5a:	21 97       	sbiw	r28, 0x01	; 1
     d5c:	e3 96       	adiw	r28, 0x33	; 51
     d5e:	0f ac       	ldd	r0, Y+63	; 0x3f
     d60:	e3 97       	sbiw	r28, 0x33	; 51
     d62:	04 c0       	rjmp	.+8      	; 0xd6c <__stack+0x50d>
     d64:	88 0f       	add	r24, r24
     d66:	99 1f       	adc	r25, r25
     d68:	aa 1f       	adc	r26, r26
     d6a:	bb 1f       	adc	r27, r27
     d6c:	0a 94       	dec	r0
     d6e:	d2 f7       	brpl	.-12     	; 0xd64 <__stack+0x505>
     d70:	21 96       	adiw	r28, 0x01	; 1
     d72:	8c af       	std	Y+60, r24	; 0x3c
     d74:	9d af       	std	Y+61, r25	; 0x3d
     d76:	ae af       	std	Y+62, r26	; 0x3e
     d78:	bf af       	std	Y+63, r27	; 0x3f
     d7a:	21 97       	sbiw	r28, 0x01	; 1
     d7c:	a2 1a       	sub	r10, r18
     d7e:	b3 0a       	sbc	r11, r19
     d80:	c4 0a       	sbc	r12, r20
     d82:	d5 0a       	sbc	r13, r21
     d84:	65 96       	adiw	r28, 0x15	; 21
     d86:	ec ac       	ldd	r14, Y+60	; 0x3c
     d88:	fd ac       	ldd	r15, Y+61	; 0x3d
     d8a:	0e ad       	ldd	r16, Y+62	; 0x3e
     d8c:	1f ad       	ldd	r17, Y+63	; 0x3f
     d8e:	65 97       	sbiw	r28, 0x15	; 21
     d90:	d7 01       	movw	r26, r14
     d92:	99 27       	eor	r25, r25
     d94:	88 27       	eor	r24, r24
     d96:	68 2a       	or	r6, r24
     d98:	79 2a       	or	r7, r25
     d9a:	8a 2a       	or	r8, r26
     d9c:	9b 2a       	or	r9, r27
     d9e:	82 01       	movw	r16, r4
     da0:	22 27       	eor	r18, r18
     da2:	33 27       	eor	r19, r19
     da4:	69 96       	adiw	r28, 0x19	; 25
     da6:	0c af       	std	Y+60, r16	; 0x3c
     da8:	1d af       	std	Y+61, r17	; 0x3d
     daa:	2e af       	std	Y+62, r18	; 0x3e
     dac:	3f af       	std	Y+63, r19	; 0x3f
     dae:	69 97       	sbiw	r28, 0x19	; 25
     db0:	a2 01       	movw	r20, r4
     db2:	91 01       	movw	r18, r2
     db4:	40 70       	andi	r20, 0x00	; 0
     db6:	50 70       	andi	r21, 0x00	; 0
     db8:	6d 96       	adiw	r28, 0x1d	; 29
     dba:	2c af       	std	Y+60, r18	; 0x3c
     dbc:	3d af       	std	Y+61, r19	; 0x3d
     dbe:	4e af       	std	Y+62, r20	; 0x3e
     dc0:	5f af       	std	Y+63, r21	; 0x3f
     dc2:	6d 97       	sbiw	r28, 0x1d	; 29
     dc4:	c6 01       	movw	r24, r12
     dc6:	b5 01       	movw	r22, r10
     dc8:	69 96       	adiw	r28, 0x19	; 25
     dca:	2c ad       	ldd	r18, Y+60	; 0x3c
     dcc:	3d ad       	ldd	r19, Y+61	; 0x3d
     dce:	4e ad       	ldd	r20, Y+62	; 0x3e
     dd0:	5f ad       	ldd	r21, Y+63	; 0x3f
     dd2:	69 97       	sbiw	r28, 0x19	; 25
     dd4:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     dd8:	7b 01       	movw	r14, r22
     dda:	8c 01       	movw	r16, r24
     ddc:	c6 01       	movw	r24, r12
     dde:	b5 01       	movw	r22, r10
     de0:	69 96       	adiw	r28, 0x19	; 25
     de2:	2c ad       	ldd	r18, Y+60	; 0x3c
     de4:	3d ad       	ldd	r19, Y+61	; 0x3d
     de6:	4e ad       	ldd	r20, Y+62	; 0x3e
     de8:	5f ad       	ldd	r21, Y+63	; 0x3f
     dea:	69 97       	sbiw	r28, 0x19	; 25
     dec:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     df0:	c9 01       	movw	r24, r18
     df2:	da 01       	movw	r26, r20
     df4:	a1 96       	adiw	r28, 0x21	; 33
     df6:	8c af       	std	Y+60, r24	; 0x3c
     df8:	9d af       	std	Y+61, r25	; 0x3d
     dfa:	ae af       	std	Y+62, r26	; 0x3e
     dfc:	bf af       	std	Y+63, r27	; 0x3f
     dfe:	a1 97       	sbiw	r28, 0x21	; 33
     e00:	bc 01       	movw	r22, r24
     e02:	cd 01       	movw	r24, r26
     e04:	6d 96       	adiw	r28, 0x1d	; 29
     e06:	2c ad       	ldd	r18, Y+60	; 0x3c
     e08:	3d ad       	ldd	r19, Y+61	; 0x3d
     e0a:	4e ad       	ldd	r20, Y+62	; 0x3e
     e0c:	5f ad       	ldd	r21, Y+63	; 0x3f
     e0e:	6d 97       	sbiw	r28, 0x1d	; 29
     e10:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     e14:	9b 01       	movw	r18, r22
     e16:	ac 01       	movw	r20, r24
     e18:	87 01       	movw	r16, r14
     e1a:	ff 24       	eor	r15, r15
     e1c:	ee 24       	eor	r14, r14
     e1e:	21 96       	adiw	r28, 0x01	; 1
     e20:	ac ac       	ldd	r10, Y+60	; 0x3c
     e22:	bd ac       	ldd	r11, Y+61	; 0x3d
     e24:	ce ac       	ldd	r12, Y+62	; 0x3e
     e26:	df ac       	ldd	r13, Y+63	; 0x3f
     e28:	21 97       	sbiw	r28, 0x01	; 1
     e2a:	c6 01       	movw	r24, r12
     e2c:	aa 27       	eor	r26, r26
     e2e:	bb 27       	eor	r27, r27
     e30:	57 01       	movw	r10, r14
     e32:	68 01       	movw	r12, r16
     e34:	a8 2a       	or	r10, r24
     e36:	b9 2a       	or	r11, r25
     e38:	ca 2a       	or	r12, r26
     e3a:	db 2a       	or	r13, r27
     e3c:	a2 16       	cp	r10, r18
     e3e:	b3 06       	cpc	r11, r19
     e40:	c4 06       	cpc	r12, r20
     e42:	d5 06       	cpc	r13, r21
     e44:	60 f5       	brcc	.+88     	; 0xe9e <__stack+0x63f>
     e46:	a1 96       	adiw	r28, 0x21	; 33
     e48:	6c ad       	ldd	r22, Y+60	; 0x3c
     e4a:	7d ad       	ldd	r23, Y+61	; 0x3d
     e4c:	8e ad       	ldd	r24, Y+62	; 0x3e
     e4e:	9f ad       	ldd	r25, Y+63	; 0x3f
     e50:	a1 97       	sbiw	r28, 0x21	; 33
     e52:	61 50       	subi	r22, 0x01	; 1
     e54:	70 40       	sbci	r23, 0x00	; 0
     e56:	80 40       	sbci	r24, 0x00	; 0
     e58:	90 40       	sbci	r25, 0x00	; 0
     e5a:	a1 96       	adiw	r28, 0x21	; 33
     e5c:	6c af       	std	Y+60, r22	; 0x3c
     e5e:	7d af       	std	Y+61, r23	; 0x3d
     e60:	8e af       	std	Y+62, r24	; 0x3e
     e62:	9f af       	std	Y+63, r25	; 0x3f
     e64:	a1 97       	sbiw	r28, 0x21	; 33
     e66:	a2 0c       	add	r10, r2
     e68:	b3 1c       	adc	r11, r3
     e6a:	c4 1c       	adc	r12, r4
     e6c:	d5 1c       	adc	r13, r5
     e6e:	a2 14       	cp	r10, r2
     e70:	b3 04       	cpc	r11, r3
     e72:	c4 04       	cpc	r12, r4
     e74:	d5 04       	cpc	r13, r5
     e76:	98 f0       	brcs	.+38     	; 0xe9e <__stack+0x63f>
     e78:	a2 16       	cp	r10, r18
     e7a:	b3 06       	cpc	r11, r19
     e7c:	c4 06       	cpc	r12, r20
     e7e:	d5 06       	cpc	r13, r21
     e80:	70 f4       	brcc	.+28     	; 0xe9e <__stack+0x63f>
     e82:	61 50       	subi	r22, 0x01	; 1
     e84:	70 40       	sbci	r23, 0x00	; 0
     e86:	80 40       	sbci	r24, 0x00	; 0
     e88:	90 40       	sbci	r25, 0x00	; 0
     e8a:	a1 96       	adiw	r28, 0x21	; 33
     e8c:	6c af       	std	Y+60, r22	; 0x3c
     e8e:	7d af       	std	Y+61, r23	; 0x3d
     e90:	8e af       	std	Y+62, r24	; 0x3e
     e92:	9f af       	std	Y+63, r25	; 0x3f
     e94:	a1 97       	sbiw	r28, 0x21	; 33
     e96:	a2 0c       	add	r10, r2
     e98:	b3 1c       	adc	r11, r3
     e9a:	c4 1c       	adc	r12, r4
     e9c:	d5 1c       	adc	r13, r5
     e9e:	a2 1a       	sub	r10, r18
     ea0:	b3 0a       	sbc	r11, r19
     ea2:	c4 0a       	sbc	r12, r20
     ea4:	d5 0a       	sbc	r13, r21
     ea6:	c6 01       	movw	r24, r12
     ea8:	b5 01       	movw	r22, r10
     eaa:	69 96       	adiw	r28, 0x19	; 25
     eac:	2c ad       	ldd	r18, Y+60	; 0x3c
     eae:	3d ad       	ldd	r19, Y+61	; 0x3d
     eb0:	4e ad       	ldd	r20, Y+62	; 0x3e
     eb2:	5f ad       	ldd	r21, Y+63	; 0x3f
     eb4:	69 97       	sbiw	r28, 0x19	; 25
     eb6:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     eba:	7b 01       	movw	r14, r22
     ebc:	8c 01       	movw	r16, r24
     ebe:	c6 01       	movw	r24, r12
     ec0:	b5 01       	movw	r22, r10
     ec2:	69 96       	adiw	r28, 0x19	; 25
     ec4:	2c ad       	ldd	r18, Y+60	; 0x3c
     ec6:	3d ad       	ldd	r19, Y+61	; 0x3d
     ec8:	4e ad       	ldd	r20, Y+62	; 0x3e
     eca:	5f ad       	ldd	r21, Y+63	; 0x3f
     ecc:	69 97       	sbiw	r28, 0x19	; 25
     ece:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
     ed2:	c9 01       	movw	r24, r18
     ed4:	da 01       	movw	r26, r20
     ed6:	5c 01       	movw	r10, r24
     ed8:	6d 01       	movw	r12, r26
     eda:	c6 01       	movw	r24, r12
     edc:	b5 01       	movw	r22, r10
     ede:	6d 96       	adiw	r28, 0x1d	; 29
     ee0:	2c ad       	ldd	r18, Y+60	; 0x3c
     ee2:	3d ad       	ldd	r19, Y+61	; 0x3d
     ee4:	4e ad       	ldd	r20, Y+62	; 0x3e
     ee6:	5f ad       	ldd	r21, Y+63	; 0x3f
     ee8:	6d 97       	sbiw	r28, 0x1d	; 29
     eea:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
     eee:	9b 01       	movw	r18, r22
     ef0:	ac 01       	movw	r20, r24
     ef2:	87 01       	movw	r16, r14
     ef4:	ff 24       	eor	r15, r15
     ef6:	ee 24       	eor	r14, r14
     ef8:	21 96       	adiw	r28, 0x01	; 1
     efa:	8c ad       	ldd	r24, Y+60	; 0x3c
     efc:	9d ad       	ldd	r25, Y+61	; 0x3d
     efe:	ae ad       	ldd	r26, Y+62	; 0x3e
     f00:	bf ad       	ldd	r27, Y+63	; 0x3f
     f02:	21 97       	sbiw	r28, 0x01	; 1
     f04:	a0 70       	andi	r26, 0x00	; 0
     f06:	b0 70       	andi	r27, 0x00	; 0
     f08:	e8 2a       	or	r14, r24
     f0a:	f9 2a       	or	r15, r25
     f0c:	0a 2b       	or	r16, r26
     f0e:	1b 2b       	or	r17, r27
     f10:	e2 16       	cp	r14, r18
     f12:	f3 06       	cpc	r15, r19
     f14:	04 07       	cpc	r16, r20
     f16:	15 07       	cpc	r17, r21
     f18:	c0 f4       	brcc	.+48     	; 0xf4a <__stack+0x6eb>
     f1a:	08 94       	sec
     f1c:	a1 08       	sbc	r10, r1
     f1e:	b1 08       	sbc	r11, r1
     f20:	c1 08       	sbc	r12, r1
     f22:	d1 08       	sbc	r13, r1
     f24:	e2 0c       	add	r14, r2
     f26:	f3 1c       	adc	r15, r3
     f28:	04 1d       	adc	r16, r4
     f2a:	15 1d       	adc	r17, r5
     f2c:	e2 14       	cp	r14, r2
     f2e:	f3 04       	cpc	r15, r3
     f30:	04 05       	cpc	r16, r4
     f32:	15 05       	cpc	r17, r5
     f34:	50 f0       	brcs	.+20     	; 0xf4a <__stack+0x6eb>
     f36:	e2 16       	cp	r14, r18
     f38:	f3 06       	cpc	r15, r19
     f3a:	04 07       	cpc	r16, r20
     f3c:	15 07       	cpc	r17, r21
     f3e:	28 f4       	brcc	.+10     	; 0xf4a <__stack+0x6eb>
     f40:	08 94       	sec
     f42:	a1 08       	sbc	r10, r1
     f44:	b1 08       	sbc	r11, r1
     f46:	c1 08       	sbc	r12, r1
     f48:	d1 08       	sbc	r13, r1
     f4a:	a1 96       	adiw	r28, 0x21	; 33
     f4c:	ec ac       	ldd	r14, Y+60	; 0x3c
     f4e:	fd ac       	ldd	r15, Y+61	; 0x3d
     f50:	0e ad       	ldd	r16, Y+62	; 0x3e
     f52:	1f ad       	ldd	r17, Y+63	; 0x3f
     f54:	a1 97       	sbiw	r28, 0x21	; 33
     f56:	d7 01       	movw	r26, r14
     f58:	99 27       	eor	r25, r25
     f5a:	88 27       	eor	r24, r24
     f5c:	96 01       	movw	r18, r12
     f5e:	85 01       	movw	r16, r10
     f60:	08 2b       	or	r16, r24
     f62:	19 2b       	or	r17, r25
     f64:	2a 2b       	or	r18, r26
     f66:	3b 2b       	or	r19, r27
     f68:	25 96       	adiw	r28, 0x05	; 5
     f6a:	0c af       	std	Y+60, r16	; 0x3c
     f6c:	1d af       	std	Y+61, r17	; 0x3d
     f6e:	2e af       	std	Y+62, r18	; 0x3e
     f70:	3f af       	std	Y+63, r19	; 0x3f
     f72:	25 97       	sbiw	r28, 0x05	; 5
     f74:	72 c2       	rjmp	.+1252   	; 0x145a <__stack+0xbfb>
     f76:	6e 14       	cp	r6, r14
     f78:	7f 04       	cpc	r7, r15
     f7a:	80 06       	cpc	r8, r16
     f7c:	91 06       	cpc	r9, r17
     f7e:	08 f4       	brcc	.+2      	; 0xf82 <__stack+0x723>
     f80:	5f c2       	rjmp	.+1214   	; 0x1440 <__stack+0xbe1>
     f82:	20 e0       	ldi	r18, 0x00	; 0
     f84:	e2 16       	cp	r14, r18
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	f2 06       	cpc	r15, r18
     f8a:	21 e0       	ldi	r18, 0x01	; 1
     f8c:	02 07       	cpc	r16, r18
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	12 07       	cpc	r17, r18
     f92:	88 f4       	brcc	.+34     	; 0xfb6 <__stack+0x757>
     f94:	3f ef       	ldi	r19, 0xFF	; 255
     f96:	e3 16       	cp	r14, r19
     f98:	f1 04       	cpc	r15, r1
     f9a:	01 05       	cpc	r16, r1
     f9c:	11 05       	cpc	r17, r1
     f9e:	31 f0       	breq	.+12     	; 0xfac <__stack+0x74d>
     fa0:	28 f0       	brcs	.+10     	; 0xfac <__stack+0x74d>
     fa2:	48 e0       	ldi	r20, 0x08	; 8
     fa4:	50 e0       	ldi	r21, 0x00	; 0
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	17 c0       	rjmp	.+46     	; 0xfda <__stack+0x77b>
     fac:	40 e0       	ldi	r20, 0x00	; 0
     fae:	50 e0       	ldi	r21, 0x00	; 0
     fb0:	60 e0       	ldi	r22, 0x00	; 0
     fb2:	70 e0       	ldi	r23, 0x00	; 0
     fb4:	12 c0       	rjmp	.+36     	; 0xfda <__stack+0x77b>
     fb6:	40 e0       	ldi	r20, 0x00	; 0
     fb8:	e4 16       	cp	r14, r20
     fba:	40 e0       	ldi	r20, 0x00	; 0
     fbc:	f4 06       	cpc	r15, r20
     fbe:	40 e0       	ldi	r20, 0x00	; 0
     fc0:	04 07       	cpc	r16, r20
     fc2:	41 e0       	ldi	r20, 0x01	; 1
     fc4:	14 07       	cpc	r17, r20
     fc6:	28 f0       	brcs	.+10     	; 0xfd2 <__stack+0x773>
     fc8:	48 e1       	ldi	r20, 0x18	; 24
     fca:	50 e0       	ldi	r21, 0x00	; 0
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	04 c0       	rjmp	.+8      	; 0xfda <__stack+0x77b>
     fd2:	40 e1       	ldi	r20, 0x10	; 16
     fd4:	50 e0       	ldi	r21, 0x00	; 0
     fd6:	60 e0       	ldi	r22, 0x00	; 0
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	d8 01       	movw	r26, r16
     fdc:	c7 01       	movw	r24, r14
     fde:	04 2e       	mov	r0, r20
     fe0:	04 c0       	rjmp	.+8      	; 0xfea <__stack+0x78b>
     fe2:	b6 95       	lsr	r27
     fe4:	a7 95       	ror	r26
     fe6:	97 95       	ror	r25
     fe8:	87 95       	ror	r24
     fea:	0a 94       	dec	r0
     fec:	d2 f7       	brpl	.-12     	; 0xfe2 <__stack+0x783>
     fee:	8a 56       	subi	r24, 0x6A	; 106
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	dc 01       	movw	r26, r24
     ff4:	2c 91       	ld	r18, X
     ff6:	30 e2       	ldi	r19, 0x20	; 32
     ff8:	a3 2e       	mov	r10, r19
     ffa:	b1 2c       	mov	r11, r1
     ffc:	c1 2c       	mov	r12, r1
     ffe:	d1 2c       	mov	r13, r1
    1000:	d6 01       	movw	r26, r12
    1002:	c5 01       	movw	r24, r10
    1004:	84 1b       	sub	r24, r20
    1006:	95 0b       	sbc	r25, r21
    1008:	a6 0b       	sbc	r26, r22
    100a:	b7 0b       	sbc	r27, r23
    100c:	82 1b       	sub	r24, r18
    100e:	91 09       	sbc	r25, r1
    1010:	a1 09       	sbc	r26, r1
    1012:	b1 09       	sbc	r27, r1
    1014:	00 97       	sbiw	r24, 0x00	; 0
    1016:	a1 05       	cpc	r26, r1
    1018:	b1 05       	cpc	r27, r1
    101a:	99 f4       	brne	.+38     	; 0x1042 <__stack+0x7e3>
    101c:	e6 14       	cp	r14, r6
    101e:	f7 04       	cpc	r15, r7
    1020:	08 05       	cpc	r16, r8
    1022:	19 05       	cpc	r17, r9
    1024:	08 f4       	brcc	.+2      	; 0x1028 <__stack+0x7c9>
    1026:	fe c1       	rjmp	.+1020   	; 0x1424 <__stack+0xbc5>
    1028:	21 96       	adiw	r28, 0x01	; 1
    102a:	6c ac       	ldd	r6, Y+60	; 0x3c
    102c:	7d ac       	ldd	r7, Y+61	; 0x3d
    102e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1030:	9f ac       	ldd	r9, Y+63	; 0x3f
    1032:	21 97       	sbiw	r28, 0x01	; 1
    1034:	62 14       	cp	r6, r2
    1036:	73 04       	cpc	r7, r3
    1038:	84 04       	cpc	r8, r4
    103a:	95 04       	cpc	r9, r5
    103c:	08 f0       	brcs	.+2      	; 0x1040 <__stack+0x7e1>
    103e:	f2 c1       	rjmp	.+996    	; 0x1424 <__stack+0xbc5>
    1040:	ff c1       	rjmp	.+1022   	; 0x1440 <__stack+0xbe1>
    1042:	e2 96       	adiw	r28, 0x32	; 50
    1044:	8f af       	std	Y+63, r24	; 0x3f
    1046:	e2 97       	sbiw	r28, 0x32	; 50
    1048:	08 2e       	mov	r0, r24
    104a:	04 c0       	rjmp	.+8      	; 0x1054 <__stack+0x7f5>
    104c:	ee 0c       	add	r14, r14
    104e:	ff 1c       	adc	r15, r15
    1050:	00 1f       	adc	r16, r16
    1052:	11 1f       	adc	r17, r17
    1054:	0a 94       	dec	r0
    1056:	d2 f7       	brpl	.-12     	; 0x104c <__stack+0x7ed>
    1058:	6a 2d       	mov	r22, r10
    105a:	68 1b       	sub	r22, r24
    105c:	d2 01       	movw	r26, r4
    105e:	c1 01       	movw	r24, r2
    1060:	06 2e       	mov	r0, r22
    1062:	04 c0       	rjmp	.+8      	; 0x106c <__stack+0x80d>
    1064:	b6 95       	lsr	r27
    1066:	a7 95       	ror	r26
    1068:	97 95       	ror	r25
    106a:	87 95       	ror	r24
    106c:	0a 94       	dec	r0
    106e:	d2 f7       	brpl	.-12     	; 0x1064 <__stack+0x805>
    1070:	5c 01       	movw	r10, r24
    1072:	6d 01       	movw	r12, r26
    1074:	ae 28       	or	r10, r14
    1076:	bf 28       	or	r11, r15
    1078:	c0 2a       	or	r12, r16
    107a:	d1 2a       	or	r13, r17
    107c:	ad aa       	std	Y+53, r10	; 0x35
    107e:	be aa       	std	Y+54, r11	; 0x36
    1080:	cf aa       	std	Y+55, r12	; 0x37
    1082:	d8 ae       	std	Y+56, r13	; 0x38
    1084:	72 01       	movw	r14, r4
    1086:	61 01       	movw	r12, r2
    1088:	e2 96       	adiw	r28, 0x32	; 50
    108a:	0f ac       	ldd	r0, Y+63	; 0x3f
    108c:	e2 97       	sbiw	r28, 0x32	; 50
    108e:	04 c0       	rjmp	.+8      	; 0x1098 <__stack+0x839>
    1090:	cc 0c       	add	r12, r12
    1092:	dd 1c       	adc	r13, r13
    1094:	ee 1c       	adc	r14, r14
    1096:	ff 1c       	adc	r15, r15
    1098:	0a 94       	dec	r0
    109a:	d2 f7       	brpl	.-12     	; 0x1090 <__stack+0x831>
    109c:	c9 aa       	std	Y+49, r12	; 0x31
    109e:	da aa       	std	Y+50, r13	; 0x32
    10a0:	eb aa       	std	Y+51, r14	; 0x33
    10a2:	fc aa       	std	Y+52, r15	; 0x34
    10a4:	64 01       	movw	r12, r8
    10a6:	53 01       	movw	r10, r6
    10a8:	06 2e       	mov	r0, r22
    10aa:	04 c0       	rjmp	.+8      	; 0x10b4 <__stack+0x855>
    10ac:	d6 94       	lsr	r13
    10ae:	c7 94       	ror	r12
    10b0:	b7 94       	ror	r11
    10b2:	a7 94       	ror	r10
    10b4:	0a 94       	dec	r0
    10b6:	d2 f7       	brpl	.-12     	; 0x10ac <__stack+0x84d>
    10b8:	d4 01       	movw	r26, r8
    10ba:	c3 01       	movw	r24, r6
    10bc:	e2 96       	adiw	r28, 0x32	; 50
    10be:	0f ac       	ldd	r0, Y+63	; 0x3f
    10c0:	e2 97       	sbiw	r28, 0x32	; 50
    10c2:	04 c0       	rjmp	.+8      	; 0x10cc <__stack+0x86d>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	aa 1f       	adc	r26, r26
    10ca:	bb 1f       	adc	r27, r27
    10cc:	0a 94       	dec	r0
    10ce:	d2 f7       	brpl	.-12     	; 0x10c4 <__stack+0x865>
    10d0:	21 96       	adiw	r28, 0x01	; 1
    10d2:	ec ac       	ldd	r14, Y+60	; 0x3c
    10d4:	fd ac       	ldd	r15, Y+61	; 0x3d
    10d6:	0e ad       	ldd	r16, Y+62	; 0x3e
    10d8:	1f ad       	ldd	r17, Y+63	; 0x3f
    10da:	21 97       	sbiw	r28, 0x01	; 1
    10dc:	04 c0       	rjmp	.+8      	; 0x10e6 <__stack+0x887>
    10de:	16 95       	lsr	r17
    10e0:	07 95       	ror	r16
    10e2:	f7 94       	ror	r15
    10e4:	e7 94       	ror	r14
    10e6:	6a 95       	dec	r22
    10e8:	d2 f7       	brpl	.-12     	; 0x10de <__stack+0x87f>
    10ea:	37 01       	movw	r6, r14
    10ec:	48 01       	movw	r8, r16
    10ee:	68 2a       	or	r6, r24
    10f0:	79 2a       	or	r7, r25
    10f2:	8a 2a       	or	r8, r26
    10f4:	9b 2a       	or	r9, r27
    10f6:	6d a6       	std	Y+45, r6	; 0x2d
    10f8:	7e a6       	std	Y+46, r7	; 0x2e
    10fa:	8f a6       	std	Y+47, r8	; 0x2f
    10fc:	98 aa       	std	Y+48, r9	; 0x30
    10fe:	ed a8       	ldd	r14, Y+53	; 0x35
    1100:	fe a8       	ldd	r15, Y+54	; 0x36
    1102:	0f a9       	ldd	r16, Y+55	; 0x37
    1104:	18 ad       	ldd	r17, Y+56	; 0x38
    1106:	38 01       	movw	r6, r16
    1108:	88 24       	eor	r8, r8
    110a:	99 24       	eor	r9, r9
    110c:	98 01       	movw	r18, r16
    110e:	87 01       	movw	r16, r14
    1110:	20 70       	andi	r18, 0x00	; 0
    1112:	30 70       	andi	r19, 0x00	; 0
    1114:	a5 96       	adiw	r28, 0x25	; 37
    1116:	0c af       	std	Y+60, r16	; 0x3c
    1118:	1d af       	std	Y+61, r17	; 0x3d
    111a:	2e af       	std	Y+62, r18	; 0x3e
    111c:	3f af       	std	Y+63, r19	; 0x3f
    111e:	a5 97       	sbiw	r28, 0x25	; 37
    1120:	c6 01       	movw	r24, r12
    1122:	b5 01       	movw	r22, r10
    1124:	a4 01       	movw	r20, r8
    1126:	93 01       	movw	r18, r6
    1128:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    112c:	7b 01       	movw	r14, r22
    112e:	8c 01       	movw	r16, r24
    1130:	c6 01       	movw	r24, r12
    1132:	b5 01       	movw	r22, r10
    1134:	a4 01       	movw	r20, r8
    1136:	93 01       	movw	r18, r6
    1138:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    113c:	c9 01       	movw	r24, r18
    113e:	da 01       	movw	r26, r20
    1140:	1c 01       	movw	r2, r24
    1142:	2d 01       	movw	r4, r26
    1144:	c2 01       	movw	r24, r4
    1146:	b1 01       	movw	r22, r2
    1148:	a5 96       	adiw	r28, 0x25	; 37
    114a:	2c ad       	ldd	r18, Y+60	; 0x3c
    114c:	3d ad       	ldd	r19, Y+61	; 0x3d
    114e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1150:	5f ad       	ldd	r21, Y+63	; 0x3f
    1152:	a5 97       	sbiw	r28, 0x25	; 37
    1154:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1158:	9b 01       	movw	r18, r22
    115a:	ac 01       	movw	r20, r24
    115c:	87 01       	movw	r16, r14
    115e:	ff 24       	eor	r15, r15
    1160:	ee 24       	eor	r14, r14
    1162:	ad a4       	ldd	r10, Y+45	; 0x2d
    1164:	be a4       	ldd	r11, Y+46	; 0x2e
    1166:	cf a4       	ldd	r12, Y+47	; 0x2f
    1168:	d8 a8       	ldd	r13, Y+48	; 0x30
    116a:	c6 01       	movw	r24, r12
    116c:	aa 27       	eor	r26, r26
    116e:	bb 27       	eor	r27, r27
    1170:	57 01       	movw	r10, r14
    1172:	68 01       	movw	r12, r16
    1174:	a8 2a       	or	r10, r24
    1176:	b9 2a       	or	r11, r25
    1178:	ca 2a       	or	r12, r26
    117a:	db 2a       	or	r13, r27
    117c:	a2 16       	cp	r10, r18
    117e:	b3 06       	cpc	r11, r19
    1180:	c4 06       	cpc	r12, r20
    1182:	d5 06       	cpc	r13, r21
    1184:	00 f5       	brcc	.+64     	; 0x11c6 <__stack+0x967>
    1186:	08 94       	sec
    1188:	21 08       	sbc	r2, r1
    118a:	31 08       	sbc	r3, r1
    118c:	41 08       	sbc	r4, r1
    118e:	51 08       	sbc	r5, r1
    1190:	ed a8       	ldd	r14, Y+53	; 0x35
    1192:	fe a8       	ldd	r15, Y+54	; 0x36
    1194:	0f a9       	ldd	r16, Y+55	; 0x37
    1196:	18 ad       	ldd	r17, Y+56	; 0x38
    1198:	ae 0c       	add	r10, r14
    119a:	bf 1c       	adc	r11, r15
    119c:	c0 1e       	adc	r12, r16
    119e:	d1 1e       	adc	r13, r17
    11a0:	ae 14       	cp	r10, r14
    11a2:	bf 04       	cpc	r11, r15
    11a4:	c0 06       	cpc	r12, r16
    11a6:	d1 06       	cpc	r13, r17
    11a8:	70 f0       	brcs	.+28     	; 0x11c6 <__stack+0x967>
    11aa:	a2 16       	cp	r10, r18
    11ac:	b3 06       	cpc	r11, r19
    11ae:	c4 06       	cpc	r12, r20
    11b0:	d5 06       	cpc	r13, r21
    11b2:	48 f4       	brcc	.+18     	; 0x11c6 <__stack+0x967>
    11b4:	08 94       	sec
    11b6:	21 08       	sbc	r2, r1
    11b8:	31 08       	sbc	r3, r1
    11ba:	41 08       	sbc	r4, r1
    11bc:	51 08       	sbc	r5, r1
    11be:	ae 0c       	add	r10, r14
    11c0:	bf 1c       	adc	r11, r15
    11c2:	c0 1e       	adc	r12, r16
    11c4:	d1 1e       	adc	r13, r17
    11c6:	a2 1a       	sub	r10, r18
    11c8:	b3 0a       	sbc	r11, r19
    11ca:	c4 0a       	sbc	r12, r20
    11cc:	d5 0a       	sbc	r13, r21
    11ce:	c6 01       	movw	r24, r12
    11d0:	b5 01       	movw	r22, r10
    11d2:	a4 01       	movw	r20, r8
    11d4:	93 01       	movw	r18, r6
    11d6:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    11da:	7b 01       	movw	r14, r22
    11dc:	8c 01       	movw	r16, r24
    11de:	c6 01       	movw	r24, r12
    11e0:	b5 01       	movw	r22, r10
    11e2:	a4 01       	movw	r20, r8
    11e4:	93 01       	movw	r18, r6
    11e6:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    11ea:	c9 01       	movw	r24, r18
    11ec:	da 01       	movw	r26, r20
    11ee:	3c 01       	movw	r6, r24
    11f0:	4d 01       	movw	r8, r26
    11f2:	c4 01       	movw	r24, r8
    11f4:	b3 01       	movw	r22, r6
    11f6:	a5 96       	adiw	r28, 0x25	; 37
    11f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    11fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    11fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    11fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1200:	a5 97       	sbiw	r28, 0x25	; 37
    1202:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1206:	9b 01       	movw	r18, r22
    1208:	ac 01       	movw	r20, r24
    120a:	87 01       	movw	r16, r14
    120c:	ff 24       	eor	r15, r15
    120e:	ee 24       	eor	r14, r14
    1210:	8d a5       	ldd	r24, Y+45	; 0x2d
    1212:	9e a5       	ldd	r25, Y+46	; 0x2e
    1214:	af a5       	ldd	r26, Y+47	; 0x2f
    1216:	b8 a9       	ldd	r27, Y+48	; 0x30
    1218:	a0 70       	andi	r26, 0x00	; 0
    121a:	b0 70       	andi	r27, 0x00	; 0
    121c:	57 01       	movw	r10, r14
    121e:	68 01       	movw	r12, r16
    1220:	a8 2a       	or	r10, r24
    1222:	b9 2a       	or	r11, r25
    1224:	ca 2a       	or	r12, r26
    1226:	db 2a       	or	r13, r27
    1228:	a2 16       	cp	r10, r18
    122a:	b3 06       	cpc	r11, r19
    122c:	c4 06       	cpc	r12, r20
    122e:	d5 06       	cpc	r13, r21
    1230:	00 f5       	brcc	.+64     	; 0x1272 <__stack+0xa13>
    1232:	08 94       	sec
    1234:	61 08       	sbc	r6, r1
    1236:	71 08       	sbc	r7, r1
    1238:	81 08       	sbc	r8, r1
    123a:	91 08       	sbc	r9, r1
    123c:	6d a9       	ldd	r22, Y+53	; 0x35
    123e:	7e a9       	ldd	r23, Y+54	; 0x36
    1240:	8f a9       	ldd	r24, Y+55	; 0x37
    1242:	98 ad       	ldd	r25, Y+56	; 0x38
    1244:	a6 0e       	add	r10, r22
    1246:	b7 1e       	adc	r11, r23
    1248:	c8 1e       	adc	r12, r24
    124a:	d9 1e       	adc	r13, r25
    124c:	a6 16       	cp	r10, r22
    124e:	b7 06       	cpc	r11, r23
    1250:	c8 06       	cpc	r12, r24
    1252:	d9 06       	cpc	r13, r25
    1254:	70 f0       	brcs	.+28     	; 0x1272 <__stack+0xa13>
    1256:	a2 16       	cp	r10, r18
    1258:	b3 06       	cpc	r11, r19
    125a:	c4 06       	cpc	r12, r20
    125c:	d5 06       	cpc	r13, r21
    125e:	48 f4       	brcc	.+18     	; 0x1272 <__stack+0xa13>
    1260:	08 94       	sec
    1262:	61 08       	sbc	r6, r1
    1264:	71 08       	sbc	r7, r1
    1266:	81 08       	sbc	r8, r1
    1268:	91 08       	sbc	r9, r1
    126a:	a6 0e       	add	r10, r22
    126c:	b7 1e       	adc	r11, r23
    126e:	c8 1e       	adc	r12, r24
    1270:	d9 1e       	adc	r13, r25
    1272:	d6 01       	movw	r26, r12
    1274:	c5 01       	movw	r24, r10
    1276:	82 1b       	sub	r24, r18
    1278:	93 0b       	sbc	r25, r19
    127a:	a4 0b       	sbc	r26, r20
    127c:	b5 0b       	sbc	r27, r21
    127e:	89 a7       	std	Y+41, r24	; 0x29
    1280:	9a a7       	std	Y+42, r25	; 0x2a
    1282:	ab a7       	std	Y+43, r26	; 0x2b
    1284:	bc a7       	std	Y+44, r27	; 0x2c
    1286:	d1 01       	movw	r26, r2
    1288:	99 27       	eor	r25, r25
    128a:	88 27       	eor	r24, r24
    128c:	64 01       	movw	r12, r8
    128e:	53 01       	movw	r10, r6
    1290:	a8 2a       	or	r10, r24
    1292:	b9 2a       	or	r11, r25
    1294:	ca 2a       	or	r12, r26
    1296:	db 2a       	or	r13, r27
    1298:	25 96       	adiw	r28, 0x05	; 5
    129a:	ac ae       	std	Y+60, r10	; 0x3c
    129c:	bd ae       	std	Y+61, r11	; 0x3d
    129e:	ce ae       	std	Y+62, r12	; 0x3e
    12a0:	df ae       	std	Y+63, r13	; 0x3f
    12a2:	25 97       	sbiw	r28, 0x05	; 5
    12a4:	86 01       	movw	r16, r12
    12a6:	75 01       	movw	r14, r10
    12a8:	2f ef       	ldi	r18, 0xFF	; 255
    12aa:	3f ef       	ldi	r19, 0xFF	; 255
    12ac:	40 e0       	ldi	r20, 0x00	; 0
    12ae:	50 e0       	ldi	r21, 0x00	; 0
    12b0:	e2 22       	and	r14, r18
    12b2:	f3 22       	and	r15, r19
    12b4:	04 23       	and	r16, r20
    12b6:	15 23       	and	r17, r21
    12b8:	a6 01       	movw	r20, r12
    12ba:	66 27       	eor	r22, r22
    12bc:	77 27       	eor	r23, r23
    12be:	ad 96       	adiw	r28, 0x2d	; 45
    12c0:	4c af       	std	Y+60, r20	; 0x3c
    12c2:	5d af       	std	Y+61, r21	; 0x3d
    12c4:	6e af       	std	Y+62, r22	; 0x3e
    12c6:	7f af       	std	Y+63, r23	; 0x3f
    12c8:	ad 97       	sbiw	r28, 0x2d	; 45
    12ca:	a9 a8       	ldd	r10, Y+49	; 0x31
    12cc:	ba a8       	ldd	r11, Y+50	; 0x32
    12ce:	cb a8       	ldd	r12, Y+51	; 0x33
    12d0:	dc a8       	ldd	r13, Y+52	; 0x34
    12d2:	6f ef       	ldi	r22, 0xFF	; 255
    12d4:	7f ef       	ldi	r23, 0xFF	; 255
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	a6 22       	and	r10, r22
    12dc:	b7 22       	and	r11, r23
    12de:	c8 22       	and	r12, r24
    12e0:	d9 22       	and	r13, r25
    12e2:	89 a9       	ldd	r24, Y+49	; 0x31
    12e4:	9a a9       	ldd	r25, Y+50	; 0x32
    12e6:	ab a9       	ldd	r26, Y+51	; 0x33
    12e8:	bc a9       	ldd	r27, Y+52	; 0x34
    12ea:	1d 01       	movw	r2, r26
    12ec:	44 24       	eor	r4, r4
    12ee:	55 24       	eor	r5, r5
    12f0:	c8 01       	movw	r24, r16
    12f2:	b7 01       	movw	r22, r14
    12f4:	a6 01       	movw	r20, r12
    12f6:	95 01       	movw	r18, r10
    12f8:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    12fc:	a9 96       	adiw	r28, 0x29	; 41
    12fe:	6c af       	std	Y+60, r22	; 0x3c
    1300:	7d af       	std	Y+61, r23	; 0x3d
    1302:	8e af       	std	Y+62, r24	; 0x3e
    1304:	9f af       	std	Y+63, r25	; 0x3f
    1306:	a9 97       	sbiw	r28, 0x29	; 41
    1308:	c8 01       	movw	r24, r16
    130a:	b7 01       	movw	r22, r14
    130c:	a2 01       	movw	r20, r4
    130e:	91 01       	movw	r18, r2
    1310:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1314:	3b 01       	movw	r6, r22
    1316:	4c 01       	movw	r8, r24
    1318:	ad 96       	adiw	r28, 0x2d	; 45
    131a:	6c ad       	ldd	r22, Y+60	; 0x3c
    131c:	7d ad       	ldd	r23, Y+61	; 0x3d
    131e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1320:	9f ad       	ldd	r25, Y+63	; 0x3f
    1322:	ad 97       	sbiw	r28, 0x2d	; 45
    1324:	a6 01       	movw	r20, r12
    1326:	95 01       	movw	r18, r10
    1328:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    132c:	7b 01       	movw	r14, r22
    132e:	8c 01       	movw	r16, r24
    1330:	ad 96       	adiw	r28, 0x2d	; 45
    1332:	6c ad       	ldd	r22, Y+60	; 0x3c
    1334:	7d ad       	ldd	r23, Y+61	; 0x3d
    1336:	8e ad       	ldd	r24, Y+62	; 0x3e
    1338:	9f ad       	ldd	r25, Y+63	; 0x3f
    133a:	ad 97       	sbiw	r28, 0x2d	; 45
    133c:	a2 01       	movw	r20, r4
    133e:	91 01       	movw	r18, r2
    1340:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1344:	5b 01       	movw	r10, r22
    1346:	6c 01       	movw	r12, r24
    1348:	a8 01       	movw	r20, r16
    134a:	97 01       	movw	r18, r14
    134c:	26 0d       	add	r18, r6
    134e:	37 1d       	adc	r19, r7
    1350:	48 1d       	adc	r20, r8
    1352:	59 1d       	adc	r21, r9
    1354:	a9 96       	adiw	r28, 0x29	; 41
    1356:	6c ac       	ldd	r6, Y+60	; 0x3c
    1358:	7d ac       	ldd	r7, Y+61	; 0x3d
    135a:	8e ac       	ldd	r8, Y+62	; 0x3e
    135c:	9f ac       	ldd	r9, Y+63	; 0x3f
    135e:	a9 97       	sbiw	r28, 0x29	; 41
    1360:	c4 01       	movw	r24, r8
    1362:	aa 27       	eor	r26, r26
    1364:	bb 27       	eor	r27, r27
    1366:	28 0f       	add	r18, r24
    1368:	39 1f       	adc	r19, r25
    136a:	4a 1f       	adc	r20, r26
    136c:	5b 1f       	adc	r21, r27
    136e:	2e 15       	cp	r18, r14
    1370:	3f 05       	cpc	r19, r15
    1372:	40 07       	cpc	r20, r16
    1374:	51 07       	cpc	r21, r17
    1376:	48 f4       	brcc	.+18     	; 0x138a <__stack+0xb2b>
    1378:	e1 2c       	mov	r14, r1
    137a:	f1 2c       	mov	r15, r1
    137c:	61 e0       	ldi	r22, 0x01	; 1
    137e:	06 2f       	mov	r16, r22
    1380:	11 2d       	mov	r17, r1
    1382:	ae 0c       	add	r10, r14
    1384:	bf 1c       	adc	r11, r15
    1386:	c0 1e       	adc	r12, r16
    1388:	d1 1e       	adc	r13, r17
    138a:	ca 01       	movw	r24, r20
    138c:	aa 27       	eor	r26, r26
    138e:	bb 27       	eor	r27, r27
    1390:	bc 01       	movw	r22, r24
    1392:	cd 01       	movw	r24, r26
    1394:	6a 0d       	add	r22, r10
    1396:	7b 1d       	adc	r23, r11
    1398:	8c 1d       	adc	r24, r12
    139a:	9d 1d       	adc	r25, r13
    139c:	69 a4       	ldd	r6, Y+41	; 0x29
    139e:	7a a4       	ldd	r7, Y+42	; 0x2a
    13a0:	8b a4       	ldd	r8, Y+43	; 0x2b
    13a2:	9c a4       	ldd	r9, Y+44	; 0x2c
    13a4:	66 16       	cp	r6, r22
    13a6:	77 06       	cpc	r7, r23
    13a8:	88 06       	cpc	r8, r24
    13aa:	99 06       	cpc	r9, r25
    13ac:	50 f1       	brcs	.+84     	; 0x1402 <__stack+0xba3>
    13ae:	66 15       	cp	r22, r6
    13b0:	77 05       	cpc	r23, r7
    13b2:	88 05       	cpc	r24, r8
    13b4:	99 05       	cpc	r25, r9
    13b6:	09 f0       	breq	.+2      	; 0x13ba <__stack+0xb5b>
    13b8:	4d c0       	rjmp	.+154    	; 0x1454 <__stack+0xbf5>
    13ba:	d9 01       	movw	r26, r18
    13bc:	99 27       	eor	r25, r25
    13be:	88 27       	eor	r24, r24
    13c0:	a9 96       	adiw	r28, 0x29	; 41
    13c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    13c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    13c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    13c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ca:	a9 97       	sbiw	r28, 0x29	; 41
    13cc:	40 70       	andi	r20, 0x00	; 0
    13ce:	50 70       	andi	r21, 0x00	; 0
    13d0:	82 0f       	add	r24, r18
    13d2:	93 1f       	adc	r25, r19
    13d4:	a4 1f       	adc	r26, r20
    13d6:	b5 1f       	adc	r27, r21
    13d8:	21 96       	adiw	r28, 0x01	; 1
    13da:	2c ad       	ldd	r18, Y+60	; 0x3c
    13dc:	3d ad       	ldd	r19, Y+61	; 0x3d
    13de:	4e ad       	ldd	r20, Y+62	; 0x3e
    13e0:	5f ad       	ldd	r21, Y+63	; 0x3f
    13e2:	21 97       	sbiw	r28, 0x01	; 1
    13e4:	e2 96       	adiw	r28, 0x32	; 50
    13e6:	0f ac       	ldd	r0, Y+63	; 0x3f
    13e8:	e2 97       	sbiw	r28, 0x32	; 50
    13ea:	04 c0       	rjmp	.+8      	; 0x13f4 <__stack+0xb95>
    13ec:	22 0f       	add	r18, r18
    13ee:	33 1f       	adc	r19, r19
    13f0:	44 1f       	adc	r20, r20
    13f2:	55 1f       	adc	r21, r21
    13f4:	0a 94       	dec	r0
    13f6:	d2 f7       	brpl	.-12     	; 0x13ec <__stack+0xb8d>
    13f8:	28 17       	cp	r18, r24
    13fa:	39 07       	cpc	r19, r25
    13fc:	4a 07       	cpc	r20, r26
    13fe:	5b 07       	cpc	r21, r27
    1400:	48 f5       	brcc	.+82     	; 0x1454 <__stack+0xbf5>
    1402:	25 96       	adiw	r28, 0x05	; 5
    1404:	0c ad       	ldd	r16, Y+60	; 0x3c
    1406:	1d ad       	ldd	r17, Y+61	; 0x3d
    1408:	2e ad       	ldd	r18, Y+62	; 0x3e
    140a:	3f ad       	ldd	r19, Y+63	; 0x3f
    140c:	25 97       	sbiw	r28, 0x05	; 5
    140e:	01 50       	subi	r16, 0x01	; 1
    1410:	10 40       	sbci	r17, 0x00	; 0
    1412:	20 40       	sbci	r18, 0x00	; 0
    1414:	30 40       	sbci	r19, 0x00	; 0
    1416:	25 96       	adiw	r28, 0x05	; 5
    1418:	0c af       	std	Y+60, r16	; 0x3c
    141a:	1d af       	std	Y+61, r17	; 0x3d
    141c:	2e af       	std	Y+62, r18	; 0x3e
    141e:	3f af       	std	Y+63, r19	; 0x3f
    1420:	25 97       	sbiw	r28, 0x05	; 5
    1422:	18 c0       	rjmp	.+48     	; 0x1454 <__stack+0xbf5>
    1424:	66 24       	eor	r6, r6
    1426:	77 24       	eor	r7, r7
    1428:	43 01       	movw	r8, r6
    142a:	21 e0       	ldi	r18, 0x01	; 1
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	40 e0       	ldi	r20, 0x00	; 0
    1430:	50 e0       	ldi	r21, 0x00	; 0
    1432:	25 96       	adiw	r28, 0x05	; 5
    1434:	2c af       	std	Y+60, r18	; 0x3c
    1436:	3d af       	std	Y+61, r19	; 0x3d
    1438:	4e af       	std	Y+62, r20	; 0x3e
    143a:	5f af       	std	Y+63, r21	; 0x3f
    143c:	25 97       	sbiw	r28, 0x05	; 5
    143e:	0d c0       	rjmp	.+26     	; 0x145a <__stack+0xbfb>
    1440:	66 24       	eor	r6, r6
    1442:	77 24       	eor	r7, r7
    1444:	43 01       	movw	r8, r6
    1446:	25 96       	adiw	r28, 0x05	; 5
    1448:	1c ae       	std	Y+60, r1	; 0x3c
    144a:	1d ae       	std	Y+61, r1	; 0x3d
    144c:	1e ae       	std	Y+62, r1	; 0x3e
    144e:	1f ae       	std	Y+63, r1	; 0x3f
    1450:	25 97       	sbiw	r28, 0x05	; 5
    1452:	03 c0       	rjmp	.+6      	; 0x145a <__stack+0xbfb>
    1454:	66 24       	eor	r6, r6
    1456:	77 24       	eor	r7, r7
    1458:	43 01       	movw	r8, r6
    145a:	fe 01       	movw	r30, r28
    145c:	b1 96       	adiw	r30, 0x21	; 33
    145e:	88 e0       	ldi	r24, 0x08	; 8
    1460:	df 01       	movw	r26, r30
    1462:	1d 92       	st	X+, r1
    1464:	8a 95       	dec	r24
    1466:	e9 f7       	brne	.-6      	; 0x1462 <__stack+0xc03>
    1468:	25 96       	adiw	r28, 0x05	; 5
    146a:	ac ac       	ldd	r10, Y+60	; 0x3c
    146c:	bd ac       	ldd	r11, Y+61	; 0x3d
    146e:	ce ac       	ldd	r12, Y+62	; 0x3e
    1470:	df ac       	ldd	r13, Y+63	; 0x3f
    1472:	25 97       	sbiw	r28, 0x05	; 5
    1474:	a9 a2       	std	Y+33, r10	; 0x21
    1476:	ba a2       	std	Y+34, r11	; 0x22
    1478:	cb a2       	std	Y+35, r12	; 0x23
    147a:	dc a2       	std	Y+36, r13	; 0x24
    147c:	6d a2       	std	Y+37, r6	; 0x25
    147e:	7e a2       	std	Y+38, r7	; 0x26
    1480:	8f a2       	std	Y+39, r8	; 0x27
    1482:	98 a6       	std	Y+40, r9	; 0x28
    1484:	22 96       	adiw	r28, 0x02	; 2
    1486:	2f ad       	ldd	r18, Y+63	; 0x3f
    1488:	22 97       	sbiw	r28, 0x02	; 2
    148a:	3a a1       	ldd	r19, Y+34	; 0x22
    148c:	4b a1       	ldd	r20, Y+35	; 0x23
    148e:	5c a1       	ldd	r21, Y+36	; 0x24
    1490:	66 2d       	mov	r22, r6
    1492:	7e a1       	ldd	r23, Y+38	; 0x26
    1494:	df a0       	ldd	r13, Y+39	; 0x27
    1496:	98 a5       	ldd	r25, Y+40	; 0x28
    1498:	e1 96       	adiw	r28, 0x31	; 49
    149a:	ec ac       	ldd	r14, Y+60	; 0x3c
    149c:	fd ac       	ldd	r15, Y+61	; 0x3d
    149e:	0e ad       	ldd	r16, Y+62	; 0x3e
    14a0:	1f ad       	ldd	r17, Y+63	; 0x3f
    14a2:	e1 97       	sbiw	r28, 0x31	; 49
    14a4:	e1 14       	cp	r14, r1
    14a6:	f1 04       	cpc	r15, r1
    14a8:	01 05       	cpc	r16, r1
    14aa:	11 05       	cpc	r17, r1
    14ac:	09 f4       	brne	.+2      	; 0x14b0 <__stack+0xc51>
    14ae:	56 c0       	rjmp	.+172    	; 0x155c <__stack+0xcfd>
    14b0:	21 95       	neg	r18
    14b2:	81 e0       	ldi	r24, 0x01	; 1
    14b4:	12 16       	cp	r1, r18
    14b6:	08 f0       	brcs	.+2      	; 0x14ba <__stack+0xc5b>
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	31 95       	neg	r19
    14bc:	e1 e0       	ldi	r30, 0x01	; 1
    14be:	13 16       	cp	r1, r19
    14c0:	08 f0       	brcs	.+2      	; 0x14c4 <__stack+0xc65>
    14c2:	e0 e0       	ldi	r30, 0x00	; 0
    14c4:	93 2e       	mov	r9, r19
    14c6:	98 1a       	sub	r9, r24
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	39 15       	cp	r19, r9
    14cc:	08 f0       	brcs	.+2      	; 0x14d0 <__stack+0xc71>
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	e8 2b       	or	r30, r24
    14d2:	41 95       	neg	r20
    14d4:	f1 e0       	ldi	r31, 0x01	; 1
    14d6:	14 16       	cp	r1, r20
    14d8:	08 f0       	brcs	.+2      	; 0x14dc <__stack+0xc7d>
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	a4 2e       	mov	r10, r20
    14de:	ae 1a       	sub	r10, r30
    14e0:	81 e0       	ldi	r24, 0x01	; 1
    14e2:	4a 15       	cp	r20, r10
    14e4:	08 f0       	brcs	.+2      	; 0x14e8 <__stack+0xc89>
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	f8 2b       	or	r31, r24
    14ea:	51 95       	neg	r21
    14ec:	e1 e0       	ldi	r30, 0x01	; 1
    14ee:	15 16       	cp	r1, r21
    14f0:	08 f0       	brcs	.+2      	; 0x14f4 <__stack+0xc95>
    14f2:	e0 e0       	ldi	r30, 0x00	; 0
    14f4:	b5 2e       	mov	r11, r21
    14f6:	bf 1a       	sub	r11, r31
    14f8:	81 e0       	ldi	r24, 0x01	; 1
    14fa:	5b 15       	cp	r21, r11
    14fc:	08 f0       	brcs	.+2      	; 0x1500 <__stack+0xca1>
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	e8 2b       	or	r30, r24
    1502:	61 95       	neg	r22
    1504:	f1 e0       	ldi	r31, 0x01	; 1
    1506:	16 16       	cp	r1, r22
    1508:	08 f0       	brcs	.+2      	; 0x150c <__stack+0xcad>
    150a:	f0 e0       	ldi	r31, 0x00	; 0
    150c:	a6 2f       	mov	r26, r22
    150e:	ae 1b       	sub	r26, r30
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	6a 17       	cp	r22, r26
    1514:	08 f0       	brcs	.+2      	; 0x1518 <__stack+0xcb9>
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	f8 2b       	or	r31, r24
    151a:	71 95       	neg	r23
    151c:	e1 e0       	ldi	r30, 0x01	; 1
    151e:	17 16       	cp	r1, r23
    1520:	08 f0       	brcs	.+2      	; 0x1524 <__stack+0xcc5>
    1522:	e0 e0       	ldi	r30, 0x00	; 0
    1524:	c7 2e       	mov	r12, r23
    1526:	cf 1a       	sub	r12, r31
    1528:	81 e0       	ldi	r24, 0x01	; 1
    152a:	7c 15       	cp	r23, r12
    152c:	08 f0       	brcs	.+2      	; 0x1530 <__stack+0xcd1>
    152e:	80 e0       	ldi	r24, 0x00	; 0
    1530:	e8 2b       	or	r30, r24
    1532:	8d 2d       	mov	r24, r13
    1534:	81 95       	neg	r24
    1536:	f1 e0       	ldi	r31, 0x01	; 1
    1538:	18 16       	cp	r1, r24
    153a:	08 f0       	brcs	.+2      	; 0x153e <__stack+0xcdf>
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	d8 2e       	mov	r13, r24
    1540:	de 1a       	sub	r13, r30
    1542:	e1 e0       	ldi	r30, 0x01	; 1
    1544:	8d 15       	cp	r24, r13
    1546:	08 f0       	brcs	.+2      	; 0x154a <__stack+0xceb>
    1548:	e0 e0       	ldi	r30, 0x00	; 0
    154a:	fe 2b       	or	r31, r30
    154c:	89 2f       	mov	r24, r25
    154e:	81 95       	neg	r24
    1550:	39 2d       	mov	r19, r9
    1552:	a5 01       	movw	r20, r10
    1554:	6a 2f       	mov	r22, r26
    1556:	7c 2d       	mov	r23, r12
    1558:	98 2f       	mov	r25, r24
    155a:	9f 1b       	sub	r25, r31
    155c:	8d 2d       	mov	r24, r13
    155e:	ce 58       	subi	r28, 0x8E	; 142
    1560:	df 4f       	sbci	r29, 0xFF	; 255
    1562:	e2 e1       	ldi	r30, 0x12	; 18
    1564:	0c 94 82 31 	jmp	0x6304	; 0x6304 <__epilogue_restores__>

00001568 <__moddi3>:
    1568:	a7 e7       	ldi	r26, 0x77	; 119
    156a:	b0 e0       	ldi	r27, 0x00	; 0
    156c:	ea eb       	ldi	r30, 0xBA	; 186
    156e:	fa e0       	ldi	r31, 0x0A	; 10
    1570:	0c 94 66 31 	jmp	0x62cc	; 0x62cc <__prologue_saves__>
    1574:	98 2e       	mov	r9, r24
    1576:	89 2e       	mov	r8, r25
    1578:	71 2e       	mov	r7, r17
    157a:	88 e0       	ldi	r24, 0x08	; 8
    157c:	fe 01       	movw	r30, r28
    157e:	31 96       	adiw	r30, 0x01	; 1
    1580:	df 01       	movw	r26, r30
    1582:	68 2e       	mov	r6, r24
    1584:	1d 92       	st	X+, r1
    1586:	6a 94       	dec	r6
    1588:	e9 f7       	brne	.-6      	; 0x1584 <__moddi3+0x1c>
    158a:	29 83       	std	Y+1, r18	; 0x01
    158c:	3a 83       	std	Y+2, r19	; 0x02
    158e:	4b 83       	std	Y+3, r20	; 0x03
    1590:	5c 83       	std	Y+4, r21	; 0x04
    1592:	6d 83       	std	Y+5, r22	; 0x05
    1594:	7e 83       	std	Y+6, r23	; 0x06
    1596:	9f 82       	std	Y+7, r9	; 0x07
    1598:	98 87       	std	Y+8, r25	; 0x08
    159a:	fe 01       	movw	r30, r28
    159c:	39 96       	adiw	r30, 0x09	; 9
    159e:	df 01       	movw	r26, r30
    15a0:	1d 92       	st	X+, r1
    15a2:	8a 95       	dec	r24
    15a4:	e9 f7       	brne	.-6      	; 0x15a0 <__moddi3+0x38>
    15a6:	a9 86       	std	Y+9, r10	; 0x09
    15a8:	ba 86       	std	Y+10, r11	; 0x0a
    15aa:	cb 86       	std	Y+11, r12	; 0x0b
    15ac:	dc 86       	std	Y+12, r13	; 0x0c
    15ae:	ed 86       	std	Y+13, r14	; 0x0d
    15b0:	fe 86       	std	Y+14, r15	; 0x0e
    15b2:	0f 87       	std	Y+15, r16	; 0x0f
    15b4:	18 8b       	std	Y+16, r17	; 0x10
    15b6:	8d 81       	ldd	r24, Y+5	; 0x05
    15b8:	9e 81       	ldd	r25, Y+6	; 0x06
    15ba:	af 81       	ldd	r26, Y+7	; 0x07
    15bc:	b8 85       	ldd	r27, Y+8	; 0x08
    15be:	b7 fd       	sbrc	r27, 7
    15c0:	07 c0       	rjmp	.+14     	; 0x15d0 <__moddi3+0x68>
    15c2:	e1 96       	adiw	r28, 0x31	; 49
    15c4:	1c ae       	std	Y+60, r1	; 0x3c
    15c6:	1d ae       	std	Y+61, r1	; 0x3d
    15c8:	1e ae       	std	Y+62, r1	; 0x3e
    15ca:	1f ae       	std	Y+63, r1	; 0x3f
    15cc:	e1 97       	sbiw	r28, 0x31	; 49
    15ce:	64 c0       	rjmp	.+200    	; 0x1698 <__moddi3+0x130>
    15d0:	21 95       	neg	r18
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	12 16       	cp	r1, r18
    15d6:	08 f0       	brcs	.+2      	; 0x15da <__moddi3+0x72>
    15d8:	80 e0       	ldi	r24, 0x00	; 0
    15da:	31 95       	neg	r19
    15dc:	91 e0       	ldi	r25, 0x01	; 1
    15de:	13 16       	cp	r1, r19
    15e0:	08 f0       	brcs	.+2      	; 0x15e4 <__moddi3+0x7c>
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	b3 2f       	mov	r27, r19
    15e6:	b8 1b       	sub	r27, r24
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	3b 17       	cp	r19, r27
    15ec:	08 f0       	brcs	.+2      	; 0x15f0 <__moddi3+0x88>
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	98 2b       	or	r25, r24
    15f2:	41 95       	neg	r20
    15f4:	31 e0       	ldi	r19, 0x01	; 1
    15f6:	14 16       	cp	r1, r20
    15f8:	08 f0       	brcs	.+2      	; 0x15fc <__moddi3+0x94>
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	a4 2f       	mov	r26, r20
    15fe:	a9 1b       	sub	r26, r25
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	4a 17       	cp	r20, r26
    1604:	08 f0       	brcs	.+2      	; 0x1608 <__moddi3+0xa0>
    1606:	80 e0       	ldi	r24, 0x00	; 0
    1608:	38 2b       	or	r19, r24
    160a:	51 95       	neg	r21
    160c:	91 e0       	ldi	r25, 0x01	; 1
    160e:	15 16       	cp	r1, r21
    1610:	08 f0       	brcs	.+2      	; 0x1614 <__moddi3+0xac>
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	f5 2f       	mov	r31, r21
    1616:	f3 1b       	sub	r31, r19
    1618:	81 e0       	ldi	r24, 0x01	; 1
    161a:	5f 17       	cp	r21, r31
    161c:	08 f0       	brcs	.+2      	; 0x1620 <__moddi3+0xb8>
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	98 2b       	or	r25, r24
    1622:	61 95       	neg	r22
    1624:	31 e0       	ldi	r19, 0x01	; 1
    1626:	16 16       	cp	r1, r22
    1628:	08 f0       	brcs	.+2      	; 0x162c <__moddi3+0xc4>
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	e6 2f       	mov	r30, r22
    162e:	e9 1b       	sub	r30, r25
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	6e 17       	cp	r22, r30
    1634:	08 f0       	brcs	.+2      	; 0x1638 <__moddi3+0xd0>
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	38 2b       	or	r19, r24
    163a:	71 95       	neg	r23
    163c:	41 e0       	ldi	r20, 0x01	; 1
    163e:	17 16       	cp	r1, r23
    1640:	08 f0       	brcs	.+2      	; 0x1644 <__moddi3+0xdc>
    1642:	40 e0       	ldi	r20, 0x00	; 0
    1644:	57 2f       	mov	r21, r23
    1646:	53 1b       	sub	r21, r19
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	75 17       	cp	r23, r21
    164c:	08 f0       	brcs	.+2      	; 0x1650 <__moddi3+0xe8>
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	48 2b       	or	r20, r24
    1652:	89 2d       	mov	r24, r9
    1654:	81 95       	neg	r24
    1656:	91 e0       	ldi	r25, 0x01	; 1
    1658:	18 16       	cp	r1, r24
    165a:	08 f0       	brcs	.+2      	; 0x165e <__moddi3+0xf6>
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	68 2e       	mov	r6, r24
    1660:	64 1a       	sub	r6, r20
    1662:	46 2d       	mov	r20, r6
    1664:	31 e0       	ldi	r19, 0x01	; 1
    1666:	86 15       	cp	r24, r6
    1668:	08 f0       	brcs	.+2      	; 0x166c <__moddi3+0x104>
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	93 2b       	or	r25, r19
    166e:	88 2d       	mov	r24, r8
    1670:	81 95       	neg	r24
    1672:	89 1b       	sub	r24, r25
    1674:	29 83       	std	Y+1, r18	; 0x01
    1676:	ba 83       	std	Y+2, r27	; 0x02
    1678:	ab 83       	std	Y+3, r26	; 0x03
    167a:	fc 83       	std	Y+4, r31	; 0x04
    167c:	ed 83       	std	Y+5, r30	; 0x05
    167e:	5e 83       	std	Y+6, r21	; 0x06
    1680:	4f 83       	std	Y+7, r20	; 0x07
    1682:	88 87       	std	Y+8, r24	; 0x08
    1684:	2f ef       	ldi	r18, 0xFF	; 255
    1686:	3f ef       	ldi	r19, 0xFF	; 255
    1688:	4f ef       	ldi	r20, 0xFF	; 255
    168a:	5f ef       	ldi	r21, 0xFF	; 255
    168c:	e1 96       	adiw	r28, 0x31	; 49
    168e:	2c af       	std	Y+60, r18	; 0x3c
    1690:	3d af       	std	Y+61, r19	; 0x3d
    1692:	4e af       	std	Y+62, r20	; 0x3e
    1694:	5f af       	std	Y+63, r21	; 0x3f
    1696:	e1 97       	sbiw	r28, 0x31	; 49
    1698:	8d 85       	ldd	r24, Y+13	; 0x0d
    169a:	9e 85       	ldd	r25, Y+14	; 0x0e
    169c:	af 85       	ldd	r26, Y+15	; 0x0f
    169e:	b8 89       	ldd	r27, Y+16	; 0x10
    16a0:	b7 ff       	sbrs	r27, 7
    16a2:	5a c0       	rjmp	.+180    	; 0x1758 <__moddi3+0x1f0>
    16a4:	a1 94       	neg	r10
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	1a 14       	cp	r1, r10
    16aa:	08 f0       	brcs	.+2      	; 0x16ae <__moddi3+0x146>
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	b1 94       	neg	r11
    16b0:	91 e0       	ldi	r25, 0x01	; 1
    16b2:	1b 14       	cp	r1, r11
    16b4:	08 f0       	brcs	.+2      	; 0x16b8 <__moddi3+0x150>
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	6b 2d       	mov	r22, r11
    16ba:	68 1b       	sub	r22, r24
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	b6 16       	cp	r11, r22
    16c0:	08 f0       	brcs	.+2      	; 0x16c4 <__moddi3+0x15c>
    16c2:	80 e0       	ldi	r24, 0x00	; 0
    16c4:	98 2b       	or	r25, r24
    16c6:	c1 94       	neg	r12
    16c8:	21 e0       	ldi	r18, 0x01	; 1
    16ca:	1c 14       	cp	r1, r12
    16cc:	08 f0       	brcs	.+2      	; 0x16d0 <__moddi3+0x168>
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	5c 2d       	mov	r21, r12
    16d2:	59 1b       	sub	r21, r25
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	c5 16       	cp	r12, r21
    16d8:	08 f0       	brcs	.+2      	; 0x16dc <__moddi3+0x174>
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	28 2b       	or	r18, r24
    16de:	d1 94       	neg	r13
    16e0:	91 e0       	ldi	r25, 0x01	; 1
    16e2:	1d 14       	cp	r1, r13
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <__moddi3+0x180>
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	4d 2d       	mov	r20, r13
    16ea:	42 1b       	sub	r20, r18
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	d4 16       	cp	r13, r20
    16f0:	08 f0       	brcs	.+2      	; 0x16f4 <__moddi3+0x18c>
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	98 2b       	or	r25, r24
    16f6:	e1 94       	neg	r14
    16f8:	21 e0       	ldi	r18, 0x01	; 1
    16fa:	1e 14       	cp	r1, r14
    16fc:	08 f0       	brcs	.+2      	; 0x1700 <__moddi3+0x198>
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	3e 2d       	mov	r19, r14
    1702:	39 1b       	sub	r19, r25
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	e3 16       	cp	r14, r19
    1708:	08 f0       	brcs	.+2      	; 0x170c <__moddi3+0x1a4>
    170a:	80 e0       	ldi	r24, 0x00	; 0
    170c:	28 2b       	or	r18, r24
    170e:	f1 94       	neg	r15
    1710:	91 e0       	ldi	r25, 0x01	; 1
    1712:	1f 14       	cp	r1, r15
    1714:	08 f0       	brcs	.+2      	; 0x1718 <__moddi3+0x1b0>
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	7f 2d       	mov	r23, r15
    171a:	72 1b       	sub	r23, r18
    171c:	27 2f       	mov	r18, r23
    171e:	81 e0       	ldi	r24, 0x01	; 1
    1720:	f7 16       	cp	r15, r23
    1722:	08 f0       	brcs	.+2      	; 0x1726 <__moddi3+0x1be>
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	98 2b       	or	r25, r24
    1728:	01 95       	neg	r16
    172a:	11 e0       	ldi	r17, 0x01	; 1
    172c:	10 16       	cp	r1, r16
    172e:	08 f0       	brcs	.+2      	; 0x1732 <__moddi3+0x1ca>
    1730:	10 e0       	ldi	r17, 0x00	; 0
    1732:	80 2f       	mov	r24, r16
    1734:	89 1b       	sub	r24, r25
    1736:	98 2f       	mov	r25, r24
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	09 17       	cp	r16, r25
    173c:	08 f0       	brcs	.+2      	; 0x1740 <__moddi3+0x1d8>
    173e:	80 e0       	ldi	r24, 0x00	; 0
    1740:	18 2b       	or	r17, r24
    1742:	87 2d       	mov	r24, r7
    1744:	81 95       	neg	r24
    1746:	81 1b       	sub	r24, r17
    1748:	a9 86       	std	Y+9, r10	; 0x09
    174a:	6a 87       	std	Y+10, r22	; 0x0a
    174c:	5b 87       	std	Y+11, r21	; 0x0b
    174e:	4c 87       	std	Y+12, r20	; 0x0c
    1750:	3d 87       	std	Y+13, r19	; 0x0d
    1752:	2e 87       	std	Y+14, r18	; 0x0e
    1754:	9f 87       	std	Y+15, r25	; 0x0f
    1756:	88 8b       	std	Y+16, r24	; 0x10
    1758:	99 81       	ldd	r25, Y+1	; 0x01
    175a:	2a 81       	ldd	r18, Y+2	; 0x02
    175c:	3b 81       	ldd	r19, Y+3	; 0x03
    175e:	4c 81       	ldd	r20, Y+4	; 0x04
    1760:	5d 81       	ldd	r21, Y+5	; 0x05
    1762:	6e 81       	ldd	r22, Y+6	; 0x06
    1764:	7f 81       	ldd	r23, Y+7	; 0x07
    1766:	a8 85       	ldd	r26, Y+8	; 0x08
    1768:	b9 85       	ldd	r27, Y+9	; 0x09
    176a:	1a 85       	ldd	r17, Y+10	; 0x0a
    176c:	0b 85       	ldd	r16, Y+11	; 0x0b
    176e:	fc 84       	ldd	r15, Y+12	; 0x0c
    1770:	ed 84       	ldd	r14, Y+13	; 0x0d
    1772:	de 84       	ldd	r13, Y+14	; 0x0e
    1774:	cf 84       	ldd	r12, Y+15	; 0x0f
    1776:	b8 88       	ldd	r11, Y+16	; 0x10
    1778:	88 e0       	ldi	r24, 0x08	; 8
    177a:	e9 e1       	ldi	r30, 0x19	; 25
    177c:	8e 2e       	mov	r8, r30
    177e:	91 2c       	mov	r9, r1
    1780:	8c 0e       	add	r8, r28
    1782:	9d 1e       	adc	r9, r29
    1784:	f4 01       	movw	r30, r8
    1786:	68 2e       	mov	r6, r24
    1788:	11 92       	st	Z+, r1
    178a:	6a 94       	dec	r6
    178c:	e9 f7       	brne	.-6      	; 0x1788 <__moddi3+0x220>
    178e:	99 8f       	std	Y+25, r25	; 0x19
    1790:	2a 8f       	std	Y+26, r18	; 0x1a
    1792:	3b 8f       	std	Y+27, r19	; 0x1b
    1794:	4c 8f       	std	Y+28, r20	; 0x1c
    1796:	5d 8f       	std	Y+29, r21	; 0x1d
    1798:	6e 8f       	std	Y+30, r22	; 0x1e
    179a:	7f 8f       	std	Y+31, r23	; 0x1f
    179c:	a8 a3       	std	Y+32, r26	; 0x20
    179e:	9e 01       	movw	r18, r28
    17a0:	2f 5d       	subi	r18, 0xDF	; 223
    17a2:	3f 4f       	sbci	r19, 0xFF	; 255
    17a4:	f9 01       	movw	r30, r18
    17a6:	11 92       	st	Z+, r1
    17a8:	8a 95       	dec	r24
    17aa:	e9 f7       	brne	.-6      	; 0x17a6 <__moddi3+0x23e>
    17ac:	b9 a3       	std	Y+33, r27	; 0x21
    17ae:	1a a3       	std	Y+34, r17	; 0x22
    17b0:	0b a3       	std	Y+35, r16	; 0x23
    17b2:	fc a2       	std	Y+36, r15	; 0x24
    17b4:	ed a2       	std	Y+37, r14	; 0x25
    17b6:	de a2       	std	Y+38, r13	; 0x26
    17b8:	cf a2       	std	Y+39, r12	; 0x27
    17ba:	b8 a6       	std	Y+40, r11	; 0x28
    17bc:	29 a0       	ldd	r2, Y+33	; 0x21
    17be:	3a a0       	ldd	r3, Y+34	; 0x22
    17c0:	4b a0       	ldd	r4, Y+35	; 0x23
    17c2:	5c a0       	ldd	r5, Y+36	; 0x24
    17c4:	ad a0       	ldd	r10, Y+37	; 0x25
    17c6:	be a0       	ldd	r11, Y+38	; 0x26
    17c8:	cf a0       	ldd	r12, Y+39	; 0x27
    17ca:	d8 a4       	ldd	r13, Y+40	; 0x28
    17cc:	49 8d       	ldd	r20, Y+25	; 0x19
    17ce:	5a 8d       	ldd	r21, Y+26	; 0x1a
    17d0:	6b 8d       	ldd	r22, Y+27	; 0x1b
    17d2:	7c 8d       	ldd	r23, Y+28	; 0x1c
    17d4:	e5 96       	adiw	r28, 0x35	; 53
    17d6:	4f af       	std	Y+63, r20	; 0x3f
    17d8:	e5 97       	sbiw	r28, 0x35	; 53
    17da:	e6 96       	adiw	r28, 0x36	; 54
    17dc:	5f af       	std	Y+63, r21	; 0x3f
    17de:	e6 97       	sbiw	r28, 0x36	; 54
    17e0:	e7 96       	adiw	r28, 0x37	; 55
    17e2:	6f af       	std	Y+63, r22	; 0x3f
    17e4:	e7 97       	sbiw	r28, 0x37	; 55
    17e6:	e8 96       	adiw	r28, 0x38	; 56
    17e8:	7f af       	std	Y+63, r23	; 0x3f
    17ea:	e8 97       	sbiw	r28, 0x38	; 56
    17ec:	e8 96       	adiw	r28, 0x38	; 56
    17ee:	6c ac       	ldd	r6, Y+60	; 0x3c
    17f0:	7d ac       	ldd	r7, Y+61	; 0x3d
    17f2:	8e ac       	ldd	r8, Y+62	; 0x3e
    17f4:	9f ac       	ldd	r9, Y+63	; 0x3f
    17f6:	e8 97       	sbiw	r28, 0x38	; 56
    17f8:	2d 96       	adiw	r28, 0x0d	; 13
    17fa:	6c ae       	std	Y+60, r6	; 0x3c
    17fc:	7d ae       	std	Y+61, r7	; 0x3d
    17fe:	8e ae       	std	Y+62, r8	; 0x3e
    1800:	9f ae       	std	Y+63, r9	; 0x3f
    1802:	2d 97       	sbiw	r28, 0x0d	; 13
    1804:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1806:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1808:	2f 8d       	ldd	r18, Y+31	; 0x1f
    180a:	38 a1       	ldd	r19, Y+32	; 0x20
    180c:	3c 01       	movw	r6, r24
    180e:	49 01       	movw	r8, r18
    1810:	61 96       	adiw	r28, 0x11	; 17
    1812:	6c ae       	std	Y+60, r6	; 0x3c
    1814:	7d ae       	std	Y+61, r7	; 0x3d
    1816:	8e ae       	std	Y+62, r8	; 0x3e
    1818:	9f ae       	std	Y+63, r9	; 0x3f
    181a:	61 97       	sbiw	r28, 0x11	; 17
    181c:	a1 14       	cp	r10, r1
    181e:	b1 04       	cpc	r11, r1
    1820:	c1 04       	cpc	r12, r1
    1822:	d1 04       	cpc	r13, r1
    1824:	09 f0       	breq	.+2      	; 0x1828 <__moddi3+0x2c0>
    1826:	28 c3       	rjmp	.+1616   	; 0x1e78 <__moddi3+0x910>
    1828:	62 14       	cp	r6, r2
    182a:	73 04       	cpc	r7, r3
    182c:	84 04       	cpc	r8, r4
    182e:	95 04       	cpc	r9, r5
    1830:	08 f0       	brcs	.+2      	; 0x1834 <__moddi3+0x2cc>
    1832:	0e c1       	rjmp	.+540    	; 0x1a50 <__moddi3+0x4e8>
    1834:	00 e0       	ldi	r16, 0x00	; 0
    1836:	20 16       	cp	r2, r16
    1838:	00 e0       	ldi	r16, 0x00	; 0
    183a:	30 06       	cpc	r3, r16
    183c:	01 e0       	ldi	r16, 0x01	; 1
    183e:	40 06       	cpc	r4, r16
    1840:	00 e0       	ldi	r16, 0x00	; 0
    1842:	50 06       	cpc	r5, r16
    1844:	88 f4       	brcc	.+34     	; 0x1868 <__moddi3+0x300>
    1846:	1f ef       	ldi	r17, 0xFF	; 255
    1848:	21 16       	cp	r2, r17
    184a:	31 04       	cpc	r3, r1
    184c:	41 04       	cpc	r4, r1
    184e:	51 04       	cpc	r5, r1
    1850:	39 f0       	breq	.+14     	; 0x1860 <__moddi3+0x2f8>
    1852:	30 f0       	brcs	.+12     	; 0x1860 <__moddi3+0x2f8>
    1854:	88 e0       	ldi	r24, 0x08	; 8
    1856:	e8 2e       	mov	r14, r24
    1858:	f1 2c       	mov	r15, r1
    185a:	01 2d       	mov	r16, r1
    185c:	11 2d       	mov	r17, r1
    185e:	18 c0       	rjmp	.+48     	; 0x1890 <__moddi3+0x328>
    1860:	ee 24       	eor	r14, r14
    1862:	ff 24       	eor	r15, r15
    1864:	87 01       	movw	r16, r14
    1866:	14 c0       	rjmp	.+40     	; 0x1890 <__moddi3+0x328>
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	22 16       	cp	r2, r18
    186c:	20 e0       	ldi	r18, 0x00	; 0
    186e:	32 06       	cpc	r3, r18
    1870:	20 e0       	ldi	r18, 0x00	; 0
    1872:	42 06       	cpc	r4, r18
    1874:	21 e0       	ldi	r18, 0x01	; 1
    1876:	52 06       	cpc	r5, r18
    1878:	30 f0       	brcs	.+12     	; 0x1886 <__moddi3+0x31e>
    187a:	b8 e1       	ldi	r27, 0x18	; 24
    187c:	eb 2e       	mov	r14, r27
    187e:	f1 2c       	mov	r15, r1
    1880:	01 2d       	mov	r16, r1
    1882:	11 2d       	mov	r17, r1
    1884:	05 c0       	rjmp	.+10     	; 0x1890 <__moddi3+0x328>
    1886:	a0 e1       	ldi	r26, 0x10	; 16
    1888:	ea 2e       	mov	r14, r26
    188a:	f1 2c       	mov	r15, r1
    188c:	01 2d       	mov	r16, r1
    188e:	11 2d       	mov	r17, r1
    1890:	d2 01       	movw	r26, r4
    1892:	c1 01       	movw	r24, r2
    1894:	0e 2c       	mov	r0, r14
    1896:	04 c0       	rjmp	.+8      	; 0x18a0 <__moddi3+0x338>
    1898:	b6 95       	lsr	r27
    189a:	a7 95       	ror	r26
    189c:	97 95       	ror	r25
    189e:	87 95       	ror	r24
    18a0:	0a 94       	dec	r0
    18a2:	d2 f7       	brpl	.-12     	; 0x1898 <__moddi3+0x330>
    18a4:	8a 56       	subi	r24, 0x6A	; 106
    18a6:	9f 4f       	sbci	r25, 0xFF	; 255
    18a8:	dc 01       	movw	r26, r24
    18aa:	2c 91       	ld	r18, X
    18ac:	80 e2       	ldi	r24, 0x20	; 32
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	a0 e0       	ldi	r26, 0x00	; 0
    18b2:	b0 e0       	ldi	r27, 0x00	; 0
    18b4:	8e 19       	sub	r24, r14
    18b6:	9f 09       	sbc	r25, r15
    18b8:	a0 0b       	sbc	r26, r16
    18ba:	b1 0b       	sbc	r27, r17
    18bc:	5c 01       	movw	r10, r24
    18be:	6d 01       	movw	r12, r26
    18c0:	a2 1a       	sub	r10, r18
    18c2:	b1 08       	sbc	r11, r1
    18c4:	c1 08       	sbc	r12, r1
    18c6:	d1 08       	sbc	r13, r1
    18c8:	65 96       	adiw	r28, 0x15	; 21
    18ca:	ac ae       	std	Y+60, r10	; 0x3c
    18cc:	bd ae       	std	Y+61, r11	; 0x3d
    18ce:	ce ae       	std	Y+62, r12	; 0x3e
    18d0:	df ae       	std	Y+63, r13	; 0x3f
    18d2:	65 97       	sbiw	r28, 0x15	; 21
    18d4:	a1 14       	cp	r10, r1
    18d6:	b1 04       	cpc	r11, r1
    18d8:	c1 04       	cpc	r12, r1
    18da:	d1 04       	cpc	r13, r1
    18dc:	09 f4       	brne	.+2      	; 0x18e0 <__moddi3+0x378>
    18de:	45 c0       	rjmp	.+138    	; 0x196a <__moddi3+0x402>
    18e0:	62 96       	adiw	r28, 0x12	; 18
    18e2:	6f ad       	ldd	r22, Y+63	; 0x3f
    18e4:	62 97       	sbiw	r28, 0x12	; 18
    18e6:	06 2e       	mov	r0, r22
    18e8:	04 c0       	rjmp	.+8      	; 0x18f2 <__moddi3+0x38a>
    18ea:	22 0c       	add	r2, r2
    18ec:	33 1c       	adc	r3, r3
    18ee:	44 1c       	adc	r4, r4
    18f0:	55 1c       	adc	r5, r5
    18f2:	0a 94       	dec	r0
    18f4:	d2 f7       	brpl	.-12     	; 0x18ea <__moddi3+0x382>
    18f6:	a4 01       	movw	r20, r8
    18f8:	93 01       	movw	r18, r6
    18fa:	06 2e       	mov	r0, r22
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <__moddi3+0x39e>
    18fe:	22 0f       	add	r18, r18
    1900:	33 1f       	adc	r19, r19
    1902:	44 1f       	adc	r20, r20
    1904:	55 1f       	adc	r21, r21
    1906:	0a 94       	dec	r0
    1908:	d2 f7       	brpl	.-12     	; 0x18fe <__moddi3+0x396>
    190a:	80 e2       	ldi	r24, 0x20	; 32
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	8a 19       	sub	r24, r10
    1910:	9b 09       	sbc	r25, r11
    1912:	e8 96       	adiw	r28, 0x38	; 56
    1914:	cc ac       	ldd	r12, Y+60	; 0x3c
    1916:	dd ac       	ldd	r13, Y+61	; 0x3d
    1918:	ee ac       	ldd	r14, Y+62	; 0x3e
    191a:	ff ac       	ldd	r15, Y+63	; 0x3f
    191c:	e8 97       	sbiw	r28, 0x38	; 56
    191e:	04 c0       	rjmp	.+8      	; 0x1928 <__moddi3+0x3c0>
    1920:	f6 94       	lsr	r15
    1922:	e7 94       	ror	r14
    1924:	d7 94       	ror	r13
    1926:	c7 94       	ror	r12
    1928:	8a 95       	dec	r24
    192a:	d2 f7       	brpl	.-12     	; 0x1920 <__moddi3+0x3b8>
    192c:	87 01       	movw	r16, r14
    192e:	76 01       	movw	r14, r12
    1930:	e2 2a       	or	r14, r18
    1932:	f3 2a       	or	r15, r19
    1934:	04 2b       	or	r16, r20
    1936:	15 2b       	or	r17, r21
    1938:	61 96       	adiw	r28, 0x11	; 17
    193a:	ec ae       	std	Y+60, r14	; 0x3c
    193c:	fd ae       	std	Y+61, r15	; 0x3d
    193e:	0e af       	std	Y+62, r16	; 0x3e
    1940:	1f af       	std	Y+63, r17	; 0x3f
    1942:	61 97       	sbiw	r28, 0x11	; 17
    1944:	e8 96       	adiw	r28, 0x38	; 56
    1946:	0c ad       	ldd	r16, Y+60	; 0x3c
    1948:	1d ad       	ldd	r17, Y+61	; 0x3d
    194a:	2e ad       	ldd	r18, Y+62	; 0x3e
    194c:	3f ad       	ldd	r19, Y+63	; 0x3f
    194e:	e8 97       	sbiw	r28, 0x38	; 56
    1950:	04 c0       	rjmp	.+8      	; 0x195a <__moddi3+0x3f2>
    1952:	00 0f       	add	r16, r16
    1954:	11 1f       	adc	r17, r17
    1956:	22 1f       	adc	r18, r18
    1958:	33 1f       	adc	r19, r19
    195a:	6a 95       	dec	r22
    195c:	d2 f7       	brpl	.-12     	; 0x1952 <__moddi3+0x3ea>
    195e:	2d 96       	adiw	r28, 0x0d	; 13
    1960:	0c af       	std	Y+60, r16	; 0x3c
    1962:	1d af       	std	Y+61, r17	; 0x3d
    1964:	2e af       	std	Y+62, r18	; 0x3e
    1966:	3f af       	std	Y+63, r19	; 0x3f
    1968:	2d 97       	sbiw	r28, 0x0d	; 13
    196a:	32 01       	movw	r6, r4
    196c:	88 24       	eor	r8, r8
    196e:	99 24       	eor	r9, r9
    1970:	a2 01       	movw	r20, r4
    1972:	91 01       	movw	r18, r2
    1974:	40 70       	andi	r20, 0x00	; 0
    1976:	50 70       	andi	r21, 0x00	; 0
    1978:	69 96       	adiw	r28, 0x19	; 25
    197a:	2c af       	std	Y+60, r18	; 0x3c
    197c:	3d af       	std	Y+61, r19	; 0x3d
    197e:	4e af       	std	Y+62, r20	; 0x3e
    1980:	5f af       	std	Y+63, r21	; 0x3f
    1982:	69 97       	sbiw	r28, 0x19	; 25
    1984:	61 96       	adiw	r28, 0x11	; 17
    1986:	6c ad       	ldd	r22, Y+60	; 0x3c
    1988:	7d ad       	ldd	r23, Y+61	; 0x3d
    198a:	8e ad       	ldd	r24, Y+62	; 0x3e
    198c:	9f ad       	ldd	r25, Y+63	; 0x3f
    198e:	61 97       	sbiw	r28, 0x11	; 17
    1990:	a4 01       	movw	r20, r8
    1992:	93 01       	movw	r18, r6
    1994:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1998:	7b 01       	movw	r14, r22
    199a:	8c 01       	movw	r16, r24
    199c:	61 96       	adiw	r28, 0x11	; 17
    199e:	6c ad       	ldd	r22, Y+60	; 0x3c
    19a0:	7d ad       	ldd	r23, Y+61	; 0x3d
    19a2:	8e ad       	ldd	r24, Y+62	; 0x3e
    19a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    19a6:	61 97       	sbiw	r28, 0x11	; 17
    19a8:	a4 01       	movw	r20, r8
    19aa:	93 01       	movw	r18, r6
    19ac:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    19b0:	ca 01       	movw	r24, r20
    19b2:	b9 01       	movw	r22, r18
    19b4:	69 96       	adiw	r28, 0x19	; 25
    19b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    19bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19be:	69 97       	sbiw	r28, 0x19	; 25
    19c0:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    19c4:	9b 01       	movw	r18, r22
    19c6:	ac 01       	movw	r20, r24
    19c8:	87 01       	movw	r16, r14
    19ca:	ff 24       	eor	r15, r15
    19cc:	ee 24       	eor	r14, r14
    19ce:	2d 96       	adiw	r28, 0x0d	; 13
    19d0:	ac ac       	ldd	r10, Y+60	; 0x3c
    19d2:	bd ac       	ldd	r11, Y+61	; 0x3d
    19d4:	ce ac       	ldd	r12, Y+62	; 0x3e
    19d6:	df ac       	ldd	r13, Y+63	; 0x3f
    19d8:	2d 97       	sbiw	r28, 0x0d	; 13
    19da:	c6 01       	movw	r24, r12
    19dc:	aa 27       	eor	r26, r26
    19de:	bb 27       	eor	r27, r27
    19e0:	57 01       	movw	r10, r14
    19e2:	68 01       	movw	r12, r16
    19e4:	a8 2a       	or	r10, r24
    19e6:	b9 2a       	or	r11, r25
    19e8:	ca 2a       	or	r12, r26
    19ea:	db 2a       	or	r13, r27
    19ec:	a2 16       	cp	r10, r18
    19ee:	b3 06       	cpc	r11, r19
    19f0:	c4 06       	cpc	r12, r20
    19f2:	d5 06       	cpc	r13, r21
    19f4:	90 f4       	brcc	.+36     	; 0x1a1a <__moddi3+0x4b2>
    19f6:	a2 0c       	add	r10, r2
    19f8:	b3 1c       	adc	r11, r3
    19fa:	c4 1c       	adc	r12, r4
    19fc:	d5 1c       	adc	r13, r5
    19fe:	a2 14       	cp	r10, r2
    1a00:	b3 04       	cpc	r11, r3
    1a02:	c4 04       	cpc	r12, r4
    1a04:	d5 04       	cpc	r13, r5
    1a06:	48 f0       	brcs	.+18     	; 0x1a1a <__moddi3+0x4b2>
    1a08:	a2 16       	cp	r10, r18
    1a0a:	b3 06       	cpc	r11, r19
    1a0c:	c4 06       	cpc	r12, r20
    1a0e:	d5 06       	cpc	r13, r21
    1a10:	20 f4       	brcc	.+8      	; 0x1a1a <__moddi3+0x4b2>
    1a12:	a2 0c       	add	r10, r2
    1a14:	b3 1c       	adc	r11, r3
    1a16:	c4 1c       	adc	r12, r4
    1a18:	d5 1c       	adc	r13, r5
    1a1a:	a2 1a       	sub	r10, r18
    1a1c:	b3 0a       	sbc	r11, r19
    1a1e:	c4 0a       	sbc	r12, r20
    1a20:	d5 0a       	sbc	r13, r21
    1a22:	c6 01       	movw	r24, r12
    1a24:	b5 01       	movw	r22, r10
    1a26:	a4 01       	movw	r20, r8
    1a28:	93 01       	movw	r18, r6
    1a2a:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1a2e:	7b 01       	movw	r14, r22
    1a30:	8c 01       	movw	r16, r24
    1a32:	c6 01       	movw	r24, r12
    1a34:	b5 01       	movw	r22, r10
    1a36:	a4 01       	movw	r20, r8
    1a38:	93 01       	movw	r18, r6
    1a3a:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1a3e:	ca 01       	movw	r24, r20
    1a40:	b9 01       	movw	r22, r18
    1a42:	69 96       	adiw	r28, 0x19	; 25
    1a44:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a46:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a48:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a4a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a4c:	69 97       	sbiw	r28, 0x19	; 25
    1a4e:	c8 c1       	rjmp	.+912    	; 0x1de0 <__moddi3+0x878>
    1a50:	21 14       	cp	r2, r1
    1a52:	31 04       	cpc	r3, r1
    1a54:	41 04       	cpc	r4, r1
    1a56:	51 04       	cpc	r5, r1
    1a58:	71 f4       	brne	.+28     	; 0x1a76 <__moddi3+0x50e>
    1a5a:	61 e0       	ldi	r22, 0x01	; 1
    1a5c:	70 e0       	ldi	r23, 0x00	; 0
    1a5e:	80 e0       	ldi	r24, 0x00	; 0
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	20 e0       	ldi	r18, 0x00	; 0
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	40 e0       	ldi	r20, 0x00	; 0
    1a68:	50 e0       	ldi	r21, 0x00	; 0
    1a6a:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1a6e:	c9 01       	movw	r24, r18
    1a70:	da 01       	movw	r26, r20
    1a72:	1c 01       	movw	r2, r24
    1a74:	2d 01       	movw	r4, r26
    1a76:	00 e0       	ldi	r16, 0x00	; 0
    1a78:	20 16       	cp	r2, r16
    1a7a:	00 e0       	ldi	r16, 0x00	; 0
    1a7c:	30 06       	cpc	r3, r16
    1a7e:	01 e0       	ldi	r16, 0x01	; 1
    1a80:	40 06       	cpc	r4, r16
    1a82:	00 e0       	ldi	r16, 0x00	; 0
    1a84:	50 06       	cpc	r5, r16
    1a86:	88 f4       	brcc	.+34     	; 0x1aaa <__moddi3+0x542>
    1a88:	1f ef       	ldi	r17, 0xFF	; 255
    1a8a:	21 16       	cp	r2, r17
    1a8c:	31 04       	cpc	r3, r1
    1a8e:	41 04       	cpc	r4, r1
    1a90:	51 04       	cpc	r5, r1
    1a92:	39 f0       	breq	.+14     	; 0x1aa2 <__moddi3+0x53a>
    1a94:	30 f0       	brcs	.+12     	; 0x1aa2 <__moddi3+0x53a>
    1a96:	68 e0       	ldi	r22, 0x08	; 8
    1a98:	e6 2e       	mov	r14, r22
    1a9a:	f1 2c       	mov	r15, r1
    1a9c:	01 2d       	mov	r16, r1
    1a9e:	11 2d       	mov	r17, r1
    1aa0:	18 c0       	rjmp	.+48     	; 0x1ad2 <__moddi3+0x56a>
    1aa2:	ee 24       	eor	r14, r14
    1aa4:	ff 24       	eor	r15, r15
    1aa6:	87 01       	movw	r16, r14
    1aa8:	14 c0       	rjmp	.+40     	; 0x1ad2 <__moddi3+0x56a>
    1aaa:	20 e0       	ldi	r18, 0x00	; 0
    1aac:	22 16       	cp	r2, r18
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	32 06       	cpc	r3, r18
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	42 06       	cpc	r4, r18
    1ab6:	21 e0       	ldi	r18, 0x01	; 1
    1ab8:	52 06       	cpc	r5, r18
    1aba:	30 f0       	brcs	.+12     	; 0x1ac8 <__moddi3+0x560>
    1abc:	58 e1       	ldi	r21, 0x18	; 24
    1abe:	e5 2e       	mov	r14, r21
    1ac0:	f1 2c       	mov	r15, r1
    1ac2:	01 2d       	mov	r16, r1
    1ac4:	11 2d       	mov	r17, r1
    1ac6:	05 c0       	rjmp	.+10     	; 0x1ad2 <__moddi3+0x56a>
    1ac8:	40 e1       	ldi	r20, 0x10	; 16
    1aca:	e4 2e       	mov	r14, r20
    1acc:	f1 2c       	mov	r15, r1
    1ace:	01 2d       	mov	r16, r1
    1ad0:	11 2d       	mov	r17, r1
    1ad2:	d2 01       	movw	r26, r4
    1ad4:	c1 01       	movw	r24, r2
    1ad6:	0e 2c       	mov	r0, r14
    1ad8:	04 c0       	rjmp	.+8      	; 0x1ae2 <__moddi3+0x57a>
    1ada:	b6 95       	lsr	r27
    1adc:	a7 95       	ror	r26
    1ade:	97 95       	ror	r25
    1ae0:	87 95       	ror	r24
    1ae2:	0a 94       	dec	r0
    1ae4:	d2 f7       	brpl	.-12     	; 0x1ada <__moddi3+0x572>
    1ae6:	8a 56       	subi	r24, 0x6A	; 106
    1ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aea:	dc 01       	movw	r26, r24
    1aec:	2c 91       	ld	r18, X
    1aee:	30 e2       	ldi	r19, 0x20	; 32
    1af0:	a3 2e       	mov	r10, r19
    1af2:	b1 2c       	mov	r11, r1
    1af4:	c1 2c       	mov	r12, r1
    1af6:	d1 2c       	mov	r13, r1
    1af8:	d6 01       	movw	r26, r12
    1afa:	c5 01       	movw	r24, r10
    1afc:	8e 19       	sub	r24, r14
    1afe:	9f 09       	sbc	r25, r15
    1b00:	a0 0b       	sbc	r26, r16
    1b02:	b1 0b       	sbc	r27, r17
    1b04:	7c 01       	movw	r14, r24
    1b06:	8d 01       	movw	r16, r26
    1b08:	e2 1a       	sub	r14, r18
    1b0a:	f1 08       	sbc	r15, r1
    1b0c:	01 09       	sbc	r16, r1
    1b0e:	11 09       	sbc	r17, r1
    1b10:	65 96       	adiw	r28, 0x15	; 21
    1b12:	ec ae       	std	Y+60, r14	; 0x3c
    1b14:	fd ae       	std	Y+61, r15	; 0x3d
    1b16:	0e af       	std	Y+62, r16	; 0x3e
    1b18:	1f af       	std	Y+63, r17	; 0x3f
    1b1a:	65 97       	sbiw	r28, 0x15	; 21
    1b1c:	e1 14       	cp	r14, r1
    1b1e:	f1 04       	cpc	r15, r1
    1b20:	01 05       	cpc	r16, r1
    1b22:	11 05       	cpc	r17, r1
    1b24:	39 f4       	brne	.+14     	; 0x1b34 <__moddi3+0x5cc>
    1b26:	64 01       	movw	r12, r8
    1b28:	53 01       	movw	r10, r6
    1b2a:	a2 18       	sub	r10, r2
    1b2c:	b3 08       	sbc	r11, r3
    1b2e:	c4 08       	sbc	r12, r4
    1b30:	d5 08       	sbc	r13, r5
    1b32:	ec c0       	rjmp	.+472    	; 0x1d0c <__moddi3+0x7a4>
    1b34:	62 96       	adiw	r28, 0x12	; 18
    1b36:	ff ac       	ldd	r15, Y+63	; 0x3f
    1b38:	62 97       	sbiw	r28, 0x12	; 18
    1b3a:	e4 96       	adiw	r28, 0x34	; 52
    1b3c:	ff ae       	std	Y+63, r15	; 0x3f
    1b3e:	e4 97       	sbiw	r28, 0x34	; 52
    1b40:	0f 2c       	mov	r0, r15
    1b42:	04 c0       	rjmp	.+8      	; 0x1b4c <__moddi3+0x5e4>
    1b44:	22 0c       	add	r2, r2
    1b46:	33 1c       	adc	r3, r3
    1b48:	44 1c       	adc	r4, r4
    1b4a:	55 1c       	adc	r5, r5
    1b4c:	0a 94       	dec	r0
    1b4e:	d2 f7       	brpl	.-12     	; 0x1b44 <__moddi3+0x5dc>
    1b50:	8a 2d       	mov	r24, r10
    1b52:	8f 19       	sub	r24, r15
    1b54:	64 01       	movw	r12, r8
    1b56:	53 01       	movw	r10, r6
    1b58:	08 2e       	mov	r0, r24
    1b5a:	04 c0       	rjmp	.+8      	; 0x1b64 <__moddi3+0x5fc>
    1b5c:	d6 94       	lsr	r13
    1b5e:	c7 94       	ror	r12
    1b60:	b7 94       	ror	r11
    1b62:	a7 94       	ror	r10
    1b64:	0a 94       	dec	r0
    1b66:	d2 f7       	brpl	.-12     	; 0x1b5c <__moddi3+0x5f4>
    1b68:	a4 01       	movw	r20, r8
    1b6a:	93 01       	movw	r18, r6
    1b6c:	04 c0       	rjmp	.+8      	; 0x1b76 <__moddi3+0x60e>
    1b6e:	22 0f       	add	r18, r18
    1b70:	33 1f       	adc	r19, r19
    1b72:	44 1f       	adc	r20, r20
    1b74:	55 1f       	adc	r21, r21
    1b76:	fa 94       	dec	r15
    1b78:	d2 f7       	brpl	.-12     	; 0x1b6e <__moddi3+0x606>
    1b7a:	e8 96       	adiw	r28, 0x38	; 56
    1b7c:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b7e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b80:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b82:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b84:	e8 97       	sbiw	r28, 0x38	; 56
    1b86:	04 c0       	rjmp	.+8      	; 0x1b90 <__moddi3+0x628>
    1b88:	96 94       	lsr	r9
    1b8a:	87 94       	ror	r8
    1b8c:	77 94       	ror	r7
    1b8e:	67 94       	ror	r6
    1b90:	8a 95       	dec	r24
    1b92:	d2 f7       	brpl	.-12     	; 0x1b88 <__moddi3+0x620>
    1b94:	84 01       	movw	r16, r8
    1b96:	73 01       	movw	r14, r6
    1b98:	e2 2a       	or	r14, r18
    1b9a:	f3 2a       	or	r15, r19
    1b9c:	04 2b       	or	r16, r20
    1b9e:	15 2b       	or	r17, r21
    1ba0:	29 96       	adiw	r28, 0x09	; 9
    1ba2:	ec ae       	std	Y+60, r14	; 0x3c
    1ba4:	fd ae       	std	Y+61, r15	; 0x3d
    1ba6:	0e af       	std	Y+62, r16	; 0x3e
    1ba8:	1f af       	std	Y+63, r17	; 0x3f
    1baa:	29 97       	sbiw	r28, 0x09	; 9
    1bac:	32 01       	movw	r6, r4
    1bae:	88 24       	eor	r8, r8
    1bb0:	99 24       	eor	r9, r9
    1bb2:	92 01       	movw	r18, r4
    1bb4:	81 01       	movw	r16, r2
    1bb6:	20 70       	andi	r18, 0x00	; 0
    1bb8:	30 70       	andi	r19, 0x00	; 0
    1bba:	6d 96       	adiw	r28, 0x1d	; 29
    1bbc:	0c af       	std	Y+60, r16	; 0x3c
    1bbe:	1d af       	std	Y+61, r17	; 0x3d
    1bc0:	2e af       	std	Y+62, r18	; 0x3e
    1bc2:	3f af       	std	Y+63, r19	; 0x3f
    1bc4:	6d 97       	sbiw	r28, 0x1d	; 29
    1bc6:	c6 01       	movw	r24, r12
    1bc8:	b5 01       	movw	r22, r10
    1bca:	a4 01       	movw	r20, r8
    1bcc:	93 01       	movw	r18, r6
    1bce:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1bd2:	7b 01       	movw	r14, r22
    1bd4:	8c 01       	movw	r16, r24
    1bd6:	c6 01       	movw	r24, r12
    1bd8:	b5 01       	movw	r22, r10
    1bda:	a4 01       	movw	r20, r8
    1bdc:	93 01       	movw	r18, r6
    1bde:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1be2:	ca 01       	movw	r24, r20
    1be4:	b9 01       	movw	r22, r18
    1be6:	6d 96       	adiw	r28, 0x1d	; 29
    1be8:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bea:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bec:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bee:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bf0:	6d 97       	sbiw	r28, 0x1d	; 29
    1bf2:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1bf6:	9b 01       	movw	r18, r22
    1bf8:	ac 01       	movw	r20, r24
    1bfa:	87 01       	movw	r16, r14
    1bfc:	ff 24       	eor	r15, r15
    1bfe:	ee 24       	eor	r14, r14
    1c00:	29 96       	adiw	r28, 0x09	; 9
    1c02:	ac ac       	ldd	r10, Y+60	; 0x3c
    1c04:	bd ac       	ldd	r11, Y+61	; 0x3d
    1c06:	ce ac       	ldd	r12, Y+62	; 0x3e
    1c08:	df ac       	ldd	r13, Y+63	; 0x3f
    1c0a:	29 97       	sbiw	r28, 0x09	; 9
    1c0c:	c6 01       	movw	r24, r12
    1c0e:	aa 27       	eor	r26, r26
    1c10:	bb 27       	eor	r27, r27
    1c12:	5c 01       	movw	r10, r24
    1c14:	6d 01       	movw	r12, r26
    1c16:	ae 28       	or	r10, r14
    1c18:	bf 28       	or	r11, r15
    1c1a:	c0 2a       	or	r12, r16
    1c1c:	d1 2a       	or	r13, r17
    1c1e:	a2 16       	cp	r10, r18
    1c20:	b3 06       	cpc	r11, r19
    1c22:	c4 06       	cpc	r12, r20
    1c24:	d5 06       	cpc	r13, r21
    1c26:	90 f4       	brcc	.+36     	; 0x1c4c <__moddi3+0x6e4>
    1c28:	a2 0c       	add	r10, r2
    1c2a:	b3 1c       	adc	r11, r3
    1c2c:	c4 1c       	adc	r12, r4
    1c2e:	d5 1c       	adc	r13, r5
    1c30:	a2 14       	cp	r10, r2
    1c32:	b3 04       	cpc	r11, r3
    1c34:	c4 04       	cpc	r12, r4
    1c36:	d5 04       	cpc	r13, r5
    1c38:	48 f0       	brcs	.+18     	; 0x1c4c <__moddi3+0x6e4>
    1c3a:	a2 16       	cp	r10, r18
    1c3c:	b3 06       	cpc	r11, r19
    1c3e:	c4 06       	cpc	r12, r20
    1c40:	d5 06       	cpc	r13, r21
    1c42:	20 f4       	brcc	.+8      	; 0x1c4c <__moddi3+0x6e4>
    1c44:	a2 0c       	add	r10, r2
    1c46:	b3 1c       	adc	r11, r3
    1c48:	c4 1c       	adc	r12, r4
    1c4a:	d5 1c       	adc	r13, r5
    1c4c:	a2 1a       	sub	r10, r18
    1c4e:	b3 0a       	sbc	r11, r19
    1c50:	c4 0a       	sbc	r12, r20
    1c52:	d5 0a       	sbc	r13, r21
    1c54:	c6 01       	movw	r24, r12
    1c56:	b5 01       	movw	r22, r10
    1c58:	a4 01       	movw	r20, r8
    1c5a:	93 01       	movw	r18, r6
    1c5c:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1c60:	7b 01       	movw	r14, r22
    1c62:	8c 01       	movw	r16, r24
    1c64:	c6 01       	movw	r24, r12
    1c66:	b5 01       	movw	r22, r10
    1c68:	a4 01       	movw	r20, r8
    1c6a:	93 01       	movw	r18, r6
    1c6c:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1c70:	ca 01       	movw	r24, r20
    1c72:	b9 01       	movw	r22, r18
    1c74:	6d 96       	adiw	r28, 0x1d	; 29
    1c76:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c78:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c7a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c7c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c7e:	6d 97       	sbiw	r28, 0x1d	; 29
    1c80:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1c84:	9b 01       	movw	r18, r22
    1c86:	ac 01       	movw	r20, r24
    1c88:	87 01       	movw	r16, r14
    1c8a:	ff 24       	eor	r15, r15
    1c8c:	ee 24       	eor	r14, r14
    1c8e:	29 96       	adiw	r28, 0x09	; 9
    1c90:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c92:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c94:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c96:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c98:	29 97       	sbiw	r28, 0x09	; 9
    1c9a:	a0 70       	andi	r26, 0x00	; 0
    1c9c:	b0 70       	andi	r27, 0x00	; 0
    1c9e:	57 01       	movw	r10, r14
    1ca0:	68 01       	movw	r12, r16
    1ca2:	a8 2a       	or	r10, r24
    1ca4:	b9 2a       	or	r11, r25
    1ca6:	ca 2a       	or	r12, r26
    1ca8:	db 2a       	or	r13, r27
    1caa:	a2 16       	cp	r10, r18
    1cac:	b3 06       	cpc	r11, r19
    1cae:	c4 06       	cpc	r12, r20
    1cb0:	d5 06       	cpc	r13, r21
    1cb2:	90 f4       	brcc	.+36     	; 0x1cd8 <__moddi3+0x770>
    1cb4:	a2 0c       	add	r10, r2
    1cb6:	b3 1c       	adc	r11, r3
    1cb8:	c4 1c       	adc	r12, r4
    1cba:	d5 1c       	adc	r13, r5
    1cbc:	a2 14       	cp	r10, r2
    1cbe:	b3 04       	cpc	r11, r3
    1cc0:	c4 04       	cpc	r12, r4
    1cc2:	d5 04       	cpc	r13, r5
    1cc4:	48 f0       	brcs	.+18     	; 0x1cd8 <__moddi3+0x770>
    1cc6:	a2 16       	cp	r10, r18
    1cc8:	b3 06       	cpc	r11, r19
    1cca:	c4 06       	cpc	r12, r20
    1ccc:	d5 06       	cpc	r13, r21
    1cce:	20 f4       	brcc	.+8      	; 0x1cd8 <__moddi3+0x770>
    1cd0:	a2 0c       	add	r10, r2
    1cd2:	b3 1c       	adc	r11, r3
    1cd4:	c4 1c       	adc	r12, r4
    1cd6:	d5 1c       	adc	r13, r5
    1cd8:	e8 96       	adiw	r28, 0x38	; 56
    1cda:	ec ac       	ldd	r14, Y+60	; 0x3c
    1cdc:	fd ac       	ldd	r15, Y+61	; 0x3d
    1cde:	0e ad       	ldd	r16, Y+62	; 0x3e
    1ce0:	1f ad       	ldd	r17, Y+63	; 0x3f
    1ce2:	e8 97       	sbiw	r28, 0x38	; 56
    1ce4:	e4 96       	adiw	r28, 0x34	; 52
    1ce6:	0f ac       	ldd	r0, Y+63	; 0x3f
    1ce8:	e4 97       	sbiw	r28, 0x34	; 52
    1cea:	04 c0       	rjmp	.+8      	; 0x1cf4 <__moddi3+0x78c>
    1cec:	ee 0c       	add	r14, r14
    1cee:	ff 1c       	adc	r15, r15
    1cf0:	00 1f       	adc	r16, r16
    1cf2:	11 1f       	adc	r17, r17
    1cf4:	0a 94       	dec	r0
    1cf6:	d2 f7       	brpl	.-12     	; 0x1cec <__moddi3+0x784>
    1cf8:	2d 96       	adiw	r28, 0x0d	; 13
    1cfa:	ec ae       	std	Y+60, r14	; 0x3c
    1cfc:	fd ae       	std	Y+61, r15	; 0x3d
    1cfe:	0e af       	std	Y+62, r16	; 0x3e
    1d00:	1f af       	std	Y+63, r17	; 0x3f
    1d02:	2d 97       	sbiw	r28, 0x0d	; 13
    1d04:	a2 1a       	sub	r10, r18
    1d06:	b3 0a       	sbc	r11, r19
    1d08:	c4 0a       	sbc	r12, r20
    1d0a:	d5 0a       	sbc	r13, r21
    1d0c:	32 01       	movw	r6, r4
    1d0e:	88 24       	eor	r8, r8
    1d10:	99 24       	eor	r9, r9
    1d12:	92 01       	movw	r18, r4
    1d14:	81 01       	movw	r16, r2
    1d16:	20 70       	andi	r18, 0x00	; 0
    1d18:	30 70       	andi	r19, 0x00	; 0
    1d1a:	a1 96       	adiw	r28, 0x21	; 33
    1d1c:	0c af       	std	Y+60, r16	; 0x3c
    1d1e:	1d af       	std	Y+61, r17	; 0x3d
    1d20:	2e af       	std	Y+62, r18	; 0x3e
    1d22:	3f af       	std	Y+63, r19	; 0x3f
    1d24:	a1 97       	sbiw	r28, 0x21	; 33
    1d26:	c6 01       	movw	r24, r12
    1d28:	b5 01       	movw	r22, r10
    1d2a:	a4 01       	movw	r20, r8
    1d2c:	93 01       	movw	r18, r6
    1d2e:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1d32:	7b 01       	movw	r14, r22
    1d34:	8c 01       	movw	r16, r24
    1d36:	c6 01       	movw	r24, r12
    1d38:	b5 01       	movw	r22, r10
    1d3a:	a4 01       	movw	r20, r8
    1d3c:	93 01       	movw	r18, r6
    1d3e:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1d42:	ca 01       	movw	r24, r20
    1d44:	b9 01       	movw	r22, r18
    1d46:	a1 96       	adiw	r28, 0x21	; 33
    1d48:	2c ad       	ldd	r18, Y+60	; 0x3c
    1d4a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1d4c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1d4e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d50:	a1 97       	sbiw	r28, 0x21	; 33
    1d52:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1d56:	9b 01       	movw	r18, r22
    1d58:	ac 01       	movw	r20, r24
    1d5a:	87 01       	movw	r16, r14
    1d5c:	ff 24       	eor	r15, r15
    1d5e:	ee 24       	eor	r14, r14
    1d60:	2d 96       	adiw	r28, 0x0d	; 13
    1d62:	ac ac       	ldd	r10, Y+60	; 0x3c
    1d64:	bd ac       	ldd	r11, Y+61	; 0x3d
    1d66:	ce ac       	ldd	r12, Y+62	; 0x3e
    1d68:	df ac       	ldd	r13, Y+63	; 0x3f
    1d6a:	2d 97       	sbiw	r28, 0x0d	; 13
    1d6c:	c6 01       	movw	r24, r12
    1d6e:	aa 27       	eor	r26, r26
    1d70:	bb 27       	eor	r27, r27
    1d72:	57 01       	movw	r10, r14
    1d74:	68 01       	movw	r12, r16
    1d76:	a8 2a       	or	r10, r24
    1d78:	b9 2a       	or	r11, r25
    1d7a:	ca 2a       	or	r12, r26
    1d7c:	db 2a       	or	r13, r27
    1d7e:	a2 16       	cp	r10, r18
    1d80:	b3 06       	cpc	r11, r19
    1d82:	c4 06       	cpc	r12, r20
    1d84:	d5 06       	cpc	r13, r21
    1d86:	90 f4       	brcc	.+36     	; 0x1dac <__moddi3+0x844>
    1d88:	a2 0c       	add	r10, r2
    1d8a:	b3 1c       	adc	r11, r3
    1d8c:	c4 1c       	adc	r12, r4
    1d8e:	d5 1c       	adc	r13, r5
    1d90:	a2 14       	cp	r10, r2
    1d92:	b3 04       	cpc	r11, r3
    1d94:	c4 04       	cpc	r12, r4
    1d96:	d5 04       	cpc	r13, r5
    1d98:	48 f0       	brcs	.+18     	; 0x1dac <__moddi3+0x844>
    1d9a:	a2 16       	cp	r10, r18
    1d9c:	b3 06       	cpc	r11, r19
    1d9e:	c4 06       	cpc	r12, r20
    1da0:	d5 06       	cpc	r13, r21
    1da2:	20 f4       	brcc	.+8      	; 0x1dac <__moddi3+0x844>
    1da4:	a2 0c       	add	r10, r2
    1da6:	b3 1c       	adc	r11, r3
    1da8:	c4 1c       	adc	r12, r4
    1daa:	d5 1c       	adc	r13, r5
    1dac:	a2 1a       	sub	r10, r18
    1dae:	b3 0a       	sbc	r11, r19
    1db0:	c4 0a       	sbc	r12, r20
    1db2:	d5 0a       	sbc	r13, r21
    1db4:	c6 01       	movw	r24, r12
    1db6:	b5 01       	movw	r22, r10
    1db8:	a4 01       	movw	r20, r8
    1dba:	93 01       	movw	r18, r6
    1dbc:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1dc0:	7b 01       	movw	r14, r22
    1dc2:	8c 01       	movw	r16, r24
    1dc4:	c6 01       	movw	r24, r12
    1dc6:	b5 01       	movw	r22, r10
    1dc8:	a4 01       	movw	r20, r8
    1dca:	93 01       	movw	r18, r6
    1dcc:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    1dd0:	ca 01       	movw	r24, r20
    1dd2:	b9 01       	movw	r22, r18
    1dd4:	a1 96       	adiw	r28, 0x21	; 33
    1dd6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1dd8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1dda:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ddc:	5f ad       	ldd	r21, Y+63	; 0x3f
    1dde:	a1 97       	sbiw	r28, 0x21	; 33
    1de0:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    1de4:	9b 01       	movw	r18, r22
    1de6:	ac 01       	movw	r20, r24
    1de8:	87 01       	movw	r16, r14
    1dea:	ff 24       	eor	r15, r15
    1dec:	ee 24       	eor	r14, r14
    1dee:	2d 96       	adiw	r28, 0x0d	; 13
    1df0:	8c ad       	ldd	r24, Y+60	; 0x3c
    1df2:	9d ad       	ldd	r25, Y+61	; 0x3d
    1df4:	ae ad       	ldd	r26, Y+62	; 0x3e
    1df6:	bf ad       	ldd	r27, Y+63	; 0x3f
    1df8:	2d 97       	sbiw	r28, 0x0d	; 13
    1dfa:	a0 70       	andi	r26, 0x00	; 0
    1dfc:	b0 70       	andi	r27, 0x00	; 0
    1dfe:	e8 2a       	or	r14, r24
    1e00:	f9 2a       	or	r15, r25
    1e02:	0a 2b       	or	r16, r26
    1e04:	1b 2b       	or	r17, r27
    1e06:	e2 16       	cp	r14, r18
    1e08:	f3 06       	cpc	r15, r19
    1e0a:	04 07       	cpc	r16, r20
    1e0c:	15 07       	cpc	r17, r21
    1e0e:	90 f4       	brcc	.+36     	; 0x1e34 <__moddi3+0x8cc>
    1e10:	e2 0c       	add	r14, r2
    1e12:	f3 1c       	adc	r15, r3
    1e14:	04 1d       	adc	r16, r4
    1e16:	15 1d       	adc	r17, r5
    1e18:	e2 14       	cp	r14, r2
    1e1a:	f3 04       	cpc	r15, r3
    1e1c:	04 05       	cpc	r16, r4
    1e1e:	15 05       	cpc	r17, r5
    1e20:	48 f0       	brcs	.+18     	; 0x1e34 <__moddi3+0x8cc>
    1e22:	e2 16       	cp	r14, r18
    1e24:	f3 06       	cpc	r15, r19
    1e26:	04 07       	cpc	r16, r20
    1e28:	15 07       	cpc	r17, r21
    1e2a:	20 f4       	brcc	.+8      	; 0x1e34 <__moddi3+0x8cc>
    1e2c:	e2 0c       	add	r14, r2
    1e2e:	f3 1c       	adc	r15, r3
    1e30:	04 1d       	adc	r16, r4
    1e32:	15 1d       	adc	r17, r5
    1e34:	e2 1a       	sub	r14, r18
    1e36:	f3 0a       	sbc	r15, r19
    1e38:	04 0b       	sbc	r16, r20
    1e3a:	15 0b       	sbc	r17, r21
    1e3c:	d8 01       	movw	r26, r16
    1e3e:	c7 01       	movw	r24, r14
    1e40:	62 96       	adiw	r28, 0x12	; 18
    1e42:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e44:	62 97       	sbiw	r28, 0x12	; 18
    1e46:	04 c0       	rjmp	.+8      	; 0x1e50 <__moddi3+0x8e8>
    1e48:	b6 95       	lsr	r27
    1e4a:	a7 95       	ror	r26
    1e4c:	97 95       	ror	r25
    1e4e:	87 95       	ror	r24
    1e50:	0a 94       	dec	r0
    1e52:	d2 f7       	brpl	.-12     	; 0x1e48 <__moddi3+0x8e0>
    1e54:	89 a7       	std	Y+41, r24	; 0x29
    1e56:	9a a7       	std	Y+42, r25	; 0x2a
    1e58:	ab a7       	std	Y+43, r26	; 0x2b
    1e5a:	bc a7       	std	Y+44, r27	; 0x2c
    1e5c:	1d a6       	std	Y+45, r1	; 0x2d
    1e5e:	1e a6       	std	Y+46, r1	; 0x2e
    1e60:	1f a6       	std	Y+47, r1	; 0x2f
    1e62:	18 aa       	std	Y+48, r1	; 0x30
    1e64:	89 8b       	std	Y+17, r24	; 0x11
    1e66:	8a a5       	ldd	r24, Y+42	; 0x2a
    1e68:	8a 8b       	std	Y+18, r24	; 0x12
    1e6a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e6c:	8b 8b       	std	Y+19, r24	; 0x13
    1e6e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1e70:	8c 8b       	std	Y+20, r24	; 0x14
    1e72:	8d a5       	ldd	r24, Y+45	; 0x2d
    1e74:	8d 8b       	std	Y+21, r24	; 0x15
    1e76:	2f c3       	rjmp	.+1630   	; 0x24d6 <__moddi3+0xf6e>
    1e78:	6a 14       	cp	r6, r10
    1e7a:	7b 04       	cpc	r7, r11
    1e7c:	8c 04       	cpc	r8, r12
    1e7e:	9d 04       	cpc	r9, r13
    1e80:	48 f4       	brcc	.+18     	; 0x1e94 <__moddi3+0x92c>
    1e82:	49 8b       	std	Y+17, r20	; 0x11
    1e84:	5a 8b       	std	Y+18, r21	; 0x12
    1e86:	6b 8b       	std	Y+19, r22	; 0x13
    1e88:	7c 8b       	std	Y+20, r23	; 0x14
    1e8a:	8d 8b       	std	Y+21, r24	; 0x15
    1e8c:	9e 8b       	std	Y+22, r25	; 0x16
    1e8e:	2f 8b       	std	Y+23, r18	; 0x17
    1e90:	38 8f       	std	Y+24, r19	; 0x18
    1e92:	27 c3       	rjmp	.+1614   	; 0x24e2 <__moddi3+0xf7a>
    1e94:	00 e0       	ldi	r16, 0x00	; 0
    1e96:	a0 16       	cp	r10, r16
    1e98:	00 e0       	ldi	r16, 0x00	; 0
    1e9a:	b0 06       	cpc	r11, r16
    1e9c:	01 e0       	ldi	r16, 0x01	; 1
    1e9e:	c0 06       	cpc	r12, r16
    1ea0:	00 e0       	ldi	r16, 0x00	; 0
    1ea2:	d0 06       	cpc	r13, r16
    1ea4:	88 f4       	brcc	.+34     	; 0x1ec8 <__moddi3+0x960>
    1ea6:	1f ef       	ldi	r17, 0xFF	; 255
    1ea8:	a1 16       	cp	r10, r17
    1eaa:	b1 04       	cpc	r11, r1
    1eac:	c1 04       	cpc	r12, r1
    1eae:	d1 04       	cpc	r13, r1
    1eb0:	39 f0       	breq	.+14     	; 0x1ec0 <__moddi3+0x958>
    1eb2:	30 f0       	brcs	.+12     	; 0x1ec0 <__moddi3+0x958>
    1eb4:	28 e0       	ldi	r18, 0x08	; 8
    1eb6:	e2 2e       	mov	r14, r18
    1eb8:	f1 2c       	mov	r15, r1
    1eba:	01 2d       	mov	r16, r1
    1ebc:	11 2d       	mov	r17, r1
    1ebe:	18 c0       	rjmp	.+48     	; 0x1ef0 <__moddi3+0x988>
    1ec0:	ee 24       	eor	r14, r14
    1ec2:	ff 24       	eor	r15, r15
    1ec4:	87 01       	movw	r16, r14
    1ec6:	14 c0       	rjmp	.+40     	; 0x1ef0 <__moddi3+0x988>
    1ec8:	20 e0       	ldi	r18, 0x00	; 0
    1eca:	a2 16       	cp	r10, r18
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	b2 06       	cpc	r11, r18
    1ed0:	20 e0       	ldi	r18, 0x00	; 0
    1ed2:	c2 06       	cpc	r12, r18
    1ed4:	21 e0       	ldi	r18, 0x01	; 1
    1ed6:	d2 06       	cpc	r13, r18
    1ed8:	30 f0       	brcs	.+12     	; 0x1ee6 <__moddi3+0x97e>
    1eda:	98 e1       	ldi	r25, 0x18	; 24
    1edc:	e9 2e       	mov	r14, r25
    1ede:	f1 2c       	mov	r15, r1
    1ee0:	01 2d       	mov	r16, r1
    1ee2:	11 2d       	mov	r17, r1
    1ee4:	05 c0       	rjmp	.+10     	; 0x1ef0 <__moddi3+0x988>
    1ee6:	80 e1       	ldi	r24, 0x10	; 16
    1ee8:	e8 2e       	mov	r14, r24
    1eea:	f1 2c       	mov	r15, r1
    1eec:	01 2d       	mov	r16, r1
    1eee:	11 2d       	mov	r17, r1
    1ef0:	d6 01       	movw	r26, r12
    1ef2:	c5 01       	movw	r24, r10
    1ef4:	0e 2c       	mov	r0, r14
    1ef6:	04 c0       	rjmp	.+8      	; 0x1f00 <__moddi3+0x998>
    1ef8:	b6 95       	lsr	r27
    1efa:	a7 95       	ror	r26
    1efc:	97 95       	ror	r25
    1efe:	87 95       	ror	r24
    1f00:	0a 94       	dec	r0
    1f02:	d2 f7       	brpl	.-12     	; 0x1ef8 <__moddi3+0x990>
    1f04:	8a 56       	subi	r24, 0x6A	; 106
    1f06:	9f 4f       	sbci	r25, 0xFF	; 255
    1f08:	dc 01       	movw	r26, r24
    1f0a:	2c 91       	ld	r18, X
    1f0c:	80 e2       	ldi	r24, 0x20	; 32
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	a0 e0       	ldi	r26, 0x00	; 0
    1f12:	b0 e0       	ldi	r27, 0x00	; 0
    1f14:	8e 19       	sub	r24, r14
    1f16:	9f 09       	sbc	r25, r15
    1f18:	a0 0b       	sbc	r26, r16
    1f1a:	b1 0b       	sbc	r27, r17
    1f1c:	82 1b       	sub	r24, r18
    1f1e:	91 09       	sbc	r25, r1
    1f20:	a1 09       	sbc	r26, r1
    1f22:	b1 09       	sbc	r27, r1
    1f24:	00 97       	sbiw	r24, 0x00	; 0
    1f26:	a1 05       	cpc	r26, r1
    1f28:	b1 05       	cpc	r27, r1
    1f2a:	09 f0       	breq	.+2      	; 0x1f2e <__moddi3+0x9c6>
    1f2c:	59 c0       	rjmp	.+178    	; 0x1fe0 <__moddi3+0xa78>
    1f2e:	a6 14       	cp	r10, r6
    1f30:	b7 04       	cpc	r11, r7
    1f32:	c8 04       	cpc	r12, r8
    1f34:	d9 04       	cpc	r13, r9
    1f36:	70 f0       	brcs	.+28     	; 0x1f54 <__moddi3+0x9ec>
    1f38:	e8 96       	adiw	r28, 0x38	; 56
    1f3a:	ec ac       	ldd	r14, Y+60	; 0x3c
    1f3c:	fd ac       	ldd	r15, Y+61	; 0x3d
    1f3e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1f40:	1f ad       	ldd	r17, Y+63	; 0x3f
    1f42:	e8 97       	sbiw	r28, 0x38	; 56
    1f44:	e2 14       	cp	r14, r2
    1f46:	f3 04       	cpc	r15, r3
    1f48:	04 05       	cpc	r16, r4
    1f4a:	15 05       	cpc	r17, r5
    1f4c:	18 f4       	brcc	.+6      	; 0x1f54 <__moddi3+0x9ec>
    1f4e:	d8 01       	movw	r26, r16
    1f50:	c7 01       	movw	r24, r14
    1f52:	2f c0       	rjmp	.+94     	; 0x1fb2 <__moddi3+0xa4a>
    1f54:	e8 96       	adiw	r28, 0x38	; 56
    1f56:	8c ad       	ldd	r24, Y+60	; 0x3c
    1f58:	9d ad       	ldd	r25, Y+61	; 0x3d
    1f5a:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f5c:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f5e:	e8 97       	sbiw	r28, 0x38	; 56
    1f60:	82 19       	sub	r24, r2
    1f62:	93 09       	sbc	r25, r3
    1f64:	a4 09       	sbc	r26, r4
    1f66:	b5 09       	sbc	r27, r5
    1f68:	a4 01       	movw	r20, r8
    1f6a:	93 01       	movw	r18, r6
    1f6c:	2a 19       	sub	r18, r10
    1f6e:	3b 09       	sbc	r19, r11
    1f70:	4c 09       	sbc	r20, r12
    1f72:	5d 09       	sbc	r21, r13
    1f74:	aa 24       	eor	r10, r10
    1f76:	bb 24       	eor	r11, r11
    1f78:	65 01       	movw	r12, r10
    1f7a:	e8 96       	adiw	r28, 0x38	; 56
    1f7c:	6c ac       	ldd	r6, Y+60	; 0x3c
    1f7e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1f80:	8e ac       	ldd	r8, Y+62	; 0x3e
    1f82:	9f ac       	ldd	r9, Y+63	; 0x3f
    1f84:	e8 97       	sbiw	r28, 0x38	; 56
    1f86:	68 16       	cp	r6, r24
    1f88:	79 06       	cpc	r7, r25
    1f8a:	8a 06       	cpc	r8, r26
    1f8c:	9b 06       	cpc	r9, r27
    1f8e:	28 f4       	brcc	.+10     	; 0x1f9a <__moddi3+0xa32>
    1f90:	11 e0       	ldi	r17, 0x01	; 1
    1f92:	a1 2e       	mov	r10, r17
    1f94:	b1 2c       	mov	r11, r1
    1f96:	c1 2c       	mov	r12, r1
    1f98:	d1 2c       	mov	r13, r1
    1f9a:	79 01       	movw	r14, r18
    1f9c:	8a 01       	movw	r16, r20
    1f9e:	ea 18       	sub	r14, r10
    1fa0:	fb 08       	sbc	r15, r11
    1fa2:	0c 09       	sbc	r16, r12
    1fa4:	1d 09       	sbc	r17, r13
    1fa6:	61 96       	adiw	r28, 0x11	; 17
    1fa8:	ec ae       	std	Y+60, r14	; 0x3c
    1faa:	fd ae       	std	Y+61, r15	; 0x3d
    1fac:	0e af       	std	Y+62, r16	; 0x3e
    1fae:	1f af       	std	Y+63, r17	; 0x3f
    1fb0:	61 97       	sbiw	r28, 0x11	; 17
    1fb2:	89 a7       	std	Y+41, r24	; 0x29
    1fb4:	9a a7       	std	Y+42, r25	; 0x2a
    1fb6:	ab a7       	std	Y+43, r26	; 0x2b
    1fb8:	bc a7       	std	Y+44, r27	; 0x2c
    1fba:	61 96       	adiw	r28, 0x11	; 17
    1fbc:	0c ad       	ldd	r16, Y+60	; 0x3c
    1fbe:	1d ad       	ldd	r17, Y+61	; 0x3d
    1fc0:	2e ad       	ldd	r18, Y+62	; 0x3e
    1fc2:	3f ad       	ldd	r19, Y+63	; 0x3f
    1fc4:	61 97       	sbiw	r28, 0x11	; 17
    1fc6:	0d a7       	std	Y+45, r16	; 0x2d
    1fc8:	1e a7       	std	Y+46, r17	; 0x2e
    1fca:	2f a7       	std	Y+47, r18	; 0x2f
    1fcc:	38 ab       	std	Y+48, r19	; 0x30
    1fce:	89 8b       	std	Y+17, r24	; 0x11
    1fd0:	8a a5       	ldd	r24, Y+42	; 0x2a
    1fd2:	8a 8b       	std	Y+18, r24	; 0x12
    1fd4:	8b a5       	ldd	r24, Y+43	; 0x2b
    1fd6:	8b 8b       	std	Y+19, r24	; 0x13
    1fd8:	8c a5       	ldd	r24, Y+44	; 0x2c
    1fda:	8c 8b       	std	Y+20, r24	; 0x14
    1fdc:	0d 8b       	std	Y+21, r16	; 0x15
    1fde:	7b c2       	rjmp	.+1270   	; 0x24d6 <__moddi3+0xf6e>
    1fe0:	e3 96       	adiw	r28, 0x33	; 51
    1fe2:	8f af       	std	Y+63, r24	; 0x3f
    1fe4:	e3 97       	sbiw	r28, 0x33	; 51
    1fe6:	a6 01       	movw	r20, r12
    1fe8:	95 01       	movw	r18, r10
    1fea:	08 2e       	mov	r0, r24
    1fec:	04 c0       	rjmp	.+8      	; 0x1ff6 <__moddi3+0xa8e>
    1fee:	22 0f       	add	r18, r18
    1ff0:	33 1f       	adc	r19, r19
    1ff2:	44 1f       	adc	r20, r20
    1ff4:	55 1f       	adc	r21, r21
    1ff6:	0a 94       	dec	r0
    1ff8:	d2 f7       	brpl	.-12     	; 0x1fee <__moddi3+0xa86>
    1ffa:	10 e2       	ldi	r17, 0x20	; 32
    1ffc:	18 1b       	sub	r17, r24
    1ffe:	e2 96       	adiw	r28, 0x32	; 50
    2000:	1f af       	std	Y+63, r17	; 0x3f
    2002:	e2 97       	sbiw	r28, 0x32	; 50
    2004:	d2 01       	movw	r26, r4
    2006:	c1 01       	movw	r24, r2
    2008:	01 2e       	mov	r0, r17
    200a:	04 c0       	rjmp	.+8      	; 0x2014 <__moddi3+0xaac>
    200c:	b6 95       	lsr	r27
    200e:	a7 95       	ror	r26
    2010:	97 95       	ror	r25
    2012:	87 95       	ror	r24
    2014:	0a 94       	dec	r0
    2016:	d2 f7       	brpl	.-12     	; 0x200c <__moddi3+0xaa4>
    2018:	5c 01       	movw	r10, r24
    201a:	6d 01       	movw	r12, r26
    201c:	a2 2a       	or	r10, r18
    201e:	b3 2a       	or	r11, r19
    2020:	c4 2a       	or	r12, r20
    2022:	d5 2a       	or	r13, r21
    2024:	25 96       	adiw	r28, 0x05	; 5
    2026:	ac ae       	std	Y+60, r10	; 0x3c
    2028:	bd ae       	std	Y+61, r11	; 0x3d
    202a:	ce ae       	std	Y+62, r12	; 0x3e
    202c:	df ae       	std	Y+63, r13	; 0x3f
    202e:	25 97       	sbiw	r28, 0x05	; 5
    2030:	72 01       	movw	r14, r4
    2032:	61 01       	movw	r12, r2
    2034:	e3 96       	adiw	r28, 0x33	; 51
    2036:	0f ac       	ldd	r0, Y+63	; 0x3f
    2038:	e3 97       	sbiw	r28, 0x33	; 51
    203a:	04 c0       	rjmp	.+8      	; 0x2044 <__moddi3+0xadc>
    203c:	cc 0c       	add	r12, r12
    203e:	dd 1c       	adc	r13, r13
    2040:	ee 1c       	adc	r14, r14
    2042:	ff 1c       	adc	r15, r15
    2044:	0a 94       	dec	r0
    2046:	d2 f7       	brpl	.-12     	; 0x203c <__moddi3+0xad4>
    2048:	21 96       	adiw	r28, 0x01	; 1
    204a:	cc ae       	std	Y+60, r12	; 0x3c
    204c:	dd ae       	std	Y+61, r13	; 0x3d
    204e:	ee ae       	std	Y+62, r14	; 0x3e
    2050:	ff ae       	std	Y+63, r15	; 0x3f
    2052:	21 97       	sbiw	r28, 0x01	; 1
    2054:	64 01       	movw	r12, r8
    2056:	53 01       	movw	r10, r6
    2058:	01 2e       	mov	r0, r17
    205a:	04 c0       	rjmp	.+8      	; 0x2064 <__moddi3+0xafc>
    205c:	d6 94       	lsr	r13
    205e:	c7 94       	ror	r12
    2060:	b7 94       	ror	r11
    2062:	a7 94       	ror	r10
    2064:	0a 94       	dec	r0
    2066:	d2 f7       	brpl	.-12     	; 0x205c <__moddi3+0xaf4>
    2068:	a4 01       	movw	r20, r8
    206a:	93 01       	movw	r18, r6
    206c:	e3 96       	adiw	r28, 0x33	; 51
    206e:	0f ac       	ldd	r0, Y+63	; 0x3f
    2070:	e3 97       	sbiw	r28, 0x33	; 51
    2072:	04 c0       	rjmp	.+8      	; 0x207c <__moddi3+0xb14>
    2074:	22 0f       	add	r18, r18
    2076:	33 1f       	adc	r19, r19
    2078:	44 1f       	adc	r20, r20
    207a:	55 1f       	adc	r21, r21
    207c:	0a 94       	dec	r0
    207e:	d2 f7       	brpl	.-12     	; 0x2074 <__moddi3+0xb0c>
    2080:	e8 96       	adiw	r28, 0x38	; 56
    2082:	8c ad       	ldd	r24, Y+60	; 0x3c
    2084:	9d ad       	ldd	r25, Y+61	; 0x3d
    2086:	ae ad       	ldd	r26, Y+62	; 0x3e
    2088:	bf ad       	ldd	r27, Y+63	; 0x3f
    208a:	e8 97       	sbiw	r28, 0x38	; 56
    208c:	04 c0       	rjmp	.+8      	; 0x2096 <__moddi3+0xb2e>
    208e:	b6 95       	lsr	r27
    2090:	a7 95       	ror	r26
    2092:	97 95       	ror	r25
    2094:	87 95       	ror	r24
    2096:	1a 95       	dec	r17
    2098:	d2 f7       	brpl	.-12     	; 0x208e <__moddi3+0xb26>
    209a:	7c 01       	movw	r14, r24
    209c:	8d 01       	movw	r16, r26
    209e:	e2 2a       	or	r14, r18
    20a0:	f3 2a       	or	r15, r19
    20a2:	04 2b       	or	r16, r20
    20a4:	15 2b       	or	r17, r21
    20a6:	e9 ae       	std	Y+57, r14	; 0x39
    20a8:	fa ae       	std	Y+58, r15	; 0x3a
    20aa:	0b af       	std	Y+59, r16	; 0x3b
    20ac:	1c af       	std	Y+60, r17	; 0x3c
    20ae:	e8 96       	adiw	r28, 0x38	; 56
    20b0:	0c ad       	ldd	r16, Y+60	; 0x3c
    20b2:	1d ad       	ldd	r17, Y+61	; 0x3d
    20b4:	2e ad       	ldd	r18, Y+62	; 0x3e
    20b6:	3f ad       	ldd	r19, Y+63	; 0x3f
    20b8:	e8 97       	sbiw	r28, 0x38	; 56
    20ba:	e3 96       	adiw	r28, 0x33	; 51
    20bc:	0f ac       	ldd	r0, Y+63	; 0x3f
    20be:	e3 97       	sbiw	r28, 0x33	; 51
    20c0:	04 c0       	rjmp	.+8      	; 0x20ca <__moddi3+0xb62>
    20c2:	00 0f       	add	r16, r16
    20c4:	11 1f       	adc	r17, r17
    20c6:	22 1f       	adc	r18, r18
    20c8:	33 1f       	adc	r19, r19
    20ca:	0a 94       	dec	r0
    20cc:	d2 f7       	brpl	.-12     	; 0x20c2 <__moddi3+0xb5a>
    20ce:	0d ab       	std	Y+53, r16	; 0x35
    20d0:	1e ab       	std	Y+54, r17	; 0x36
    20d2:	2f ab       	std	Y+55, r18	; 0x37
    20d4:	38 af       	std	Y+56, r19	; 0x38
    20d6:	25 96       	adiw	r28, 0x05	; 5
    20d8:	2c ad       	ldd	r18, Y+60	; 0x3c
    20da:	3d ad       	ldd	r19, Y+61	; 0x3d
    20dc:	4e ad       	ldd	r20, Y+62	; 0x3e
    20de:	5f ad       	ldd	r21, Y+63	; 0x3f
    20e0:	25 97       	sbiw	r28, 0x05	; 5
    20e2:	3a 01       	movw	r6, r20
    20e4:	88 24       	eor	r8, r8
    20e6:	99 24       	eor	r9, r9
    20e8:	40 70       	andi	r20, 0x00	; 0
    20ea:	50 70       	andi	r21, 0x00	; 0
    20ec:	a5 96       	adiw	r28, 0x25	; 37
    20ee:	2c af       	std	Y+60, r18	; 0x3c
    20f0:	3d af       	std	Y+61, r19	; 0x3d
    20f2:	4e af       	std	Y+62, r20	; 0x3e
    20f4:	5f af       	std	Y+63, r21	; 0x3f
    20f6:	a5 97       	sbiw	r28, 0x25	; 37
    20f8:	c6 01       	movw	r24, r12
    20fa:	b5 01       	movw	r22, r10
    20fc:	a4 01       	movw	r20, r8
    20fe:	93 01       	movw	r18, r6
    2100:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    2104:	7b 01       	movw	r14, r22
    2106:	8c 01       	movw	r16, r24
    2108:	c6 01       	movw	r24, r12
    210a:	b5 01       	movw	r22, r10
    210c:	a4 01       	movw	r20, r8
    210e:	93 01       	movw	r18, r6
    2110:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    2114:	c9 01       	movw	r24, r18
    2116:	da 01       	movw	r26, r20
    2118:	1c 01       	movw	r2, r24
    211a:	2d 01       	movw	r4, r26
    211c:	c2 01       	movw	r24, r4
    211e:	b1 01       	movw	r22, r2
    2120:	a5 96       	adiw	r28, 0x25	; 37
    2122:	2c ad       	ldd	r18, Y+60	; 0x3c
    2124:	3d ad       	ldd	r19, Y+61	; 0x3d
    2126:	4e ad       	ldd	r20, Y+62	; 0x3e
    2128:	5f ad       	ldd	r21, Y+63	; 0x3f
    212a:	a5 97       	sbiw	r28, 0x25	; 37
    212c:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    2130:	9b 01       	movw	r18, r22
    2132:	ac 01       	movw	r20, r24
    2134:	87 01       	movw	r16, r14
    2136:	ff 24       	eor	r15, r15
    2138:	ee 24       	eor	r14, r14
    213a:	a9 ac       	ldd	r10, Y+57	; 0x39
    213c:	ba ac       	ldd	r11, Y+58	; 0x3a
    213e:	cb ac       	ldd	r12, Y+59	; 0x3b
    2140:	dc ac       	ldd	r13, Y+60	; 0x3c
    2142:	c6 01       	movw	r24, r12
    2144:	aa 27       	eor	r26, r26
    2146:	bb 27       	eor	r27, r27
    2148:	57 01       	movw	r10, r14
    214a:	68 01       	movw	r12, r16
    214c:	a8 2a       	or	r10, r24
    214e:	b9 2a       	or	r11, r25
    2150:	ca 2a       	or	r12, r26
    2152:	db 2a       	or	r13, r27
    2154:	a2 16       	cp	r10, r18
    2156:	b3 06       	cpc	r11, r19
    2158:	c4 06       	cpc	r12, r20
    215a:	d5 06       	cpc	r13, r21
    215c:	10 f5       	brcc	.+68     	; 0x21a2 <__moddi3+0xc3a>
    215e:	08 94       	sec
    2160:	21 08       	sbc	r2, r1
    2162:	31 08       	sbc	r3, r1
    2164:	41 08       	sbc	r4, r1
    2166:	51 08       	sbc	r5, r1
    2168:	25 96       	adiw	r28, 0x05	; 5
    216a:	ec ac       	ldd	r14, Y+60	; 0x3c
    216c:	fd ac       	ldd	r15, Y+61	; 0x3d
    216e:	0e ad       	ldd	r16, Y+62	; 0x3e
    2170:	1f ad       	ldd	r17, Y+63	; 0x3f
    2172:	25 97       	sbiw	r28, 0x05	; 5
    2174:	ae 0c       	add	r10, r14
    2176:	bf 1c       	adc	r11, r15
    2178:	c0 1e       	adc	r12, r16
    217a:	d1 1e       	adc	r13, r17
    217c:	ae 14       	cp	r10, r14
    217e:	bf 04       	cpc	r11, r15
    2180:	c0 06       	cpc	r12, r16
    2182:	d1 06       	cpc	r13, r17
    2184:	70 f0       	brcs	.+28     	; 0x21a2 <__moddi3+0xc3a>
    2186:	a2 16       	cp	r10, r18
    2188:	b3 06       	cpc	r11, r19
    218a:	c4 06       	cpc	r12, r20
    218c:	d5 06       	cpc	r13, r21
    218e:	48 f4       	brcc	.+18     	; 0x21a2 <__moddi3+0xc3a>
    2190:	08 94       	sec
    2192:	21 08       	sbc	r2, r1
    2194:	31 08       	sbc	r3, r1
    2196:	41 08       	sbc	r4, r1
    2198:	51 08       	sbc	r5, r1
    219a:	ae 0c       	add	r10, r14
    219c:	bf 1c       	adc	r11, r15
    219e:	c0 1e       	adc	r12, r16
    21a0:	d1 1e       	adc	r13, r17
    21a2:	a2 1a       	sub	r10, r18
    21a4:	b3 0a       	sbc	r11, r19
    21a6:	c4 0a       	sbc	r12, r20
    21a8:	d5 0a       	sbc	r13, r21
    21aa:	c6 01       	movw	r24, r12
    21ac:	b5 01       	movw	r22, r10
    21ae:	a4 01       	movw	r20, r8
    21b0:	93 01       	movw	r18, r6
    21b2:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    21b6:	7b 01       	movw	r14, r22
    21b8:	8c 01       	movw	r16, r24
    21ba:	c6 01       	movw	r24, r12
    21bc:	b5 01       	movw	r22, r10
    21be:	a4 01       	movw	r20, r8
    21c0:	93 01       	movw	r18, r6
    21c2:	0e 94 44 31 	call	0x6288	; 0x6288 <__udivmodsi4>
    21c6:	c9 01       	movw	r24, r18
    21c8:	da 01       	movw	r26, r20
    21ca:	3c 01       	movw	r6, r24
    21cc:	4d 01       	movw	r8, r26
    21ce:	c4 01       	movw	r24, r8
    21d0:	b3 01       	movw	r22, r6
    21d2:	a5 96       	adiw	r28, 0x25	; 37
    21d4:	2c ad       	ldd	r18, Y+60	; 0x3c
    21d6:	3d ad       	ldd	r19, Y+61	; 0x3d
    21d8:	4e ad       	ldd	r20, Y+62	; 0x3e
    21da:	5f ad       	ldd	r21, Y+63	; 0x3f
    21dc:	a5 97       	sbiw	r28, 0x25	; 37
    21de:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    21e2:	9b 01       	movw	r18, r22
    21e4:	ac 01       	movw	r20, r24
    21e6:	87 01       	movw	r16, r14
    21e8:	ff 24       	eor	r15, r15
    21ea:	ee 24       	eor	r14, r14
    21ec:	89 ad       	ldd	r24, Y+57	; 0x39
    21ee:	9a ad       	ldd	r25, Y+58	; 0x3a
    21f0:	ab ad       	ldd	r26, Y+59	; 0x3b
    21f2:	bc ad       	ldd	r27, Y+60	; 0x3c
    21f4:	a0 70       	andi	r26, 0x00	; 0
    21f6:	b0 70       	andi	r27, 0x00	; 0
    21f8:	57 01       	movw	r10, r14
    21fa:	68 01       	movw	r12, r16
    21fc:	a8 2a       	or	r10, r24
    21fe:	b9 2a       	or	r11, r25
    2200:	ca 2a       	or	r12, r26
    2202:	db 2a       	or	r13, r27
    2204:	a2 16       	cp	r10, r18
    2206:	b3 06       	cpc	r11, r19
    2208:	c4 06       	cpc	r12, r20
    220a:	d5 06       	cpc	r13, r21
    220c:	10 f5       	brcc	.+68     	; 0x2252 <__moddi3+0xcea>
    220e:	08 94       	sec
    2210:	61 08       	sbc	r6, r1
    2212:	71 08       	sbc	r7, r1
    2214:	81 08       	sbc	r8, r1
    2216:	91 08       	sbc	r9, r1
    2218:	25 96       	adiw	r28, 0x05	; 5
    221a:	6c ad       	ldd	r22, Y+60	; 0x3c
    221c:	7d ad       	ldd	r23, Y+61	; 0x3d
    221e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2220:	9f ad       	ldd	r25, Y+63	; 0x3f
    2222:	25 97       	sbiw	r28, 0x05	; 5
    2224:	a6 0e       	add	r10, r22
    2226:	b7 1e       	adc	r11, r23
    2228:	c8 1e       	adc	r12, r24
    222a:	d9 1e       	adc	r13, r25
    222c:	a6 16       	cp	r10, r22
    222e:	b7 06       	cpc	r11, r23
    2230:	c8 06       	cpc	r12, r24
    2232:	d9 06       	cpc	r13, r25
    2234:	70 f0       	brcs	.+28     	; 0x2252 <__moddi3+0xcea>
    2236:	a2 16       	cp	r10, r18
    2238:	b3 06       	cpc	r11, r19
    223a:	c4 06       	cpc	r12, r20
    223c:	d5 06       	cpc	r13, r21
    223e:	48 f4       	brcc	.+18     	; 0x2252 <__moddi3+0xcea>
    2240:	08 94       	sec
    2242:	61 08       	sbc	r6, r1
    2244:	71 08       	sbc	r7, r1
    2246:	81 08       	sbc	r8, r1
    2248:	91 08       	sbc	r9, r1
    224a:	a6 0e       	add	r10, r22
    224c:	b7 1e       	adc	r11, r23
    224e:	c8 1e       	adc	r12, r24
    2250:	d9 1e       	adc	r13, r25
    2252:	d6 01       	movw	r26, r12
    2254:	c5 01       	movw	r24, r10
    2256:	82 1b       	sub	r24, r18
    2258:	93 0b       	sbc	r25, r19
    225a:	a4 0b       	sbc	r26, r20
    225c:	b5 0b       	sbc	r27, r21
    225e:	89 ab       	std	Y+49, r24	; 0x31
    2260:	9a ab       	std	Y+50, r25	; 0x32
    2262:	ab ab       	std	Y+51, r26	; 0x33
    2264:	bc ab       	std	Y+52, r27	; 0x34
    2266:	d1 01       	movw	r26, r2
    2268:	99 27       	eor	r25, r25
    226a:	88 27       	eor	r24, r24
    226c:	84 01       	movw	r16, r8
    226e:	73 01       	movw	r14, r6
    2270:	e8 2a       	or	r14, r24
    2272:	f9 2a       	or	r15, r25
    2274:	0a 2b       	or	r16, r26
    2276:	1b 2b       	or	r17, r27
    2278:	8f ef       	ldi	r24, 0xFF	; 255
    227a:	a8 2e       	mov	r10, r24
    227c:	8f ef       	ldi	r24, 0xFF	; 255
    227e:	b8 2e       	mov	r11, r24
    2280:	c1 2c       	mov	r12, r1
    2282:	d1 2c       	mov	r13, r1
    2284:	ae 20       	and	r10, r14
    2286:	bf 20       	and	r11, r15
    2288:	c0 22       	and	r12, r16
    228a:	d1 22       	and	r13, r17
    228c:	78 01       	movw	r14, r16
    228e:	00 27       	eor	r16, r16
    2290:	11 27       	eor	r17, r17
    2292:	21 96       	adiw	r28, 0x01	; 1
    2294:	6c ac       	ldd	r6, Y+60	; 0x3c
    2296:	7d ac       	ldd	r7, Y+61	; 0x3d
    2298:	8e ac       	ldd	r8, Y+62	; 0x3e
    229a:	9f ac       	ldd	r9, Y+63	; 0x3f
    229c:	21 97       	sbiw	r28, 0x01	; 1
    229e:	2f ef       	ldi	r18, 0xFF	; 255
    22a0:	3f ef       	ldi	r19, 0xFF	; 255
    22a2:	40 e0       	ldi	r20, 0x00	; 0
    22a4:	50 e0       	ldi	r21, 0x00	; 0
    22a6:	62 22       	and	r6, r18
    22a8:	73 22       	and	r7, r19
    22aa:	84 22       	and	r8, r20
    22ac:	95 22       	and	r9, r21
    22ae:	21 96       	adiw	r28, 0x01	; 1
    22b0:	6c ad       	ldd	r22, Y+60	; 0x3c
    22b2:	7d ad       	ldd	r23, Y+61	; 0x3d
    22b4:	8e ad       	ldd	r24, Y+62	; 0x3e
    22b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    22b8:	21 97       	sbiw	r28, 0x01	; 1
    22ba:	ac 01       	movw	r20, r24
    22bc:	66 27       	eor	r22, r22
    22be:	77 27       	eor	r23, r23
    22c0:	ad 96       	adiw	r28, 0x2d	; 45
    22c2:	4c af       	std	Y+60, r20	; 0x3c
    22c4:	5d af       	std	Y+61, r21	; 0x3d
    22c6:	6e af       	std	Y+62, r22	; 0x3e
    22c8:	7f af       	std	Y+63, r23	; 0x3f
    22ca:	ad 97       	sbiw	r28, 0x2d	; 45
    22cc:	c6 01       	movw	r24, r12
    22ce:	b5 01       	movw	r22, r10
    22d0:	a4 01       	movw	r20, r8
    22d2:	93 01       	movw	r18, r6
    22d4:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    22d8:	a9 96       	adiw	r28, 0x29	; 41
    22da:	6c af       	std	Y+60, r22	; 0x3c
    22dc:	7d af       	std	Y+61, r23	; 0x3d
    22de:	8e af       	std	Y+62, r24	; 0x3e
    22e0:	9f af       	std	Y+63, r25	; 0x3f
    22e2:	a9 97       	sbiw	r28, 0x29	; 41
    22e4:	c6 01       	movw	r24, r12
    22e6:	b5 01       	movw	r22, r10
    22e8:	ad 96       	adiw	r28, 0x2d	; 45
    22ea:	2c ad       	ldd	r18, Y+60	; 0x3c
    22ec:	3d ad       	ldd	r19, Y+61	; 0x3d
    22ee:	4e ad       	ldd	r20, Y+62	; 0x3e
    22f0:	5f ad       	ldd	r21, Y+63	; 0x3f
    22f2:	ad 97       	sbiw	r28, 0x2d	; 45
    22f4:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    22f8:	1b 01       	movw	r2, r22
    22fa:	2c 01       	movw	r4, r24
    22fc:	c8 01       	movw	r24, r16
    22fe:	b7 01       	movw	r22, r14
    2300:	a4 01       	movw	r20, r8
    2302:	93 01       	movw	r18, r6
    2304:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    2308:	5b 01       	movw	r10, r22
    230a:	6c 01       	movw	r12, r24
    230c:	c8 01       	movw	r24, r16
    230e:	b7 01       	movw	r22, r14
    2310:	ad 96       	adiw	r28, 0x2d	; 45
    2312:	2c ad       	ldd	r18, Y+60	; 0x3c
    2314:	3d ad       	ldd	r19, Y+61	; 0x3d
    2316:	4e ad       	ldd	r20, Y+62	; 0x3e
    2318:	5f ad       	ldd	r21, Y+63	; 0x3f
    231a:	ad 97       	sbiw	r28, 0x2d	; 45
    231c:	0e 94 25 31 	call	0x624a	; 0x624a <__mulsi3>
    2320:	7b 01       	movw	r14, r22
    2322:	8c 01       	movw	r16, r24
    2324:	a6 01       	movw	r20, r12
    2326:	95 01       	movw	r18, r10
    2328:	22 0d       	add	r18, r2
    232a:	33 1d       	adc	r19, r3
    232c:	44 1d       	adc	r20, r4
    232e:	55 1d       	adc	r21, r5
    2330:	a9 96       	adiw	r28, 0x29	; 41
    2332:	6c ac       	ldd	r6, Y+60	; 0x3c
    2334:	7d ac       	ldd	r7, Y+61	; 0x3d
    2336:	8e ac       	ldd	r8, Y+62	; 0x3e
    2338:	9f ac       	ldd	r9, Y+63	; 0x3f
    233a:	a9 97       	sbiw	r28, 0x29	; 41
    233c:	c4 01       	movw	r24, r8
    233e:	aa 27       	eor	r26, r26
    2340:	bb 27       	eor	r27, r27
    2342:	28 0f       	add	r18, r24
    2344:	39 1f       	adc	r19, r25
    2346:	4a 1f       	adc	r20, r26
    2348:	5b 1f       	adc	r21, r27
    234a:	2a 15       	cp	r18, r10
    234c:	3b 05       	cpc	r19, r11
    234e:	4c 05       	cpc	r20, r12
    2350:	5d 05       	cpc	r21, r13
    2352:	48 f4       	brcc	.+18     	; 0x2366 <__moddi3+0xdfe>
    2354:	81 2c       	mov	r8, r1
    2356:	91 2c       	mov	r9, r1
    2358:	e1 e0       	ldi	r30, 0x01	; 1
    235a:	ae 2e       	mov	r10, r30
    235c:	b1 2c       	mov	r11, r1
    235e:	e8 0c       	add	r14, r8
    2360:	f9 1c       	adc	r15, r9
    2362:	0a 1d       	adc	r16, r10
    2364:	1b 1d       	adc	r17, r11
    2366:	ca 01       	movw	r24, r20
    2368:	aa 27       	eor	r26, r26
    236a:	bb 27       	eor	r27, r27
    236c:	57 01       	movw	r10, r14
    236e:	68 01       	movw	r12, r16
    2370:	a8 0e       	add	r10, r24
    2372:	b9 1e       	adc	r11, r25
    2374:	ca 1e       	adc	r12, r26
    2376:	db 1e       	adc	r13, r27
    2378:	a9 01       	movw	r20, r18
    237a:	33 27       	eor	r19, r19
    237c:	22 27       	eor	r18, r18
    237e:	a9 96       	adiw	r28, 0x29	; 41
    2380:	8c ad       	ldd	r24, Y+60	; 0x3c
    2382:	9d ad       	ldd	r25, Y+61	; 0x3d
    2384:	ae ad       	ldd	r26, Y+62	; 0x3e
    2386:	bf ad       	ldd	r27, Y+63	; 0x3f
    2388:	a9 97       	sbiw	r28, 0x29	; 41
    238a:	a0 70       	andi	r26, 0x00	; 0
    238c:	b0 70       	andi	r27, 0x00	; 0
    238e:	28 0f       	add	r18, r24
    2390:	39 1f       	adc	r19, r25
    2392:	4a 1f       	adc	r20, r26
    2394:	5b 1f       	adc	r21, r27
    2396:	e9 a8       	ldd	r14, Y+49	; 0x31
    2398:	fa a8       	ldd	r15, Y+50	; 0x32
    239a:	0b a9       	ldd	r16, Y+51	; 0x33
    239c:	1c a9       	ldd	r17, Y+52	; 0x34
    239e:	ea 14       	cp	r14, r10
    23a0:	fb 04       	cpc	r15, r11
    23a2:	0c 05       	cpc	r16, r12
    23a4:	1d 05       	cpc	r17, r13
    23a6:	70 f0       	brcs	.+28     	; 0x23c4 <__moddi3+0xe5c>
    23a8:	ae 14       	cp	r10, r14
    23aa:	bf 04       	cpc	r11, r15
    23ac:	c0 06       	cpc	r12, r16
    23ae:	d1 06       	cpc	r13, r17
    23b0:	89 f5       	brne	.+98     	; 0x2414 <__moddi3+0xeac>
    23b2:	6d a9       	ldd	r22, Y+53	; 0x35
    23b4:	7e a9       	ldd	r23, Y+54	; 0x36
    23b6:	8f a9       	ldd	r24, Y+55	; 0x37
    23b8:	98 ad       	ldd	r25, Y+56	; 0x38
    23ba:	62 17       	cp	r22, r18
    23bc:	73 07       	cpc	r23, r19
    23be:	84 07       	cpc	r24, r20
    23c0:	95 07       	cpc	r25, r21
    23c2:	40 f5       	brcc	.+80     	; 0x2414 <__moddi3+0xeac>
    23c4:	da 01       	movw	r26, r20
    23c6:	c9 01       	movw	r24, r18
    23c8:	21 96       	adiw	r28, 0x01	; 1
    23ca:	6c ac       	ldd	r6, Y+60	; 0x3c
    23cc:	7d ac       	ldd	r7, Y+61	; 0x3d
    23ce:	8e ac       	ldd	r8, Y+62	; 0x3e
    23d0:	9f ac       	ldd	r9, Y+63	; 0x3f
    23d2:	21 97       	sbiw	r28, 0x01	; 1
    23d4:	86 19       	sub	r24, r6
    23d6:	97 09       	sbc	r25, r7
    23d8:	a8 09       	sbc	r26, r8
    23da:	b9 09       	sbc	r27, r9
    23dc:	25 96       	adiw	r28, 0x05	; 5
    23de:	ec ac       	ldd	r14, Y+60	; 0x3c
    23e0:	fd ac       	ldd	r15, Y+61	; 0x3d
    23e2:	0e ad       	ldd	r16, Y+62	; 0x3e
    23e4:	1f ad       	ldd	r17, Y+63	; 0x3f
    23e6:	25 97       	sbiw	r28, 0x05	; 5
    23e8:	ae 18       	sub	r10, r14
    23ea:	bf 08       	sbc	r11, r15
    23ec:	c0 0a       	sbc	r12, r16
    23ee:	d1 0a       	sbc	r13, r17
    23f0:	ee 24       	eor	r14, r14
    23f2:	ff 24       	eor	r15, r15
    23f4:	87 01       	movw	r16, r14
    23f6:	28 17       	cp	r18, r24
    23f8:	39 07       	cpc	r19, r25
    23fa:	4a 07       	cpc	r20, r26
    23fc:	5b 07       	cpc	r21, r27
    23fe:	28 f4       	brcc	.+10     	; 0x240a <__moddi3+0xea2>
    2400:	21 e0       	ldi	r18, 0x01	; 1
    2402:	e2 2e       	mov	r14, r18
    2404:	f1 2c       	mov	r15, r1
    2406:	01 2d       	mov	r16, r1
    2408:	11 2d       	mov	r17, r1
    240a:	ae 18       	sub	r10, r14
    240c:	bf 08       	sbc	r11, r15
    240e:	c0 0a       	sbc	r12, r16
    2410:	d1 0a       	sbc	r13, r17
    2412:	02 c0       	rjmp	.+4      	; 0x2418 <__moddi3+0xeb0>
    2414:	da 01       	movw	r26, r20
    2416:	c9 01       	movw	r24, r18
    2418:	6d a8       	ldd	r6, Y+53	; 0x35
    241a:	7e a8       	ldd	r7, Y+54	; 0x36
    241c:	8f a8       	ldd	r8, Y+55	; 0x37
    241e:	98 ac       	ldd	r9, Y+56	; 0x38
    2420:	68 1a       	sub	r6, r24
    2422:	79 0a       	sbc	r7, r25
    2424:	8a 0a       	sbc	r8, r26
    2426:	9b 0a       	sbc	r9, r27
    2428:	09 a9       	ldd	r16, Y+49	; 0x31
    242a:	1a a9       	ldd	r17, Y+50	; 0x32
    242c:	2b a9       	ldd	r18, Y+51	; 0x33
    242e:	3c a9       	ldd	r19, Y+52	; 0x34
    2430:	0a 19       	sub	r16, r10
    2432:	1b 09       	sbc	r17, r11
    2434:	2c 09       	sbc	r18, r12
    2436:	3d 09       	sbc	r19, r13
    2438:	58 01       	movw	r10, r16
    243a:	69 01       	movw	r12, r18
    243c:	22 24       	eor	r2, r2
    243e:	33 24       	eor	r3, r3
    2440:	21 01       	movw	r4, r2
    2442:	2d a9       	ldd	r18, Y+53	; 0x35
    2444:	3e a9       	ldd	r19, Y+54	; 0x36
    2446:	4f a9       	ldd	r20, Y+55	; 0x37
    2448:	58 ad       	ldd	r21, Y+56	; 0x38
    244a:	26 15       	cp	r18, r6
    244c:	37 05       	cpc	r19, r7
    244e:	48 05       	cpc	r20, r8
    2450:	59 05       	cpc	r21, r9
    2452:	28 f4       	brcc	.+10     	; 0x245e <__moddi3+0xef6>
    2454:	81 e0       	ldi	r24, 0x01	; 1
    2456:	28 2e       	mov	r2, r24
    2458:	31 2c       	mov	r3, r1
    245a:	41 2c       	mov	r4, r1
    245c:	51 2c       	mov	r5, r1
    245e:	86 01       	movw	r16, r12
    2460:	75 01       	movw	r14, r10
    2462:	e2 18       	sub	r14, r2
    2464:	f3 08       	sbc	r15, r3
    2466:	04 09       	sbc	r16, r4
    2468:	15 09       	sbc	r17, r5
    246a:	a8 01       	movw	r20, r16
    246c:	97 01       	movw	r18, r14
    246e:	e2 96       	adiw	r28, 0x32	; 50
    2470:	0f ac       	ldd	r0, Y+63	; 0x3f
    2472:	e2 97       	sbiw	r28, 0x32	; 50
    2474:	04 c0       	rjmp	.+8      	; 0x247e <__moddi3+0xf16>
    2476:	22 0f       	add	r18, r18
    2478:	33 1f       	adc	r19, r19
    247a:	44 1f       	adc	r20, r20
    247c:	55 1f       	adc	r21, r21
    247e:	0a 94       	dec	r0
    2480:	d2 f7       	brpl	.-12     	; 0x2476 <__moddi3+0xf0e>
    2482:	d4 01       	movw	r26, r8
    2484:	c3 01       	movw	r24, r6
    2486:	e3 96       	adiw	r28, 0x33	; 51
    2488:	0f ac       	ldd	r0, Y+63	; 0x3f
    248a:	e3 97       	sbiw	r28, 0x33	; 51
    248c:	04 c0       	rjmp	.+8      	; 0x2496 <__moddi3+0xf2e>
    248e:	b6 95       	lsr	r27
    2490:	a7 95       	ror	r26
    2492:	97 95       	ror	r25
    2494:	87 95       	ror	r24
    2496:	0a 94       	dec	r0
    2498:	d2 f7       	brpl	.-12     	; 0x248e <__moddi3+0xf26>
    249a:	28 2b       	or	r18, r24
    249c:	39 2b       	or	r19, r25
    249e:	4a 2b       	or	r20, r26
    24a0:	5b 2b       	or	r21, r27
    24a2:	29 a7       	std	Y+41, r18	; 0x29
    24a4:	3a a7       	std	Y+42, r19	; 0x2a
    24a6:	4b a7       	std	Y+43, r20	; 0x2b
    24a8:	5c a7       	std	Y+44, r21	; 0x2c
    24aa:	e3 96       	adiw	r28, 0x33	; 51
    24ac:	0f ac       	ldd	r0, Y+63	; 0x3f
    24ae:	e3 97       	sbiw	r28, 0x33	; 51
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <__moddi3+0xf52>
    24b2:	16 95       	lsr	r17
    24b4:	07 95       	ror	r16
    24b6:	f7 94       	ror	r15
    24b8:	e7 94       	ror	r14
    24ba:	0a 94       	dec	r0
    24bc:	d2 f7       	brpl	.-12     	; 0x24b2 <__moddi3+0xf4a>
    24be:	ed a6       	std	Y+45, r14	; 0x2d
    24c0:	fe a6       	std	Y+46, r15	; 0x2e
    24c2:	0f a7       	std	Y+47, r16	; 0x2f
    24c4:	18 ab       	std	Y+48, r17	; 0x30
    24c6:	29 8b       	std	Y+17, r18	; 0x11
    24c8:	8a a5       	ldd	r24, Y+42	; 0x2a
    24ca:	8a 8b       	std	Y+18, r24	; 0x12
    24cc:	8b a5       	ldd	r24, Y+43	; 0x2b
    24ce:	8b 8b       	std	Y+19, r24	; 0x13
    24d0:	8c a5       	ldd	r24, Y+44	; 0x2c
    24d2:	8c 8b       	std	Y+20, r24	; 0x14
    24d4:	ed 8a       	std	Y+21, r14	; 0x15
    24d6:	8e a5       	ldd	r24, Y+46	; 0x2e
    24d8:	8e 8b       	std	Y+22, r24	; 0x16
    24da:	8f a5       	ldd	r24, Y+47	; 0x2f
    24dc:	8f 8b       	std	Y+23, r24	; 0x17
    24de:	88 a9       	ldd	r24, Y+48	; 0x30
    24e0:	88 8f       	std	Y+24, r24	; 0x18
    24e2:	e1 96       	adiw	r28, 0x31	; 49
    24e4:	4c ad       	ldd	r20, Y+60	; 0x3c
    24e6:	5d ad       	ldd	r21, Y+61	; 0x3d
    24e8:	6e ad       	ldd	r22, Y+62	; 0x3e
    24ea:	7f ad       	ldd	r23, Y+63	; 0x3f
    24ec:	e1 97       	sbiw	r28, 0x31	; 49
    24ee:	41 15       	cp	r20, r1
    24f0:	51 05       	cpc	r21, r1
    24f2:	61 05       	cpc	r22, r1
    24f4:	71 05       	cpc	r23, r1
    24f6:	09 f4       	brne	.+2      	; 0x24fa <__moddi3+0xf92>
    24f8:	67 c0       	rjmp	.+206    	; 0x25c8 <__moddi3+0x1060>
    24fa:	89 89       	ldd	r24, Y+17	; 0x11
    24fc:	2a 89       	ldd	r18, Y+18	; 0x12
    24fe:	3b 89       	ldd	r19, Y+19	; 0x13
    2500:	4c 89       	ldd	r20, Y+20	; 0x14
    2502:	5d 89       	ldd	r21, Y+21	; 0x15
    2504:	ae 89       	ldd	r26, Y+22	; 0x16
    2506:	bf 89       	ldd	r27, Y+23	; 0x17
    2508:	18 8d       	ldd	r17, Y+24	; 0x18
    250a:	f8 2f       	mov	r31, r24
    250c:	f1 95       	neg	r31
    250e:	91 e0       	ldi	r25, 0x01	; 1
    2510:	1f 16       	cp	r1, r31
    2512:	08 f0       	brcs	.+2      	; 0x2516 <__moddi3+0xfae>
    2514:	90 e0       	ldi	r25, 0x00	; 0
    2516:	82 2f       	mov	r24, r18
    2518:	81 95       	neg	r24
    251a:	21 e0       	ldi	r18, 0x01	; 1
    251c:	18 16       	cp	r1, r24
    251e:	08 f0       	brcs	.+2      	; 0x2522 <__moddi3+0xfba>
    2520:	20 e0       	ldi	r18, 0x00	; 0
    2522:	e8 2f       	mov	r30, r24
    2524:	e9 1b       	sub	r30, r25
    2526:	91 e0       	ldi	r25, 0x01	; 1
    2528:	8e 17       	cp	r24, r30
    252a:	08 f0       	brcs	.+2      	; 0x252e <__moddi3+0xfc6>
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	29 2b       	or	r18, r25
    2530:	83 2f       	mov	r24, r19
    2532:	81 95       	neg	r24
    2534:	31 e0       	ldi	r19, 0x01	; 1
    2536:	18 16       	cp	r1, r24
    2538:	08 f0       	brcs	.+2      	; 0x253c <__moddi3+0xfd4>
    253a:	30 e0       	ldi	r19, 0x00	; 0
    253c:	78 2f       	mov	r23, r24
    253e:	72 1b       	sub	r23, r18
    2540:	91 e0       	ldi	r25, 0x01	; 1
    2542:	87 17       	cp	r24, r23
    2544:	08 f0       	brcs	.+2      	; 0x2548 <__moddi3+0xfe0>
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	39 2b       	or	r19, r25
    254a:	84 2f       	mov	r24, r20
    254c:	81 95       	neg	r24
    254e:	21 e0       	ldi	r18, 0x01	; 1
    2550:	18 16       	cp	r1, r24
    2552:	08 f0       	brcs	.+2      	; 0x2556 <__moddi3+0xfee>
    2554:	20 e0       	ldi	r18, 0x00	; 0
    2556:	68 2f       	mov	r22, r24
    2558:	63 1b       	sub	r22, r19
    255a:	91 e0       	ldi	r25, 0x01	; 1
    255c:	86 17       	cp	r24, r22
    255e:	08 f0       	brcs	.+2      	; 0x2562 <__moddi3+0xffa>
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	29 2b       	or	r18, r25
    2564:	85 2f       	mov	r24, r21
    2566:	81 95       	neg	r24
    2568:	31 e0       	ldi	r19, 0x01	; 1
    256a:	18 16       	cp	r1, r24
    256c:	08 f0       	brcs	.+2      	; 0x2570 <__moddi3+0x1008>
    256e:	30 e0       	ldi	r19, 0x00	; 0
    2570:	58 2f       	mov	r21, r24
    2572:	52 1b       	sub	r21, r18
    2574:	91 e0       	ldi	r25, 0x01	; 1
    2576:	85 17       	cp	r24, r21
    2578:	08 f0       	brcs	.+2      	; 0x257c <__moddi3+0x1014>
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	39 2b       	or	r19, r25
    257e:	8a 2f       	mov	r24, r26
    2580:	81 95       	neg	r24
    2582:	21 e0       	ldi	r18, 0x01	; 1
    2584:	18 16       	cp	r1, r24
    2586:	08 f0       	brcs	.+2      	; 0x258a <__moddi3+0x1022>
    2588:	20 e0       	ldi	r18, 0x00	; 0
    258a:	48 2f       	mov	r20, r24
    258c:	43 1b       	sub	r20, r19
    258e:	91 e0       	ldi	r25, 0x01	; 1
    2590:	84 17       	cp	r24, r20
    2592:	08 f0       	brcs	.+2      	; 0x2596 <__moddi3+0x102e>
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	29 2b       	or	r18, r25
    2598:	8b 2f       	mov	r24, r27
    259a:	81 95       	neg	r24
    259c:	91 e0       	ldi	r25, 0x01	; 1
    259e:	18 16       	cp	r1, r24
    25a0:	08 f0       	brcs	.+2      	; 0x25a4 <__moddi3+0x103c>
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	38 2f       	mov	r19, r24
    25a6:	32 1b       	sub	r19, r18
    25a8:	21 e0       	ldi	r18, 0x01	; 1
    25aa:	83 17       	cp	r24, r19
    25ac:	08 f0       	brcs	.+2      	; 0x25b0 <__moddi3+0x1048>
    25ae:	20 e0       	ldi	r18, 0x00	; 0
    25b0:	92 2b       	or	r25, r18
    25b2:	81 2f       	mov	r24, r17
    25b4:	81 95       	neg	r24
    25b6:	89 1b       	sub	r24, r25
    25b8:	f9 8b       	std	Y+17, r31	; 0x11
    25ba:	ea 8b       	std	Y+18, r30	; 0x12
    25bc:	7b 8b       	std	Y+19, r23	; 0x13
    25be:	6c 8b       	std	Y+20, r22	; 0x14
    25c0:	5d 8b       	std	Y+21, r21	; 0x15
    25c2:	4e 8b       	std	Y+22, r20	; 0x16
    25c4:	3f 8b       	std	Y+23, r19	; 0x17
    25c6:	88 8f       	std	Y+24, r24	; 0x18
    25c8:	29 89       	ldd	r18, Y+17	; 0x11
    25ca:	3a 89       	ldd	r19, Y+18	; 0x12
    25cc:	4b 89       	ldd	r20, Y+19	; 0x13
    25ce:	5c 89       	ldd	r21, Y+20	; 0x14
    25d0:	6d 89       	ldd	r22, Y+21	; 0x15
    25d2:	7e 89       	ldd	r23, Y+22	; 0x16
    25d4:	8f 89       	ldd	r24, Y+23	; 0x17
    25d6:	98 8d       	ldd	r25, Y+24	; 0x18
    25d8:	c9 58       	subi	r28, 0x89	; 137
    25da:	df 4f       	sbci	r29, 0xFF	; 255
    25dc:	e2 e1       	ldi	r30, 0x12	; 18
    25de:	0c 94 82 31 	jmp	0x6304	; 0x6304 <__epilogue_restores__>

000025e2 <_fpadd_parts>:
    25e2:	a0 e0       	ldi	r26, 0x00	; 0
    25e4:	b0 e0       	ldi	r27, 0x00	; 0
    25e6:	e7 ef       	ldi	r30, 0xF7	; 247
    25e8:	f2 e1       	ldi	r31, 0x12	; 18
    25ea:	0c 94 66 31 	jmp	0x62cc	; 0x62cc <__prologue_saves__>
    25ee:	dc 01       	movw	r26, r24
    25f0:	2b 01       	movw	r4, r22
    25f2:	fa 01       	movw	r30, r20
    25f4:	9c 91       	ld	r25, X
    25f6:	92 30       	cpi	r25, 0x02	; 2
    25f8:	08 f4       	brcc	.+2      	; 0x25fc <_fpadd_parts+0x1a>
    25fa:	39 c1       	rjmp	.+626    	; 0x286e <_fpadd_parts+0x28c>
    25fc:	eb 01       	movw	r28, r22
    25fe:	88 81       	ld	r24, Y
    2600:	82 30       	cpi	r24, 0x02	; 2
    2602:	08 f4       	brcc	.+2      	; 0x2606 <_fpadd_parts+0x24>
    2604:	33 c1       	rjmp	.+614    	; 0x286c <_fpadd_parts+0x28a>
    2606:	94 30       	cpi	r25, 0x04	; 4
    2608:	69 f4       	brne	.+26     	; 0x2624 <_fpadd_parts+0x42>
    260a:	84 30       	cpi	r24, 0x04	; 4
    260c:	09 f0       	breq	.+2      	; 0x2610 <_fpadd_parts+0x2e>
    260e:	2f c1       	rjmp	.+606    	; 0x286e <_fpadd_parts+0x28c>
    2610:	11 96       	adiw	r26, 0x01	; 1
    2612:	9c 91       	ld	r25, X
    2614:	11 97       	sbiw	r26, 0x01	; 1
    2616:	89 81       	ldd	r24, Y+1	; 0x01
    2618:	98 17       	cp	r25, r24
    261a:	09 f4       	brne	.+2      	; 0x261e <_fpadd_parts+0x3c>
    261c:	28 c1       	rjmp	.+592    	; 0x286e <_fpadd_parts+0x28c>
    261e:	ae e8       	ldi	r26, 0x8E	; 142
    2620:	b0 e0       	ldi	r27, 0x00	; 0
    2622:	25 c1       	rjmp	.+586    	; 0x286e <_fpadd_parts+0x28c>
    2624:	84 30       	cpi	r24, 0x04	; 4
    2626:	09 f4       	brne	.+2      	; 0x262a <_fpadd_parts+0x48>
    2628:	21 c1       	rjmp	.+578    	; 0x286c <_fpadd_parts+0x28a>
    262a:	82 30       	cpi	r24, 0x02	; 2
    262c:	a9 f4       	brne	.+42     	; 0x2658 <_fpadd_parts+0x76>
    262e:	92 30       	cpi	r25, 0x02	; 2
    2630:	09 f0       	breq	.+2      	; 0x2634 <_fpadd_parts+0x52>
    2632:	1d c1       	rjmp	.+570    	; 0x286e <_fpadd_parts+0x28c>
    2634:	9a 01       	movw	r18, r20
    2636:	ad 01       	movw	r20, r26
    2638:	88 e0       	ldi	r24, 0x08	; 8
    263a:	ea 01       	movw	r28, r20
    263c:	09 90       	ld	r0, Y+
    263e:	ae 01       	movw	r20, r28
    2640:	e9 01       	movw	r28, r18
    2642:	09 92       	st	Y+, r0
    2644:	9e 01       	movw	r18, r28
    2646:	81 50       	subi	r24, 0x01	; 1
    2648:	c1 f7       	brne	.-16     	; 0x263a <_fpadd_parts+0x58>
    264a:	e2 01       	movw	r28, r4
    264c:	89 81       	ldd	r24, Y+1	; 0x01
    264e:	11 96       	adiw	r26, 0x01	; 1
    2650:	9c 91       	ld	r25, X
    2652:	89 23       	and	r24, r25
    2654:	81 83       	std	Z+1, r24	; 0x01
    2656:	08 c1       	rjmp	.+528    	; 0x2868 <_fpadd_parts+0x286>
    2658:	92 30       	cpi	r25, 0x02	; 2
    265a:	09 f4       	brne	.+2      	; 0x265e <_fpadd_parts+0x7c>
    265c:	07 c1       	rjmp	.+526    	; 0x286c <_fpadd_parts+0x28a>
    265e:	12 96       	adiw	r26, 0x02	; 2
    2660:	2d 90       	ld	r2, X+
    2662:	3c 90       	ld	r3, X
    2664:	13 97       	sbiw	r26, 0x03	; 3
    2666:	eb 01       	movw	r28, r22
    2668:	8a 81       	ldd	r24, Y+2	; 0x02
    266a:	9b 81       	ldd	r25, Y+3	; 0x03
    266c:	14 96       	adiw	r26, 0x04	; 4
    266e:	ad 90       	ld	r10, X+
    2670:	bd 90       	ld	r11, X+
    2672:	cd 90       	ld	r12, X+
    2674:	dc 90       	ld	r13, X
    2676:	17 97       	sbiw	r26, 0x07	; 7
    2678:	ec 80       	ldd	r14, Y+4	; 0x04
    267a:	fd 80       	ldd	r15, Y+5	; 0x05
    267c:	0e 81       	ldd	r16, Y+6	; 0x06
    267e:	1f 81       	ldd	r17, Y+7	; 0x07
    2680:	91 01       	movw	r18, r2
    2682:	28 1b       	sub	r18, r24
    2684:	39 0b       	sbc	r19, r25
    2686:	b9 01       	movw	r22, r18
    2688:	37 ff       	sbrs	r19, 7
    268a:	04 c0       	rjmp	.+8      	; 0x2694 <_fpadd_parts+0xb2>
    268c:	66 27       	eor	r22, r22
    268e:	77 27       	eor	r23, r23
    2690:	62 1b       	sub	r22, r18
    2692:	73 0b       	sbc	r23, r19
    2694:	60 32       	cpi	r22, 0x20	; 32
    2696:	71 05       	cpc	r23, r1
    2698:	0c f0       	brlt	.+2      	; 0x269c <_fpadd_parts+0xba>
    269a:	61 c0       	rjmp	.+194    	; 0x275e <_fpadd_parts+0x17c>
    269c:	12 16       	cp	r1, r18
    269e:	13 06       	cpc	r1, r19
    26a0:	6c f5       	brge	.+90     	; 0x26fc <_fpadd_parts+0x11a>
    26a2:	37 01       	movw	r6, r14
    26a4:	48 01       	movw	r8, r16
    26a6:	06 2e       	mov	r0, r22
    26a8:	04 c0       	rjmp	.+8      	; 0x26b2 <_fpadd_parts+0xd0>
    26aa:	96 94       	lsr	r9
    26ac:	87 94       	ror	r8
    26ae:	77 94       	ror	r7
    26b0:	67 94       	ror	r6
    26b2:	0a 94       	dec	r0
    26b4:	d2 f7       	brpl	.-12     	; 0x26aa <_fpadd_parts+0xc8>
    26b6:	21 e0       	ldi	r18, 0x01	; 1
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	40 e0       	ldi	r20, 0x00	; 0
    26bc:	50 e0       	ldi	r21, 0x00	; 0
    26be:	04 c0       	rjmp	.+8      	; 0x26c8 <_fpadd_parts+0xe6>
    26c0:	22 0f       	add	r18, r18
    26c2:	33 1f       	adc	r19, r19
    26c4:	44 1f       	adc	r20, r20
    26c6:	55 1f       	adc	r21, r21
    26c8:	6a 95       	dec	r22
    26ca:	d2 f7       	brpl	.-12     	; 0x26c0 <_fpadd_parts+0xde>
    26cc:	21 50       	subi	r18, 0x01	; 1
    26ce:	30 40       	sbci	r19, 0x00	; 0
    26d0:	40 40       	sbci	r20, 0x00	; 0
    26d2:	50 40       	sbci	r21, 0x00	; 0
    26d4:	2e 21       	and	r18, r14
    26d6:	3f 21       	and	r19, r15
    26d8:	40 23       	and	r20, r16
    26da:	51 23       	and	r21, r17
    26dc:	21 15       	cp	r18, r1
    26de:	31 05       	cpc	r19, r1
    26e0:	41 05       	cpc	r20, r1
    26e2:	51 05       	cpc	r21, r1
    26e4:	21 f0       	breq	.+8      	; 0x26ee <_fpadd_parts+0x10c>
    26e6:	21 e0       	ldi	r18, 0x01	; 1
    26e8:	30 e0       	ldi	r19, 0x00	; 0
    26ea:	40 e0       	ldi	r20, 0x00	; 0
    26ec:	50 e0       	ldi	r21, 0x00	; 0
    26ee:	79 01       	movw	r14, r18
    26f0:	8a 01       	movw	r16, r20
    26f2:	e6 28       	or	r14, r6
    26f4:	f7 28       	or	r15, r7
    26f6:	08 29       	or	r16, r8
    26f8:	19 29       	or	r17, r9
    26fa:	3c c0       	rjmp	.+120    	; 0x2774 <_fpadd_parts+0x192>
    26fc:	23 2b       	or	r18, r19
    26fe:	d1 f1       	breq	.+116    	; 0x2774 <_fpadd_parts+0x192>
    2700:	26 0e       	add	r2, r22
    2702:	37 1e       	adc	r3, r23
    2704:	35 01       	movw	r6, r10
    2706:	46 01       	movw	r8, r12
    2708:	06 2e       	mov	r0, r22
    270a:	04 c0       	rjmp	.+8      	; 0x2714 <_fpadd_parts+0x132>
    270c:	96 94       	lsr	r9
    270e:	87 94       	ror	r8
    2710:	77 94       	ror	r7
    2712:	67 94       	ror	r6
    2714:	0a 94       	dec	r0
    2716:	d2 f7       	brpl	.-12     	; 0x270c <_fpadd_parts+0x12a>
    2718:	21 e0       	ldi	r18, 0x01	; 1
    271a:	30 e0       	ldi	r19, 0x00	; 0
    271c:	40 e0       	ldi	r20, 0x00	; 0
    271e:	50 e0       	ldi	r21, 0x00	; 0
    2720:	04 c0       	rjmp	.+8      	; 0x272a <_fpadd_parts+0x148>
    2722:	22 0f       	add	r18, r18
    2724:	33 1f       	adc	r19, r19
    2726:	44 1f       	adc	r20, r20
    2728:	55 1f       	adc	r21, r21
    272a:	6a 95       	dec	r22
    272c:	d2 f7       	brpl	.-12     	; 0x2722 <_fpadd_parts+0x140>
    272e:	21 50       	subi	r18, 0x01	; 1
    2730:	30 40       	sbci	r19, 0x00	; 0
    2732:	40 40       	sbci	r20, 0x00	; 0
    2734:	50 40       	sbci	r21, 0x00	; 0
    2736:	2a 21       	and	r18, r10
    2738:	3b 21       	and	r19, r11
    273a:	4c 21       	and	r20, r12
    273c:	5d 21       	and	r21, r13
    273e:	21 15       	cp	r18, r1
    2740:	31 05       	cpc	r19, r1
    2742:	41 05       	cpc	r20, r1
    2744:	51 05       	cpc	r21, r1
    2746:	21 f0       	breq	.+8      	; 0x2750 <_fpadd_parts+0x16e>
    2748:	21 e0       	ldi	r18, 0x01	; 1
    274a:	30 e0       	ldi	r19, 0x00	; 0
    274c:	40 e0       	ldi	r20, 0x00	; 0
    274e:	50 e0       	ldi	r21, 0x00	; 0
    2750:	59 01       	movw	r10, r18
    2752:	6a 01       	movw	r12, r20
    2754:	a6 28       	or	r10, r6
    2756:	b7 28       	or	r11, r7
    2758:	c8 28       	or	r12, r8
    275a:	d9 28       	or	r13, r9
    275c:	0b c0       	rjmp	.+22     	; 0x2774 <_fpadd_parts+0x192>
    275e:	82 15       	cp	r24, r2
    2760:	93 05       	cpc	r25, r3
    2762:	2c f0       	brlt	.+10     	; 0x276e <_fpadd_parts+0x18c>
    2764:	1c 01       	movw	r2, r24
    2766:	aa 24       	eor	r10, r10
    2768:	bb 24       	eor	r11, r11
    276a:	65 01       	movw	r12, r10
    276c:	03 c0       	rjmp	.+6      	; 0x2774 <_fpadd_parts+0x192>
    276e:	ee 24       	eor	r14, r14
    2770:	ff 24       	eor	r15, r15
    2772:	87 01       	movw	r16, r14
    2774:	11 96       	adiw	r26, 0x01	; 1
    2776:	9c 91       	ld	r25, X
    2778:	d2 01       	movw	r26, r4
    277a:	11 96       	adiw	r26, 0x01	; 1
    277c:	8c 91       	ld	r24, X
    277e:	98 17       	cp	r25, r24
    2780:	09 f4       	brne	.+2      	; 0x2784 <_fpadd_parts+0x1a2>
    2782:	45 c0       	rjmp	.+138    	; 0x280e <_fpadd_parts+0x22c>
    2784:	99 23       	and	r25, r25
    2786:	39 f0       	breq	.+14     	; 0x2796 <_fpadd_parts+0x1b4>
    2788:	a8 01       	movw	r20, r16
    278a:	97 01       	movw	r18, r14
    278c:	2a 19       	sub	r18, r10
    278e:	3b 09       	sbc	r19, r11
    2790:	4c 09       	sbc	r20, r12
    2792:	5d 09       	sbc	r21, r13
    2794:	06 c0       	rjmp	.+12     	; 0x27a2 <_fpadd_parts+0x1c0>
    2796:	a6 01       	movw	r20, r12
    2798:	95 01       	movw	r18, r10
    279a:	2e 19       	sub	r18, r14
    279c:	3f 09       	sbc	r19, r15
    279e:	40 0b       	sbc	r20, r16
    27a0:	51 0b       	sbc	r21, r17
    27a2:	57 fd       	sbrc	r21, 7
    27a4:	08 c0       	rjmp	.+16     	; 0x27b6 <_fpadd_parts+0x1d4>
    27a6:	11 82       	std	Z+1, r1	; 0x01
    27a8:	33 82       	std	Z+3, r3	; 0x03
    27aa:	22 82       	std	Z+2, r2	; 0x02
    27ac:	24 83       	std	Z+4, r18	; 0x04
    27ae:	35 83       	std	Z+5, r19	; 0x05
    27b0:	46 83       	std	Z+6, r20	; 0x06
    27b2:	57 83       	std	Z+7, r21	; 0x07
    27b4:	1d c0       	rjmp	.+58     	; 0x27f0 <_fpadd_parts+0x20e>
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	81 83       	std	Z+1, r24	; 0x01
    27ba:	33 82       	std	Z+3, r3	; 0x03
    27bc:	22 82       	std	Z+2, r2	; 0x02
    27be:	88 27       	eor	r24, r24
    27c0:	99 27       	eor	r25, r25
    27c2:	dc 01       	movw	r26, r24
    27c4:	82 1b       	sub	r24, r18
    27c6:	93 0b       	sbc	r25, r19
    27c8:	a4 0b       	sbc	r26, r20
    27ca:	b5 0b       	sbc	r27, r21
    27cc:	84 83       	std	Z+4, r24	; 0x04
    27ce:	95 83       	std	Z+5, r25	; 0x05
    27d0:	a6 83       	std	Z+6, r26	; 0x06
    27d2:	b7 83       	std	Z+7, r27	; 0x07
    27d4:	0d c0       	rjmp	.+26     	; 0x27f0 <_fpadd_parts+0x20e>
    27d6:	22 0f       	add	r18, r18
    27d8:	33 1f       	adc	r19, r19
    27da:	44 1f       	adc	r20, r20
    27dc:	55 1f       	adc	r21, r21
    27de:	24 83       	std	Z+4, r18	; 0x04
    27e0:	35 83       	std	Z+5, r19	; 0x05
    27e2:	46 83       	std	Z+6, r20	; 0x06
    27e4:	57 83       	std	Z+7, r21	; 0x07
    27e6:	82 81       	ldd	r24, Z+2	; 0x02
    27e8:	93 81       	ldd	r25, Z+3	; 0x03
    27ea:	01 97       	sbiw	r24, 0x01	; 1
    27ec:	93 83       	std	Z+3, r25	; 0x03
    27ee:	82 83       	std	Z+2, r24	; 0x02
    27f0:	24 81       	ldd	r18, Z+4	; 0x04
    27f2:	35 81       	ldd	r19, Z+5	; 0x05
    27f4:	46 81       	ldd	r20, Z+6	; 0x06
    27f6:	57 81       	ldd	r21, Z+7	; 0x07
    27f8:	da 01       	movw	r26, r20
    27fa:	c9 01       	movw	r24, r18
    27fc:	01 97       	sbiw	r24, 0x01	; 1
    27fe:	a1 09       	sbc	r26, r1
    2800:	b1 09       	sbc	r27, r1
    2802:	8f 5f       	subi	r24, 0xFF	; 255
    2804:	9f 4f       	sbci	r25, 0xFF	; 255
    2806:	af 4f       	sbci	r26, 0xFF	; 255
    2808:	bf 43       	sbci	r27, 0x3F	; 63
    280a:	28 f3       	brcs	.-54     	; 0x27d6 <_fpadd_parts+0x1f4>
    280c:	0b c0       	rjmp	.+22     	; 0x2824 <_fpadd_parts+0x242>
    280e:	91 83       	std	Z+1, r25	; 0x01
    2810:	33 82       	std	Z+3, r3	; 0x03
    2812:	22 82       	std	Z+2, r2	; 0x02
    2814:	ea 0c       	add	r14, r10
    2816:	fb 1c       	adc	r15, r11
    2818:	0c 1d       	adc	r16, r12
    281a:	1d 1d       	adc	r17, r13
    281c:	e4 82       	std	Z+4, r14	; 0x04
    281e:	f5 82       	std	Z+5, r15	; 0x05
    2820:	06 83       	std	Z+6, r16	; 0x06
    2822:	17 83       	std	Z+7, r17	; 0x07
    2824:	83 e0       	ldi	r24, 0x03	; 3
    2826:	80 83       	st	Z, r24
    2828:	24 81       	ldd	r18, Z+4	; 0x04
    282a:	35 81       	ldd	r19, Z+5	; 0x05
    282c:	46 81       	ldd	r20, Z+6	; 0x06
    282e:	57 81       	ldd	r21, Z+7	; 0x07
    2830:	57 ff       	sbrs	r21, 7
    2832:	1a c0       	rjmp	.+52     	; 0x2868 <_fpadd_parts+0x286>
    2834:	c9 01       	movw	r24, r18
    2836:	aa 27       	eor	r26, r26
    2838:	97 fd       	sbrc	r25, 7
    283a:	a0 95       	com	r26
    283c:	ba 2f       	mov	r27, r26
    283e:	81 70       	andi	r24, 0x01	; 1
    2840:	90 70       	andi	r25, 0x00	; 0
    2842:	a0 70       	andi	r26, 0x00	; 0
    2844:	b0 70       	andi	r27, 0x00	; 0
    2846:	56 95       	lsr	r21
    2848:	47 95       	ror	r20
    284a:	37 95       	ror	r19
    284c:	27 95       	ror	r18
    284e:	82 2b       	or	r24, r18
    2850:	93 2b       	or	r25, r19
    2852:	a4 2b       	or	r26, r20
    2854:	b5 2b       	or	r27, r21
    2856:	84 83       	std	Z+4, r24	; 0x04
    2858:	95 83       	std	Z+5, r25	; 0x05
    285a:	a6 83       	std	Z+6, r26	; 0x06
    285c:	b7 83       	std	Z+7, r27	; 0x07
    285e:	82 81       	ldd	r24, Z+2	; 0x02
    2860:	93 81       	ldd	r25, Z+3	; 0x03
    2862:	01 96       	adiw	r24, 0x01	; 1
    2864:	93 83       	std	Z+3, r25	; 0x03
    2866:	82 83       	std	Z+2, r24	; 0x02
    2868:	df 01       	movw	r26, r30
    286a:	01 c0       	rjmp	.+2      	; 0x286e <_fpadd_parts+0x28c>
    286c:	d2 01       	movw	r26, r4
    286e:	cd 01       	movw	r24, r26
    2870:	cd b7       	in	r28, 0x3d	; 61
    2872:	de b7       	in	r29, 0x3e	; 62
    2874:	e2 e1       	ldi	r30, 0x12	; 18
    2876:	0c 94 82 31 	jmp	0x6304	; 0x6304 <__epilogue_restores__>

0000287a <__subsf3>:
    287a:	a0 e2       	ldi	r26, 0x20	; 32
    287c:	b0 e0       	ldi	r27, 0x00	; 0
    287e:	e3 e4       	ldi	r30, 0x43	; 67
    2880:	f4 e1       	ldi	r31, 0x14	; 20
    2882:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    2886:	69 83       	std	Y+1, r22	; 0x01
    2888:	7a 83       	std	Y+2, r23	; 0x02
    288a:	8b 83       	std	Y+3, r24	; 0x03
    288c:	9c 83       	std	Y+4, r25	; 0x04
    288e:	2d 83       	std	Y+5, r18	; 0x05
    2890:	3e 83       	std	Y+6, r19	; 0x06
    2892:	4f 83       	std	Y+7, r20	; 0x07
    2894:	58 87       	std	Y+8, r21	; 0x08
    2896:	e9 e0       	ldi	r30, 0x09	; 9
    2898:	ee 2e       	mov	r14, r30
    289a:	f1 2c       	mov	r15, r1
    289c:	ec 0e       	add	r14, r28
    289e:	fd 1e       	adc	r15, r29
    28a0:	ce 01       	movw	r24, r28
    28a2:	01 96       	adiw	r24, 0x01	; 1
    28a4:	b7 01       	movw	r22, r14
    28a6:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    28aa:	8e 01       	movw	r16, r28
    28ac:	0f 5e       	subi	r16, 0xEF	; 239
    28ae:	1f 4f       	sbci	r17, 0xFF	; 255
    28b0:	ce 01       	movw	r24, r28
    28b2:	05 96       	adiw	r24, 0x05	; 5
    28b4:	b8 01       	movw	r22, r16
    28b6:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    28ba:	8a 89       	ldd	r24, Y+18	; 0x12
    28bc:	91 e0       	ldi	r25, 0x01	; 1
    28be:	89 27       	eor	r24, r25
    28c0:	8a 8b       	std	Y+18, r24	; 0x12
    28c2:	c7 01       	movw	r24, r14
    28c4:	b8 01       	movw	r22, r16
    28c6:	ae 01       	movw	r20, r28
    28c8:	47 5e       	subi	r20, 0xE7	; 231
    28ca:	5f 4f       	sbci	r21, 0xFF	; 255
    28cc:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <_fpadd_parts>
    28d0:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    28d4:	a0 96       	adiw	r28, 0x20	; 32
    28d6:	e6 e0       	ldi	r30, 0x06	; 6
    28d8:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

000028dc <__addsf3>:
    28dc:	a0 e2       	ldi	r26, 0x20	; 32
    28de:	b0 e0       	ldi	r27, 0x00	; 0
    28e0:	e4 e7       	ldi	r30, 0x74	; 116
    28e2:	f4 e1       	ldi	r31, 0x14	; 20
    28e4:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    28e8:	69 83       	std	Y+1, r22	; 0x01
    28ea:	7a 83       	std	Y+2, r23	; 0x02
    28ec:	8b 83       	std	Y+3, r24	; 0x03
    28ee:	9c 83       	std	Y+4, r25	; 0x04
    28f0:	2d 83       	std	Y+5, r18	; 0x05
    28f2:	3e 83       	std	Y+6, r19	; 0x06
    28f4:	4f 83       	std	Y+7, r20	; 0x07
    28f6:	58 87       	std	Y+8, r21	; 0x08
    28f8:	f9 e0       	ldi	r31, 0x09	; 9
    28fa:	ef 2e       	mov	r14, r31
    28fc:	f1 2c       	mov	r15, r1
    28fe:	ec 0e       	add	r14, r28
    2900:	fd 1e       	adc	r15, r29
    2902:	ce 01       	movw	r24, r28
    2904:	01 96       	adiw	r24, 0x01	; 1
    2906:	b7 01       	movw	r22, r14
    2908:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    290c:	8e 01       	movw	r16, r28
    290e:	0f 5e       	subi	r16, 0xEF	; 239
    2910:	1f 4f       	sbci	r17, 0xFF	; 255
    2912:	ce 01       	movw	r24, r28
    2914:	05 96       	adiw	r24, 0x05	; 5
    2916:	b8 01       	movw	r22, r16
    2918:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    291c:	c7 01       	movw	r24, r14
    291e:	b8 01       	movw	r22, r16
    2920:	ae 01       	movw	r20, r28
    2922:	47 5e       	subi	r20, 0xE7	; 231
    2924:	5f 4f       	sbci	r21, 0xFF	; 255
    2926:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <_fpadd_parts>
    292a:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    292e:	a0 96       	adiw	r28, 0x20	; 32
    2930:	e6 e0       	ldi	r30, 0x06	; 6
    2932:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

00002936 <__mulsf3>:
    2936:	a0 e2       	ldi	r26, 0x20	; 32
    2938:	b0 e0       	ldi	r27, 0x00	; 0
    293a:	e1 ea       	ldi	r30, 0xA1	; 161
    293c:	f4 e1       	ldi	r31, 0x14	; 20
    293e:	0c 94 66 31 	jmp	0x62cc	; 0x62cc <__prologue_saves__>
    2942:	69 83       	std	Y+1, r22	; 0x01
    2944:	7a 83       	std	Y+2, r23	; 0x02
    2946:	8b 83       	std	Y+3, r24	; 0x03
    2948:	9c 83       	std	Y+4, r25	; 0x04
    294a:	2d 83       	std	Y+5, r18	; 0x05
    294c:	3e 83       	std	Y+6, r19	; 0x06
    294e:	4f 83       	std	Y+7, r20	; 0x07
    2950:	58 87       	std	Y+8, r21	; 0x08
    2952:	ce 01       	movw	r24, r28
    2954:	01 96       	adiw	r24, 0x01	; 1
    2956:	be 01       	movw	r22, r28
    2958:	67 5f       	subi	r22, 0xF7	; 247
    295a:	7f 4f       	sbci	r23, 0xFF	; 255
    295c:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2960:	ce 01       	movw	r24, r28
    2962:	05 96       	adiw	r24, 0x05	; 5
    2964:	be 01       	movw	r22, r28
    2966:	6f 5e       	subi	r22, 0xEF	; 239
    2968:	7f 4f       	sbci	r23, 0xFF	; 255
    296a:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    296e:	99 85       	ldd	r25, Y+9	; 0x09
    2970:	92 30       	cpi	r25, 0x02	; 2
    2972:	88 f0       	brcs	.+34     	; 0x2996 <__mulsf3+0x60>
    2974:	89 89       	ldd	r24, Y+17	; 0x11
    2976:	82 30       	cpi	r24, 0x02	; 2
    2978:	c8 f0       	brcs	.+50     	; 0x29ac <__mulsf3+0x76>
    297a:	94 30       	cpi	r25, 0x04	; 4
    297c:	19 f4       	brne	.+6      	; 0x2984 <__mulsf3+0x4e>
    297e:	82 30       	cpi	r24, 0x02	; 2
    2980:	51 f4       	brne	.+20     	; 0x2996 <__mulsf3+0x60>
    2982:	04 c0       	rjmp	.+8      	; 0x298c <__mulsf3+0x56>
    2984:	84 30       	cpi	r24, 0x04	; 4
    2986:	29 f4       	brne	.+10     	; 0x2992 <__mulsf3+0x5c>
    2988:	92 30       	cpi	r25, 0x02	; 2
    298a:	81 f4       	brne	.+32     	; 0x29ac <__mulsf3+0x76>
    298c:	8e e8       	ldi	r24, 0x8E	; 142
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	c6 c0       	rjmp	.+396    	; 0x2b1e <__mulsf3+0x1e8>
    2992:	92 30       	cpi	r25, 0x02	; 2
    2994:	49 f4       	brne	.+18     	; 0x29a8 <__mulsf3+0x72>
    2996:	20 e0       	ldi	r18, 0x00	; 0
    2998:	9a 85       	ldd	r25, Y+10	; 0x0a
    299a:	8a 89       	ldd	r24, Y+18	; 0x12
    299c:	98 13       	cpse	r25, r24
    299e:	21 e0       	ldi	r18, 0x01	; 1
    29a0:	2a 87       	std	Y+10, r18	; 0x0a
    29a2:	ce 01       	movw	r24, r28
    29a4:	09 96       	adiw	r24, 0x09	; 9
    29a6:	bb c0       	rjmp	.+374    	; 0x2b1e <__mulsf3+0x1e8>
    29a8:	82 30       	cpi	r24, 0x02	; 2
    29aa:	49 f4       	brne	.+18     	; 0x29be <__mulsf3+0x88>
    29ac:	20 e0       	ldi	r18, 0x00	; 0
    29ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    29b0:	8a 89       	ldd	r24, Y+18	; 0x12
    29b2:	98 13       	cpse	r25, r24
    29b4:	21 e0       	ldi	r18, 0x01	; 1
    29b6:	2a 8b       	std	Y+18, r18	; 0x12
    29b8:	ce 01       	movw	r24, r28
    29ba:	41 96       	adiw	r24, 0x11	; 17
    29bc:	b0 c0       	rjmp	.+352    	; 0x2b1e <__mulsf3+0x1e8>
    29be:	2d 84       	ldd	r2, Y+13	; 0x0d
    29c0:	3e 84       	ldd	r3, Y+14	; 0x0e
    29c2:	4f 84       	ldd	r4, Y+15	; 0x0f
    29c4:	58 88       	ldd	r5, Y+16	; 0x10
    29c6:	6d 88       	ldd	r6, Y+21	; 0x15
    29c8:	7e 88       	ldd	r7, Y+22	; 0x16
    29ca:	8f 88       	ldd	r8, Y+23	; 0x17
    29cc:	98 8c       	ldd	r9, Y+24	; 0x18
    29ce:	ee 24       	eor	r14, r14
    29d0:	ff 24       	eor	r15, r15
    29d2:	87 01       	movw	r16, r14
    29d4:	aa 24       	eor	r10, r10
    29d6:	bb 24       	eor	r11, r11
    29d8:	65 01       	movw	r12, r10
    29da:	40 e0       	ldi	r20, 0x00	; 0
    29dc:	50 e0       	ldi	r21, 0x00	; 0
    29de:	60 e0       	ldi	r22, 0x00	; 0
    29e0:	70 e0       	ldi	r23, 0x00	; 0
    29e2:	e0 e0       	ldi	r30, 0x00	; 0
    29e4:	f0 e0       	ldi	r31, 0x00	; 0
    29e6:	c1 01       	movw	r24, r2
    29e8:	81 70       	andi	r24, 0x01	; 1
    29ea:	90 70       	andi	r25, 0x00	; 0
    29ec:	89 2b       	or	r24, r25
    29ee:	e9 f0       	breq	.+58     	; 0x2a2a <__mulsf3+0xf4>
    29f0:	e6 0c       	add	r14, r6
    29f2:	f7 1c       	adc	r15, r7
    29f4:	08 1d       	adc	r16, r8
    29f6:	19 1d       	adc	r17, r9
    29f8:	9a 01       	movw	r18, r20
    29fa:	ab 01       	movw	r20, r22
    29fc:	2a 0d       	add	r18, r10
    29fe:	3b 1d       	adc	r19, r11
    2a00:	4c 1d       	adc	r20, r12
    2a02:	5d 1d       	adc	r21, r13
    2a04:	80 e0       	ldi	r24, 0x00	; 0
    2a06:	90 e0       	ldi	r25, 0x00	; 0
    2a08:	a0 e0       	ldi	r26, 0x00	; 0
    2a0a:	b0 e0       	ldi	r27, 0x00	; 0
    2a0c:	e6 14       	cp	r14, r6
    2a0e:	f7 04       	cpc	r15, r7
    2a10:	08 05       	cpc	r16, r8
    2a12:	19 05       	cpc	r17, r9
    2a14:	20 f4       	brcc	.+8      	; 0x2a1e <__mulsf3+0xe8>
    2a16:	81 e0       	ldi	r24, 0x01	; 1
    2a18:	90 e0       	ldi	r25, 0x00	; 0
    2a1a:	a0 e0       	ldi	r26, 0x00	; 0
    2a1c:	b0 e0       	ldi	r27, 0x00	; 0
    2a1e:	ba 01       	movw	r22, r20
    2a20:	a9 01       	movw	r20, r18
    2a22:	48 0f       	add	r20, r24
    2a24:	59 1f       	adc	r21, r25
    2a26:	6a 1f       	adc	r22, r26
    2a28:	7b 1f       	adc	r23, r27
    2a2a:	aa 0c       	add	r10, r10
    2a2c:	bb 1c       	adc	r11, r11
    2a2e:	cc 1c       	adc	r12, r12
    2a30:	dd 1c       	adc	r13, r13
    2a32:	97 fe       	sbrs	r9, 7
    2a34:	08 c0       	rjmp	.+16     	; 0x2a46 <__mulsf3+0x110>
    2a36:	81 e0       	ldi	r24, 0x01	; 1
    2a38:	90 e0       	ldi	r25, 0x00	; 0
    2a3a:	a0 e0       	ldi	r26, 0x00	; 0
    2a3c:	b0 e0       	ldi	r27, 0x00	; 0
    2a3e:	a8 2a       	or	r10, r24
    2a40:	b9 2a       	or	r11, r25
    2a42:	ca 2a       	or	r12, r26
    2a44:	db 2a       	or	r13, r27
    2a46:	31 96       	adiw	r30, 0x01	; 1
    2a48:	e0 32       	cpi	r30, 0x20	; 32
    2a4a:	f1 05       	cpc	r31, r1
    2a4c:	49 f0       	breq	.+18     	; 0x2a60 <__mulsf3+0x12a>
    2a4e:	66 0c       	add	r6, r6
    2a50:	77 1c       	adc	r7, r7
    2a52:	88 1c       	adc	r8, r8
    2a54:	99 1c       	adc	r9, r9
    2a56:	56 94       	lsr	r5
    2a58:	47 94       	ror	r4
    2a5a:	37 94       	ror	r3
    2a5c:	27 94       	ror	r2
    2a5e:	c3 cf       	rjmp	.-122    	; 0x29e6 <__mulsf3+0xb0>
    2a60:	fa 85       	ldd	r31, Y+10	; 0x0a
    2a62:	ea 89       	ldd	r30, Y+18	; 0x12
    2a64:	2b 89       	ldd	r18, Y+19	; 0x13
    2a66:	3c 89       	ldd	r19, Y+20	; 0x14
    2a68:	8b 85       	ldd	r24, Y+11	; 0x0b
    2a6a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2a6c:	28 0f       	add	r18, r24
    2a6e:	39 1f       	adc	r19, r25
    2a70:	2e 5f       	subi	r18, 0xFE	; 254
    2a72:	3f 4f       	sbci	r19, 0xFF	; 255
    2a74:	17 c0       	rjmp	.+46     	; 0x2aa4 <__mulsf3+0x16e>
    2a76:	ca 01       	movw	r24, r20
    2a78:	81 70       	andi	r24, 0x01	; 1
    2a7a:	90 70       	andi	r25, 0x00	; 0
    2a7c:	89 2b       	or	r24, r25
    2a7e:	61 f0       	breq	.+24     	; 0x2a98 <__mulsf3+0x162>
    2a80:	16 95       	lsr	r17
    2a82:	07 95       	ror	r16
    2a84:	f7 94       	ror	r15
    2a86:	e7 94       	ror	r14
    2a88:	80 e0       	ldi	r24, 0x00	; 0
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	a0 e0       	ldi	r26, 0x00	; 0
    2a8e:	b0 e8       	ldi	r27, 0x80	; 128
    2a90:	e8 2a       	or	r14, r24
    2a92:	f9 2a       	or	r15, r25
    2a94:	0a 2b       	or	r16, r26
    2a96:	1b 2b       	or	r17, r27
    2a98:	76 95       	lsr	r23
    2a9a:	67 95       	ror	r22
    2a9c:	57 95       	ror	r21
    2a9e:	47 95       	ror	r20
    2aa0:	2f 5f       	subi	r18, 0xFF	; 255
    2aa2:	3f 4f       	sbci	r19, 0xFF	; 255
    2aa4:	77 fd       	sbrc	r23, 7
    2aa6:	e7 cf       	rjmp	.-50     	; 0x2a76 <__mulsf3+0x140>
    2aa8:	0c c0       	rjmp	.+24     	; 0x2ac2 <__mulsf3+0x18c>
    2aaa:	44 0f       	add	r20, r20
    2aac:	55 1f       	adc	r21, r21
    2aae:	66 1f       	adc	r22, r22
    2ab0:	77 1f       	adc	r23, r23
    2ab2:	17 fd       	sbrc	r17, 7
    2ab4:	41 60       	ori	r20, 0x01	; 1
    2ab6:	ee 0c       	add	r14, r14
    2ab8:	ff 1c       	adc	r15, r15
    2aba:	00 1f       	adc	r16, r16
    2abc:	11 1f       	adc	r17, r17
    2abe:	21 50       	subi	r18, 0x01	; 1
    2ac0:	30 40       	sbci	r19, 0x00	; 0
    2ac2:	40 30       	cpi	r20, 0x00	; 0
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	59 07       	cpc	r21, r25
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	69 07       	cpc	r22, r25
    2acc:	90 e4       	ldi	r25, 0x40	; 64
    2ace:	79 07       	cpc	r23, r25
    2ad0:	60 f3       	brcs	.-40     	; 0x2aaa <__mulsf3+0x174>
    2ad2:	2b 8f       	std	Y+27, r18	; 0x1b
    2ad4:	3c 8f       	std	Y+28, r19	; 0x1c
    2ad6:	db 01       	movw	r26, r22
    2ad8:	ca 01       	movw	r24, r20
    2ada:	8f 77       	andi	r24, 0x7F	; 127
    2adc:	90 70       	andi	r25, 0x00	; 0
    2ade:	a0 70       	andi	r26, 0x00	; 0
    2ae0:	b0 70       	andi	r27, 0x00	; 0
    2ae2:	80 34       	cpi	r24, 0x40	; 64
    2ae4:	91 05       	cpc	r25, r1
    2ae6:	a1 05       	cpc	r26, r1
    2ae8:	b1 05       	cpc	r27, r1
    2aea:	61 f4       	brne	.+24     	; 0x2b04 <__mulsf3+0x1ce>
    2aec:	47 fd       	sbrc	r20, 7
    2aee:	0a c0       	rjmp	.+20     	; 0x2b04 <__mulsf3+0x1ce>
    2af0:	e1 14       	cp	r14, r1
    2af2:	f1 04       	cpc	r15, r1
    2af4:	01 05       	cpc	r16, r1
    2af6:	11 05       	cpc	r17, r1
    2af8:	29 f0       	breq	.+10     	; 0x2b04 <__mulsf3+0x1ce>
    2afa:	40 5c       	subi	r20, 0xC0	; 192
    2afc:	5f 4f       	sbci	r21, 0xFF	; 255
    2afe:	6f 4f       	sbci	r22, 0xFF	; 255
    2b00:	7f 4f       	sbci	r23, 0xFF	; 255
    2b02:	40 78       	andi	r20, 0x80	; 128
    2b04:	1a 8e       	std	Y+26, r1	; 0x1a
    2b06:	fe 17       	cp	r31, r30
    2b08:	11 f0       	breq	.+4      	; 0x2b0e <__mulsf3+0x1d8>
    2b0a:	81 e0       	ldi	r24, 0x01	; 1
    2b0c:	8a 8f       	std	Y+26, r24	; 0x1a
    2b0e:	4d 8f       	std	Y+29, r20	; 0x1d
    2b10:	5e 8f       	std	Y+30, r21	; 0x1e
    2b12:	6f 8f       	std	Y+31, r22	; 0x1f
    2b14:	78 a3       	std	Y+32, r23	; 0x20
    2b16:	83 e0       	ldi	r24, 0x03	; 3
    2b18:	89 8f       	std	Y+25, r24	; 0x19
    2b1a:	ce 01       	movw	r24, r28
    2b1c:	49 96       	adiw	r24, 0x19	; 25
    2b1e:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    2b22:	a0 96       	adiw	r28, 0x20	; 32
    2b24:	e2 e1       	ldi	r30, 0x12	; 18
    2b26:	0c 94 82 31 	jmp	0x6304	; 0x6304 <__epilogue_restores__>

00002b2a <__divsf3>:
    2b2a:	a8 e1       	ldi	r26, 0x18	; 24
    2b2c:	b0 e0       	ldi	r27, 0x00	; 0
    2b2e:	eb e9       	ldi	r30, 0x9B	; 155
    2b30:	f5 e1       	ldi	r31, 0x15	; 21
    2b32:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__prologue_saves__+0x10>
    2b36:	69 83       	std	Y+1, r22	; 0x01
    2b38:	7a 83       	std	Y+2, r23	; 0x02
    2b3a:	8b 83       	std	Y+3, r24	; 0x03
    2b3c:	9c 83       	std	Y+4, r25	; 0x04
    2b3e:	2d 83       	std	Y+5, r18	; 0x05
    2b40:	3e 83       	std	Y+6, r19	; 0x06
    2b42:	4f 83       	std	Y+7, r20	; 0x07
    2b44:	58 87       	std	Y+8, r21	; 0x08
    2b46:	b9 e0       	ldi	r27, 0x09	; 9
    2b48:	eb 2e       	mov	r14, r27
    2b4a:	f1 2c       	mov	r15, r1
    2b4c:	ec 0e       	add	r14, r28
    2b4e:	fd 1e       	adc	r15, r29
    2b50:	ce 01       	movw	r24, r28
    2b52:	01 96       	adiw	r24, 0x01	; 1
    2b54:	b7 01       	movw	r22, r14
    2b56:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2b5a:	8e 01       	movw	r16, r28
    2b5c:	0f 5e       	subi	r16, 0xEF	; 239
    2b5e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b60:	ce 01       	movw	r24, r28
    2b62:	05 96       	adiw	r24, 0x05	; 5
    2b64:	b8 01       	movw	r22, r16
    2b66:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2b6a:	29 85       	ldd	r18, Y+9	; 0x09
    2b6c:	22 30       	cpi	r18, 0x02	; 2
    2b6e:	08 f4       	brcc	.+2      	; 0x2b72 <__divsf3+0x48>
    2b70:	7e c0       	rjmp	.+252    	; 0x2c6e <__divsf3+0x144>
    2b72:	39 89       	ldd	r19, Y+17	; 0x11
    2b74:	32 30       	cpi	r19, 0x02	; 2
    2b76:	10 f4       	brcc	.+4      	; 0x2b7c <__divsf3+0x52>
    2b78:	b8 01       	movw	r22, r16
    2b7a:	7c c0       	rjmp	.+248    	; 0x2c74 <__divsf3+0x14a>
    2b7c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b7e:	9a 89       	ldd	r25, Y+18	; 0x12
    2b80:	89 27       	eor	r24, r25
    2b82:	8a 87       	std	Y+10, r24	; 0x0a
    2b84:	24 30       	cpi	r18, 0x04	; 4
    2b86:	11 f0       	breq	.+4      	; 0x2b8c <__divsf3+0x62>
    2b88:	22 30       	cpi	r18, 0x02	; 2
    2b8a:	31 f4       	brne	.+12     	; 0x2b98 <__divsf3+0x6e>
    2b8c:	23 17       	cp	r18, r19
    2b8e:	09 f0       	breq	.+2      	; 0x2b92 <__divsf3+0x68>
    2b90:	6e c0       	rjmp	.+220    	; 0x2c6e <__divsf3+0x144>
    2b92:	6e e8       	ldi	r22, 0x8E	; 142
    2b94:	70 e0       	ldi	r23, 0x00	; 0
    2b96:	6e c0       	rjmp	.+220    	; 0x2c74 <__divsf3+0x14a>
    2b98:	34 30       	cpi	r19, 0x04	; 4
    2b9a:	39 f4       	brne	.+14     	; 0x2baa <__divsf3+0x80>
    2b9c:	1d 86       	std	Y+13, r1	; 0x0d
    2b9e:	1e 86       	std	Y+14, r1	; 0x0e
    2ba0:	1f 86       	std	Y+15, r1	; 0x0f
    2ba2:	18 8a       	std	Y+16, r1	; 0x10
    2ba4:	1c 86       	std	Y+12, r1	; 0x0c
    2ba6:	1b 86       	std	Y+11, r1	; 0x0b
    2ba8:	04 c0       	rjmp	.+8      	; 0x2bb2 <__divsf3+0x88>
    2baa:	32 30       	cpi	r19, 0x02	; 2
    2bac:	21 f4       	brne	.+8      	; 0x2bb6 <__divsf3+0x8c>
    2bae:	84 e0       	ldi	r24, 0x04	; 4
    2bb0:	89 87       	std	Y+9, r24	; 0x09
    2bb2:	b7 01       	movw	r22, r14
    2bb4:	5f c0       	rjmp	.+190    	; 0x2c74 <__divsf3+0x14a>
    2bb6:	2b 85       	ldd	r18, Y+11	; 0x0b
    2bb8:	3c 85       	ldd	r19, Y+12	; 0x0c
    2bba:	8b 89       	ldd	r24, Y+19	; 0x13
    2bbc:	9c 89       	ldd	r25, Y+20	; 0x14
    2bbe:	28 1b       	sub	r18, r24
    2bc0:	39 0b       	sbc	r19, r25
    2bc2:	3c 87       	std	Y+12, r19	; 0x0c
    2bc4:	2b 87       	std	Y+11, r18	; 0x0b
    2bc6:	ed 84       	ldd	r14, Y+13	; 0x0d
    2bc8:	fe 84       	ldd	r15, Y+14	; 0x0e
    2bca:	0f 85       	ldd	r16, Y+15	; 0x0f
    2bcc:	18 89       	ldd	r17, Y+16	; 0x10
    2bce:	ad 88       	ldd	r10, Y+21	; 0x15
    2bd0:	be 88       	ldd	r11, Y+22	; 0x16
    2bd2:	cf 88       	ldd	r12, Y+23	; 0x17
    2bd4:	d8 8c       	ldd	r13, Y+24	; 0x18
    2bd6:	ea 14       	cp	r14, r10
    2bd8:	fb 04       	cpc	r15, r11
    2bda:	0c 05       	cpc	r16, r12
    2bdc:	1d 05       	cpc	r17, r13
    2bde:	40 f4       	brcc	.+16     	; 0x2bf0 <__divsf3+0xc6>
    2be0:	ee 0c       	add	r14, r14
    2be2:	ff 1c       	adc	r15, r15
    2be4:	00 1f       	adc	r16, r16
    2be6:	11 1f       	adc	r17, r17
    2be8:	21 50       	subi	r18, 0x01	; 1
    2bea:	30 40       	sbci	r19, 0x00	; 0
    2bec:	3c 87       	std	Y+12, r19	; 0x0c
    2bee:	2b 87       	std	Y+11, r18	; 0x0b
    2bf0:	20 e0       	ldi	r18, 0x00	; 0
    2bf2:	30 e0       	ldi	r19, 0x00	; 0
    2bf4:	40 e0       	ldi	r20, 0x00	; 0
    2bf6:	50 e0       	ldi	r21, 0x00	; 0
    2bf8:	80 e0       	ldi	r24, 0x00	; 0
    2bfa:	90 e0       	ldi	r25, 0x00	; 0
    2bfc:	a0 e0       	ldi	r26, 0x00	; 0
    2bfe:	b0 e4       	ldi	r27, 0x40	; 64
    2c00:	60 e0       	ldi	r22, 0x00	; 0
    2c02:	70 e0       	ldi	r23, 0x00	; 0
    2c04:	ea 14       	cp	r14, r10
    2c06:	fb 04       	cpc	r15, r11
    2c08:	0c 05       	cpc	r16, r12
    2c0a:	1d 05       	cpc	r17, r13
    2c0c:	40 f0       	brcs	.+16     	; 0x2c1e <__divsf3+0xf4>
    2c0e:	28 2b       	or	r18, r24
    2c10:	39 2b       	or	r19, r25
    2c12:	4a 2b       	or	r20, r26
    2c14:	5b 2b       	or	r21, r27
    2c16:	ea 18       	sub	r14, r10
    2c18:	fb 08       	sbc	r15, r11
    2c1a:	0c 09       	sbc	r16, r12
    2c1c:	1d 09       	sbc	r17, r13
    2c1e:	b6 95       	lsr	r27
    2c20:	a7 95       	ror	r26
    2c22:	97 95       	ror	r25
    2c24:	87 95       	ror	r24
    2c26:	ee 0c       	add	r14, r14
    2c28:	ff 1c       	adc	r15, r15
    2c2a:	00 1f       	adc	r16, r16
    2c2c:	11 1f       	adc	r17, r17
    2c2e:	6f 5f       	subi	r22, 0xFF	; 255
    2c30:	7f 4f       	sbci	r23, 0xFF	; 255
    2c32:	6f 31       	cpi	r22, 0x1F	; 31
    2c34:	71 05       	cpc	r23, r1
    2c36:	31 f7       	brne	.-52     	; 0x2c04 <__divsf3+0xda>
    2c38:	da 01       	movw	r26, r20
    2c3a:	c9 01       	movw	r24, r18
    2c3c:	8f 77       	andi	r24, 0x7F	; 127
    2c3e:	90 70       	andi	r25, 0x00	; 0
    2c40:	a0 70       	andi	r26, 0x00	; 0
    2c42:	b0 70       	andi	r27, 0x00	; 0
    2c44:	80 34       	cpi	r24, 0x40	; 64
    2c46:	91 05       	cpc	r25, r1
    2c48:	a1 05       	cpc	r26, r1
    2c4a:	b1 05       	cpc	r27, r1
    2c4c:	61 f4       	brne	.+24     	; 0x2c66 <__divsf3+0x13c>
    2c4e:	27 fd       	sbrc	r18, 7
    2c50:	0a c0       	rjmp	.+20     	; 0x2c66 <__divsf3+0x13c>
    2c52:	e1 14       	cp	r14, r1
    2c54:	f1 04       	cpc	r15, r1
    2c56:	01 05       	cpc	r16, r1
    2c58:	11 05       	cpc	r17, r1
    2c5a:	29 f0       	breq	.+10     	; 0x2c66 <__divsf3+0x13c>
    2c5c:	20 5c       	subi	r18, 0xC0	; 192
    2c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    2c60:	4f 4f       	sbci	r20, 0xFF	; 255
    2c62:	5f 4f       	sbci	r21, 0xFF	; 255
    2c64:	20 78       	andi	r18, 0x80	; 128
    2c66:	2d 87       	std	Y+13, r18	; 0x0d
    2c68:	3e 87       	std	Y+14, r19	; 0x0e
    2c6a:	4f 87       	std	Y+15, r20	; 0x0f
    2c6c:	58 8b       	std	Y+16, r21	; 0x10
    2c6e:	be 01       	movw	r22, r28
    2c70:	67 5f       	subi	r22, 0xF7	; 247
    2c72:	7f 4f       	sbci	r23, 0xFF	; 255
    2c74:	cb 01       	movw	r24, r22
    2c76:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    2c7a:	68 96       	adiw	r28, 0x18	; 24
    2c7c:	ea e0       	ldi	r30, 0x0A	; 10
    2c7e:	0c 94 8a 31 	jmp	0x6314	; 0x6314 <__epilogue_restores__+0x10>

00002c82 <__eqsf2>:
    2c82:	a8 e1       	ldi	r26, 0x18	; 24
    2c84:	b0 e0       	ldi	r27, 0x00	; 0
    2c86:	e7 e4       	ldi	r30, 0x47	; 71
    2c88:	f6 e1       	ldi	r31, 0x16	; 22
    2c8a:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    2c8e:	69 83       	std	Y+1, r22	; 0x01
    2c90:	7a 83       	std	Y+2, r23	; 0x02
    2c92:	8b 83       	std	Y+3, r24	; 0x03
    2c94:	9c 83       	std	Y+4, r25	; 0x04
    2c96:	2d 83       	std	Y+5, r18	; 0x05
    2c98:	3e 83       	std	Y+6, r19	; 0x06
    2c9a:	4f 83       	std	Y+7, r20	; 0x07
    2c9c:	58 87       	std	Y+8, r21	; 0x08
    2c9e:	89 e0       	ldi	r24, 0x09	; 9
    2ca0:	e8 2e       	mov	r14, r24
    2ca2:	f1 2c       	mov	r15, r1
    2ca4:	ec 0e       	add	r14, r28
    2ca6:	fd 1e       	adc	r15, r29
    2ca8:	ce 01       	movw	r24, r28
    2caa:	01 96       	adiw	r24, 0x01	; 1
    2cac:	b7 01       	movw	r22, r14
    2cae:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2cb2:	8e 01       	movw	r16, r28
    2cb4:	0f 5e       	subi	r16, 0xEF	; 239
    2cb6:	1f 4f       	sbci	r17, 0xFF	; 255
    2cb8:	ce 01       	movw	r24, r28
    2cba:	05 96       	adiw	r24, 0x05	; 5
    2cbc:	b8 01       	movw	r22, r16
    2cbe:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2cc2:	89 85       	ldd	r24, Y+9	; 0x09
    2cc4:	82 30       	cpi	r24, 0x02	; 2
    2cc6:	40 f0       	brcs	.+16     	; 0x2cd8 <__eqsf2+0x56>
    2cc8:	89 89       	ldd	r24, Y+17	; 0x11
    2cca:	82 30       	cpi	r24, 0x02	; 2
    2ccc:	28 f0       	brcs	.+10     	; 0x2cd8 <__eqsf2+0x56>
    2cce:	c7 01       	movw	r24, r14
    2cd0:	b8 01       	movw	r22, r16
    2cd2:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__fpcmp_parts_f>
    2cd6:	01 c0       	rjmp	.+2      	; 0x2cda <__eqsf2+0x58>
    2cd8:	81 e0       	ldi	r24, 0x01	; 1
    2cda:	68 96       	adiw	r28, 0x18	; 24
    2cdc:	e6 e0       	ldi	r30, 0x06	; 6
    2cde:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

00002ce2 <__gtsf2>:
    2ce2:	a8 e1       	ldi	r26, 0x18	; 24
    2ce4:	b0 e0       	ldi	r27, 0x00	; 0
    2ce6:	e7 e7       	ldi	r30, 0x77	; 119
    2ce8:	f6 e1       	ldi	r31, 0x16	; 22
    2cea:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    2cee:	69 83       	std	Y+1, r22	; 0x01
    2cf0:	7a 83       	std	Y+2, r23	; 0x02
    2cf2:	8b 83       	std	Y+3, r24	; 0x03
    2cf4:	9c 83       	std	Y+4, r25	; 0x04
    2cf6:	2d 83       	std	Y+5, r18	; 0x05
    2cf8:	3e 83       	std	Y+6, r19	; 0x06
    2cfa:	4f 83       	std	Y+7, r20	; 0x07
    2cfc:	58 87       	std	Y+8, r21	; 0x08
    2cfe:	89 e0       	ldi	r24, 0x09	; 9
    2d00:	e8 2e       	mov	r14, r24
    2d02:	f1 2c       	mov	r15, r1
    2d04:	ec 0e       	add	r14, r28
    2d06:	fd 1e       	adc	r15, r29
    2d08:	ce 01       	movw	r24, r28
    2d0a:	01 96       	adiw	r24, 0x01	; 1
    2d0c:	b7 01       	movw	r22, r14
    2d0e:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2d12:	8e 01       	movw	r16, r28
    2d14:	0f 5e       	subi	r16, 0xEF	; 239
    2d16:	1f 4f       	sbci	r17, 0xFF	; 255
    2d18:	ce 01       	movw	r24, r28
    2d1a:	05 96       	adiw	r24, 0x05	; 5
    2d1c:	b8 01       	movw	r22, r16
    2d1e:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2d22:	89 85       	ldd	r24, Y+9	; 0x09
    2d24:	82 30       	cpi	r24, 0x02	; 2
    2d26:	40 f0       	brcs	.+16     	; 0x2d38 <__gtsf2+0x56>
    2d28:	89 89       	ldd	r24, Y+17	; 0x11
    2d2a:	82 30       	cpi	r24, 0x02	; 2
    2d2c:	28 f0       	brcs	.+10     	; 0x2d38 <__gtsf2+0x56>
    2d2e:	c7 01       	movw	r24, r14
    2d30:	b8 01       	movw	r22, r16
    2d32:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__fpcmp_parts_f>
    2d36:	01 c0       	rjmp	.+2      	; 0x2d3a <__gtsf2+0x58>
    2d38:	8f ef       	ldi	r24, 0xFF	; 255
    2d3a:	68 96       	adiw	r28, 0x18	; 24
    2d3c:	e6 e0       	ldi	r30, 0x06	; 6
    2d3e:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

00002d42 <__gesf2>:
    2d42:	a8 e1       	ldi	r26, 0x18	; 24
    2d44:	b0 e0       	ldi	r27, 0x00	; 0
    2d46:	e7 ea       	ldi	r30, 0xA7	; 167
    2d48:	f6 e1       	ldi	r31, 0x16	; 22
    2d4a:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    2d4e:	69 83       	std	Y+1, r22	; 0x01
    2d50:	7a 83       	std	Y+2, r23	; 0x02
    2d52:	8b 83       	std	Y+3, r24	; 0x03
    2d54:	9c 83       	std	Y+4, r25	; 0x04
    2d56:	2d 83       	std	Y+5, r18	; 0x05
    2d58:	3e 83       	std	Y+6, r19	; 0x06
    2d5a:	4f 83       	std	Y+7, r20	; 0x07
    2d5c:	58 87       	std	Y+8, r21	; 0x08
    2d5e:	89 e0       	ldi	r24, 0x09	; 9
    2d60:	e8 2e       	mov	r14, r24
    2d62:	f1 2c       	mov	r15, r1
    2d64:	ec 0e       	add	r14, r28
    2d66:	fd 1e       	adc	r15, r29
    2d68:	ce 01       	movw	r24, r28
    2d6a:	01 96       	adiw	r24, 0x01	; 1
    2d6c:	b7 01       	movw	r22, r14
    2d6e:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2d72:	8e 01       	movw	r16, r28
    2d74:	0f 5e       	subi	r16, 0xEF	; 239
    2d76:	1f 4f       	sbci	r17, 0xFF	; 255
    2d78:	ce 01       	movw	r24, r28
    2d7a:	05 96       	adiw	r24, 0x05	; 5
    2d7c:	b8 01       	movw	r22, r16
    2d7e:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2d82:	89 85       	ldd	r24, Y+9	; 0x09
    2d84:	82 30       	cpi	r24, 0x02	; 2
    2d86:	40 f0       	brcs	.+16     	; 0x2d98 <__gesf2+0x56>
    2d88:	89 89       	ldd	r24, Y+17	; 0x11
    2d8a:	82 30       	cpi	r24, 0x02	; 2
    2d8c:	28 f0       	brcs	.+10     	; 0x2d98 <__gesf2+0x56>
    2d8e:	c7 01       	movw	r24, r14
    2d90:	b8 01       	movw	r22, r16
    2d92:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__fpcmp_parts_f>
    2d96:	01 c0       	rjmp	.+2      	; 0x2d9a <__gesf2+0x58>
    2d98:	8f ef       	ldi	r24, 0xFF	; 255
    2d9a:	68 96       	adiw	r28, 0x18	; 24
    2d9c:	e6 e0       	ldi	r30, 0x06	; 6
    2d9e:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

00002da2 <__ltsf2>:
    2da2:	a8 e1       	ldi	r26, 0x18	; 24
    2da4:	b0 e0       	ldi	r27, 0x00	; 0
    2da6:	e7 ed       	ldi	r30, 0xD7	; 215
    2da8:	f6 e1       	ldi	r31, 0x16	; 22
    2daa:	0c 94 72 31 	jmp	0x62e4	; 0x62e4 <__prologue_saves__+0x18>
    2dae:	69 83       	std	Y+1, r22	; 0x01
    2db0:	7a 83       	std	Y+2, r23	; 0x02
    2db2:	8b 83       	std	Y+3, r24	; 0x03
    2db4:	9c 83       	std	Y+4, r25	; 0x04
    2db6:	2d 83       	std	Y+5, r18	; 0x05
    2db8:	3e 83       	std	Y+6, r19	; 0x06
    2dba:	4f 83       	std	Y+7, r20	; 0x07
    2dbc:	58 87       	std	Y+8, r21	; 0x08
    2dbe:	89 e0       	ldi	r24, 0x09	; 9
    2dc0:	e8 2e       	mov	r14, r24
    2dc2:	f1 2c       	mov	r15, r1
    2dc4:	ec 0e       	add	r14, r28
    2dc6:	fd 1e       	adc	r15, r29
    2dc8:	ce 01       	movw	r24, r28
    2dca:	01 96       	adiw	r24, 0x01	; 1
    2dcc:	b7 01       	movw	r22, r14
    2dce:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2dd2:	8e 01       	movw	r16, r28
    2dd4:	0f 5e       	subi	r16, 0xEF	; 239
    2dd6:	1f 4f       	sbci	r17, 0xFF	; 255
    2dd8:	ce 01       	movw	r24, r28
    2dda:	05 96       	adiw	r24, 0x05	; 5
    2ddc:	b8 01       	movw	r22, r16
    2dde:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2de2:	89 85       	ldd	r24, Y+9	; 0x09
    2de4:	82 30       	cpi	r24, 0x02	; 2
    2de6:	40 f0       	brcs	.+16     	; 0x2df8 <__ltsf2+0x56>
    2de8:	89 89       	ldd	r24, Y+17	; 0x11
    2dea:	82 30       	cpi	r24, 0x02	; 2
    2dec:	28 f0       	brcs	.+10     	; 0x2df8 <__ltsf2+0x56>
    2dee:	c7 01       	movw	r24, r14
    2df0:	b8 01       	movw	r22, r16
    2df2:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__fpcmp_parts_f>
    2df6:	01 c0       	rjmp	.+2      	; 0x2dfa <__ltsf2+0x58>
    2df8:	81 e0       	ldi	r24, 0x01	; 1
    2dfa:	68 96       	adiw	r28, 0x18	; 24
    2dfc:	e6 e0       	ldi	r30, 0x06	; 6
    2dfe:	0c 94 8e 31 	jmp	0x631c	; 0x631c <__epilogue_restores__+0x18>

00002e02 <__floatsisf>:
    2e02:	a8 e0       	ldi	r26, 0x08	; 8
    2e04:	b0 e0       	ldi	r27, 0x00	; 0
    2e06:	e7 e0       	ldi	r30, 0x07	; 7
    2e08:	f7 e1       	ldi	r31, 0x17	; 23
    2e0a:	0c 94 6f 31 	jmp	0x62de	; 0x62de <__prologue_saves__+0x12>
    2e0e:	9b 01       	movw	r18, r22
    2e10:	ac 01       	movw	r20, r24
    2e12:	83 e0       	ldi	r24, 0x03	; 3
    2e14:	89 83       	std	Y+1, r24	; 0x01
    2e16:	da 01       	movw	r26, r20
    2e18:	c9 01       	movw	r24, r18
    2e1a:	88 27       	eor	r24, r24
    2e1c:	b7 fd       	sbrc	r27, 7
    2e1e:	83 95       	inc	r24
    2e20:	99 27       	eor	r25, r25
    2e22:	aa 27       	eor	r26, r26
    2e24:	bb 27       	eor	r27, r27
    2e26:	b8 2e       	mov	r11, r24
    2e28:	21 15       	cp	r18, r1
    2e2a:	31 05       	cpc	r19, r1
    2e2c:	41 05       	cpc	r20, r1
    2e2e:	51 05       	cpc	r21, r1
    2e30:	19 f4       	brne	.+6      	; 0x2e38 <__floatsisf+0x36>
    2e32:	82 e0       	ldi	r24, 0x02	; 2
    2e34:	89 83       	std	Y+1, r24	; 0x01
    2e36:	3a c0       	rjmp	.+116    	; 0x2eac <__floatsisf+0xaa>
    2e38:	88 23       	and	r24, r24
    2e3a:	a9 f0       	breq	.+42     	; 0x2e66 <__floatsisf+0x64>
    2e3c:	20 30       	cpi	r18, 0x00	; 0
    2e3e:	80 e0       	ldi	r24, 0x00	; 0
    2e40:	38 07       	cpc	r19, r24
    2e42:	80 e0       	ldi	r24, 0x00	; 0
    2e44:	48 07       	cpc	r20, r24
    2e46:	80 e8       	ldi	r24, 0x80	; 128
    2e48:	58 07       	cpc	r21, r24
    2e4a:	29 f4       	brne	.+10     	; 0x2e56 <__floatsisf+0x54>
    2e4c:	60 e0       	ldi	r22, 0x00	; 0
    2e4e:	70 e0       	ldi	r23, 0x00	; 0
    2e50:	80 e0       	ldi	r24, 0x00	; 0
    2e52:	9f ec       	ldi	r25, 0xCF	; 207
    2e54:	30 c0       	rjmp	.+96     	; 0x2eb6 <__floatsisf+0xb4>
    2e56:	ee 24       	eor	r14, r14
    2e58:	ff 24       	eor	r15, r15
    2e5a:	87 01       	movw	r16, r14
    2e5c:	e2 1a       	sub	r14, r18
    2e5e:	f3 0a       	sbc	r15, r19
    2e60:	04 0b       	sbc	r16, r20
    2e62:	15 0b       	sbc	r17, r21
    2e64:	02 c0       	rjmp	.+4      	; 0x2e6a <__floatsisf+0x68>
    2e66:	79 01       	movw	r14, r18
    2e68:	8a 01       	movw	r16, r20
    2e6a:	8e e1       	ldi	r24, 0x1E	; 30
    2e6c:	c8 2e       	mov	r12, r24
    2e6e:	d1 2c       	mov	r13, r1
    2e70:	dc 82       	std	Y+4, r13	; 0x04
    2e72:	cb 82       	std	Y+3, r12	; 0x03
    2e74:	ed 82       	std	Y+5, r14	; 0x05
    2e76:	fe 82       	std	Y+6, r15	; 0x06
    2e78:	0f 83       	std	Y+7, r16	; 0x07
    2e7a:	18 87       	std	Y+8, r17	; 0x08
    2e7c:	c8 01       	movw	r24, r16
    2e7e:	b7 01       	movw	r22, r14
    2e80:	0e 94 30 19 	call	0x3260	; 0x3260 <__clzsi2>
    2e84:	01 97       	sbiw	r24, 0x01	; 1
    2e86:	18 16       	cp	r1, r24
    2e88:	19 06       	cpc	r1, r25
    2e8a:	84 f4       	brge	.+32     	; 0x2eac <__floatsisf+0xaa>
    2e8c:	08 2e       	mov	r0, r24
    2e8e:	04 c0       	rjmp	.+8      	; 0x2e98 <__floatsisf+0x96>
    2e90:	ee 0c       	add	r14, r14
    2e92:	ff 1c       	adc	r15, r15
    2e94:	00 1f       	adc	r16, r16
    2e96:	11 1f       	adc	r17, r17
    2e98:	0a 94       	dec	r0
    2e9a:	d2 f7       	brpl	.-12     	; 0x2e90 <__floatsisf+0x8e>
    2e9c:	ed 82       	std	Y+5, r14	; 0x05
    2e9e:	fe 82       	std	Y+6, r15	; 0x06
    2ea0:	0f 83       	std	Y+7, r16	; 0x07
    2ea2:	18 87       	std	Y+8, r17	; 0x08
    2ea4:	c8 1a       	sub	r12, r24
    2ea6:	d9 0a       	sbc	r13, r25
    2ea8:	dc 82       	std	Y+4, r13	; 0x04
    2eaa:	cb 82       	std	Y+3, r12	; 0x03
    2eac:	ba 82       	std	Y+2, r11	; 0x02
    2eae:	ce 01       	movw	r24, r28
    2eb0:	01 96       	adiw	r24, 0x01	; 1
    2eb2:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    2eb6:	28 96       	adiw	r28, 0x08	; 8
    2eb8:	e9 e0       	ldi	r30, 0x09	; 9
    2eba:	0c 94 8b 31 	jmp	0x6316	; 0x6316 <__epilogue_restores__+0x12>

00002ebe <__fixsfsi>:
    2ebe:	ac e0       	ldi	r26, 0x0C	; 12
    2ec0:	b0 e0       	ldi	r27, 0x00	; 0
    2ec2:	e5 e6       	ldi	r30, 0x65	; 101
    2ec4:	f7 e1       	ldi	r31, 0x17	; 23
    2ec6:	0c 94 76 31 	jmp	0x62ec	; 0x62ec <__prologue_saves__+0x20>
    2eca:	69 83       	std	Y+1, r22	; 0x01
    2ecc:	7a 83       	std	Y+2, r23	; 0x02
    2ece:	8b 83       	std	Y+3, r24	; 0x03
    2ed0:	9c 83       	std	Y+4, r25	; 0x04
    2ed2:	ce 01       	movw	r24, r28
    2ed4:	01 96       	adiw	r24, 0x01	; 1
    2ed6:	be 01       	movw	r22, r28
    2ed8:	6b 5f       	subi	r22, 0xFB	; 251
    2eda:	7f 4f       	sbci	r23, 0xFF	; 255
    2edc:	0e 94 54 1a 	call	0x34a8	; 0x34a8 <__unpack_f>
    2ee0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee2:	82 30       	cpi	r24, 0x02	; 2
    2ee4:	61 f1       	breq	.+88     	; 0x2f3e <__fixsfsi+0x80>
    2ee6:	82 30       	cpi	r24, 0x02	; 2
    2ee8:	50 f1       	brcs	.+84     	; 0x2f3e <__fixsfsi+0x80>
    2eea:	84 30       	cpi	r24, 0x04	; 4
    2eec:	21 f4       	brne	.+8      	; 0x2ef6 <__fixsfsi+0x38>
    2eee:	8e 81       	ldd	r24, Y+6	; 0x06
    2ef0:	88 23       	and	r24, r24
    2ef2:	51 f1       	breq	.+84     	; 0x2f48 <__fixsfsi+0x8a>
    2ef4:	2e c0       	rjmp	.+92     	; 0x2f52 <__fixsfsi+0x94>
    2ef6:	2f 81       	ldd	r18, Y+7	; 0x07
    2ef8:	38 85       	ldd	r19, Y+8	; 0x08
    2efa:	37 fd       	sbrc	r19, 7
    2efc:	20 c0       	rjmp	.+64     	; 0x2f3e <__fixsfsi+0x80>
    2efe:	6e 81       	ldd	r22, Y+6	; 0x06
    2f00:	2f 31       	cpi	r18, 0x1F	; 31
    2f02:	31 05       	cpc	r19, r1
    2f04:	1c f0       	brlt	.+6      	; 0x2f0c <__fixsfsi+0x4e>
    2f06:	66 23       	and	r22, r22
    2f08:	f9 f0       	breq	.+62     	; 0x2f48 <__fixsfsi+0x8a>
    2f0a:	23 c0       	rjmp	.+70     	; 0x2f52 <__fixsfsi+0x94>
    2f0c:	8e e1       	ldi	r24, 0x1E	; 30
    2f0e:	90 e0       	ldi	r25, 0x00	; 0
    2f10:	82 1b       	sub	r24, r18
    2f12:	93 0b       	sbc	r25, r19
    2f14:	29 85       	ldd	r18, Y+9	; 0x09
    2f16:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f18:	4b 85       	ldd	r20, Y+11	; 0x0b
    2f1a:	5c 85       	ldd	r21, Y+12	; 0x0c
    2f1c:	04 c0       	rjmp	.+8      	; 0x2f26 <__fixsfsi+0x68>
    2f1e:	56 95       	lsr	r21
    2f20:	47 95       	ror	r20
    2f22:	37 95       	ror	r19
    2f24:	27 95       	ror	r18
    2f26:	8a 95       	dec	r24
    2f28:	d2 f7       	brpl	.-12     	; 0x2f1e <__fixsfsi+0x60>
    2f2a:	66 23       	and	r22, r22
    2f2c:	b1 f0       	breq	.+44     	; 0x2f5a <__fixsfsi+0x9c>
    2f2e:	50 95       	com	r21
    2f30:	40 95       	com	r20
    2f32:	30 95       	com	r19
    2f34:	21 95       	neg	r18
    2f36:	3f 4f       	sbci	r19, 0xFF	; 255
    2f38:	4f 4f       	sbci	r20, 0xFF	; 255
    2f3a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f3c:	0e c0       	rjmp	.+28     	; 0x2f5a <__fixsfsi+0x9c>
    2f3e:	20 e0       	ldi	r18, 0x00	; 0
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	40 e0       	ldi	r20, 0x00	; 0
    2f44:	50 e0       	ldi	r21, 0x00	; 0
    2f46:	09 c0       	rjmp	.+18     	; 0x2f5a <__fixsfsi+0x9c>
    2f48:	2f ef       	ldi	r18, 0xFF	; 255
    2f4a:	3f ef       	ldi	r19, 0xFF	; 255
    2f4c:	4f ef       	ldi	r20, 0xFF	; 255
    2f4e:	5f e7       	ldi	r21, 0x7F	; 127
    2f50:	04 c0       	rjmp	.+8      	; 0x2f5a <__fixsfsi+0x9c>
    2f52:	20 e0       	ldi	r18, 0x00	; 0
    2f54:	30 e0       	ldi	r19, 0x00	; 0
    2f56:	40 e0       	ldi	r20, 0x00	; 0
    2f58:	50 e8       	ldi	r21, 0x80	; 128
    2f5a:	b9 01       	movw	r22, r18
    2f5c:	ca 01       	movw	r24, r20
    2f5e:	2c 96       	adiw	r28, 0x0c	; 12
    2f60:	e2 e0       	ldi	r30, 0x02	; 2
    2f62:	0c 94 92 31 	jmp	0x6324	; 0x6324 <__epilogue_restores__+0x20>

00002f66 <__floatunsisf>:
    2f66:	a8 e0       	ldi	r26, 0x08	; 8
    2f68:	b0 e0       	ldi	r27, 0x00	; 0
    2f6a:	e9 eb       	ldi	r30, 0xB9	; 185
    2f6c:	f7 e1       	ldi	r31, 0x17	; 23
    2f6e:	0c 94 6e 31 	jmp	0x62dc	; 0x62dc <__prologue_saves__+0x10>
    2f72:	7b 01       	movw	r14, r22
    2f74:	8c 01       	movw	r16, r24
    2f76:	61 15       	cp	r22, r1
    2f78:	71 05       	cpc	r23, r1
    2f7a:	81 05       	cpc	r24, r1
    2f7c:	91 05       	cpc	r25, r1
    2f7e:	19 f4       	brne	.+6      	; 0x2f86 <__floatunsisf+0x20>
    2f80:	82 e0       	ldi	r24, 0x02	; 2
    2f82:	89 83       	std	Y+1, r24	; 0x01
    2f84:	60 c0       	rjmp	.+192    	; 0x3046 <__floatunsisf+0xe0>
    2f86:	83 e0       	ldi	r24, 0x03	; 3
    2f88:	89 83       	std	Y+1, r24	; 0x01
    2f8a:	8e e1       	ldi	r24, 0x1E	; 30
    2f8c:	c8 2e       	mov	r12, r24
    2f8e:	d1 2c       	mov	r13, r1
    2f90:	dc 82       	std	Y+4, r13	; 0x04
    2f92:	cb 82       	std	Y+3, r12	; 0x03
    2f94:	ed 82       	std	Y+5, r14	; 0x05
    2f96:	fe 82       	std	Y+6, r15	; 0x06
    2f98:	0f 83       	std	Y+7, r16	; 0x07
    2f9a:	18 87       	std	Y+8, r17	; 0x08
    2f9c:	c8 01       	movw	r24, r16
    2f9e:	b7 01       	movw	r22, r14
    2fa0:	0e 94 30 19 	call	0x3260	; 0x3260 <__clzsi2>
    2fa4:	fc 01       	movw	r30, r24
    2fa6:	31 97       	sbiw	r30, 0x01	; 1
    2fa8:	f7 ff       	sbrs	r31, 7
    2faa:	3b c0       	rjmp	.+118    	; 0x3022 <__floatunsisf+0xbc>
    2fac:	22 27       	eor	r18, r18
    2fae:	33 27       	eor	r19, r19
    2fb0:	2e 1b       	sub	r18, r30
    2fb2:	3f 0b       	sbc	r19, r31
    2fb4:	57 01       	movw	r10, r14
    2fb6:	68 01       	movw	r12, r16
    2fb8:	02 2e       	mov	r0, r18
    2fba:	04 c0       	rjmp	.+8      	; 0x2fc4 <__floatunsisf+0x5e>
    2fbc:	d6 94       	lsr	r13
    2fbe:	c7 94       	ror	r12
    2fc0:	b7 94       	ror	r11
    2fc2:	a7 94       	ror	r10
    2fc4:	0a 94       	dec	r0
    2fc6:	d2 f7       	brpl	.-12     	; 0x2fbc <__floatunsisf+0x56>
    2fc8:	40 e0       	ldi	r20, 0x00	; 0
    2fca:	50 e0       	ldi	r21, 0x00	; 0
    2fcc:	60 e0       	ldi	r22, 0x00	; 0
    2fce:	70 e0       	ldi	r23, 0x00	; 0
    2fd0:	81 e0       	ldi	r24, 0x01	; 1
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	a0 e0       	ldi	r26, 0x00	; 0
    2fd6:	b0 e0       	ldi	r27, 0x00	; 0
    2fd8:	04 c0       	rjmp	.+8      	; 0x2fe2 <__floatunsisf+0x7c>
    2fda:	88 0f       	add	r24, r24
    2fdc:	99 1f       	adc	r25, r25
    2fde:	aa 1f       	adc	r26, r26
    2fe0:	bb 1f       	adc	r27, r27
    2fe2:	2a 95       	dec	r18
    2fe4:	d2 f7       	brpl	.-12     	; 0x2fda <__floatunsisf+0x74>
    2fe6:	01 97       	sbiw	r24, 0x01	; 1
    2fe8:	a1 09       	sbc	r26, r1
    2fea:	b1 09       	sbc	r27, r1
    2fec:	8e 21       	and	r24, r14
    2fee:	9f 21       	and	r25, r15
    2ff0:	a0 23       	and	r26, r16
    2ff2:	b1 23       	and	r27, r17
    2ff4:	00 97       	sbiw	r24, 0x00	; 0
    2ff6:	a1 05       	cpc	r26, r1
    2ff8:	b1 05       	cpc	r27, r1
    2ffa:	21 f0       	breq	.+8      	; 0x3004 <__floatunsisf+0x9e>
    2ffc:	41 e0       	ldi	r20, 0x01	; 1
    2ffe:	50 e0       	ldi	r21, 0x00	; 0
    3000:	60 e0       	ldi	r22, 0x00	; 0
    3002:	70 e0       	ldi	r23, 0x00	; 0
    3004:	4a 29       	or	r20, r10
    3006:	5b 29       	or	r21, r11
    3008:	6c 29       	or	r22, r12
    300a:	7d 29       	or	r23, r13
    300c:	4d 83       	std	Y+5, r20	; 0x05
    300e:	5e 83       	std	Y+6, r21	; 0x06
    3010:	6f 83       	std	Y+7, r22	; 0x07
    3012:	78 87       	std	Y+8, r23	; 0x08
    3014:	8e e1       	ldi	r24, 0x1E	; 30
    3016:	90 e0       	ldi	r25, 0x00	; 0
    3018:	8e 1b       	sub	r24, r30
    301a:	9f 0b       	sbc	r25, r31
    301c:	9c 83       	std	Y+4, r25	; 0x04
    301e:	8b 83       	std	Y+3, r24	; 0x03
    3020:	12 c0       	rjmp	.+36     	; 0x3046 <__floatunsisf+0xe0>
    3022:	30 97       	sbiw	r30, 0x00	; 0
    3024:	81 f0       	breq	.+32     	; 0x3046 <__floatunsisf+0xe0>
    3026:	0e 2e       	mov	r0, r30
    3028:	04 c0       	rjmp	.+8      	; 0x3032 <__floatunsisf+0xcc>
    302a:	ee 0c       	add	r14, r14
    302c:	ff 1c       	adc	r15, r15
    302e:	00 1f       	adc	r16, r16
    3030:	11 1f       	adc	r17, r17
    3032:	0a 94       	dec	r0
    3034:	d2 f7       	brpl	.-12     	; 0x302a <__floatunsisf+0xc4>
    3036:	ed 82       	std	Y+5, r14	; 0x05
    3038:	fe 82       	std	Y+6, r15	; 0x06
    303a:	0f 83       	std	Y+7, r16	; 0x07
    303c:	18 87       	std	Y+8, r17	; 0x08
    303e:	ce 1a       	sub	r12, r30
    3040:	df 0a       	sbc	r13, r31
    3042:	dc 82       	std	Y+4, r13	; 0x04
    3044:	cb 82       	std	Y+3, r12	; 0x03
    3046:	1a 82       	std	Y+2, r1	; 0x02
    3048:	ce 01       	movw	r24, r28
    304a:	01 96       	adiw	r24, 0x01	; 1
    304c:	0e 94 7f 19 	call	0x32fe	; 0x32fe <__pack_f>
    3050:	28 96       	adiw	r28, 0x08	; 8
    3052:	ea e0       	ldi	r30, 0x0A	; 10
    3054:	0c 94 8a 31 	jmp	0x6314	; 0x6314 <__epilogue_restores__+0x10>

00003058 <__ashldi3>:
    3058:	ef 92       	push	r14
    305a:	ff 92       	push	r15
    305c:	0f 93       	push	r16
    305e:	df 93       	push	r29
    3060:	cf 93       	push	r28
    3062:	cd b7       	in	r28, 0x3d	; 61
    3064:	de b7       	in	r29, 0x3e	; 62
    3066:	60 97       	sbiw	r28, 0x10	; 16
    3068:	0f b6       	in	r0, 0x3f	; 63
    306a:	f8 94       	cli
    306c:	de bf       	out	0x3e, r29	; 62
    306e:	0f be       	out	0x3f, r0	; 63
    3070:	cd bf       	out	0x3d, r28	; 61
    3072:	a8 2f       	mov	r26, r24
    3074:	00 23       	and	r16, r16
    3076:	09 f4       	brne	.+2      	; 0x307a <__ashldi3+0x22>
    3078:	61 c0       	rjmp	.+194    	; 0x313c <__ashldi3+0xe4>
    307a:	7e 01       	movw	r14, r28
    307c:	08 94       	sec
    307e:	e1 1c       	adc	r14, r1
    3080:	f1 1c       	adc	r15, r1
    3082:	88 e0       	ldi	r24, 0x08	; 8
    3084:	f7 01       	movw	r30, r14
    3086:	11 92       	st	Z+, r1
    3088:	8a 95       	dec	r24
    308a:	e9 f7       	brne	.-6      	; 0x3086 <__ashldi3+0x2e>
    308c:	29 83       	std	Y+1, r18	; 0x01
    308e:	3a 83       	std	Y+2, r19	; 0x02
    3090:	4b 83       	std	Y+3, r20	; 0x03
    3092:	5c 83       	std	Y+4, r21	; 0x04
    3094:	6d 83       	std	Y+5, r22	; 0x05
    3096:	7e 83       	std	Y+6, r23	; 0x06
    3098:	af 83       	std	Y+7, r26	; 0x07
    309a:	98 87       	std	Y+8, r25	; 0x08
    309c:	80 e2       	ldi	r24, 0x20	; 32
    309e:	80 1b       	sub	r24, r16
    30a0:	e8 2f       	mov	r30, r24
    30a2:	ff 27       	eor	r31, r31
    30a4:	e7 fd       	sbrc	r30, 7
    30a6:	f0 95       	com	r31
    30a8:	49 81       	ldd	r20, Y+1	; 0x01
    30aa:	5a 81       	ldd	r21, Y+2	; 0x02
    30ac:	6b 81       	ldd	r22, Y+3	; 0x03
    30ae:	7c 81       	ldd	r23, Y+4	; 0x04
    30b0:	18 16       	cp	r1, r24
    30b2:	84 f0       	brlt	.+32     	; 0x30d4 <__ashldi3+0x7c>
    30b4:	19 86       	std	Y+9, r1	; 0x09
    30b6:	1a 86       	std	Y+10, r1	; 0x0a
    30b8:	1b 86       	std	Y+11, r1	; 0x0b
    30ba:	1c 86       	std	Y+12, r1	; 0x0c
    30bc:	88 27       	eor	r24, r24
    30be:	99 27       	eor	r25, r25
    30c0:	8e 1b       	sub	r24, r30
    30c2:	9f 0b       	sbc	r25, r31
    30c4:	04 c0       	rjmp	.+8      	; 0x30ce <__ashldi3+0x76>
    30c6:	44 0f       	add	r20, r20
    30c8:	55 1f       	adc	r21, r21
    30ca:	66 1f       	adc	r22, r22
    30cc:	77 1f       	adc	r23, r23
    30ce:	8a 95       	dec	r24
    30d0:	d2 f7       	brpl	.-12     	; 0x30c6 <__ashldi3+0x6e>
    30d2:	28 c0       	rjmp	.+80     	; 0x3124 <__ashldi3+0xcc>
    30d4:	20 2f       	mov	r18, r16
    30d6:	33 27       	eor	r19, r19
    30d8:	27 fd       	sbrc	r18, 7
    30da:	30 95       	com	r19
    30dc:	db 01       	movw	r26, r22
    30de:	ca 01       	movw	r24, r20
    30e0:	02 2e       	mov	r0, r18
    30e2:	04 c0       	rjmp	.+8      	; 0x30ec <__ashldi3+0x94>
    30e4:	88 0f       	add	r24, r24
    30e6:	99 1f       	adc	r25, r25
    30e8:	aa 1f       	adc	r26, r26
    30ea:	bb 1f       	adc	r27, r27
    30ec:	0a 94       	dec	r0
    30ee:	d2 f7       	brpl	.-12     	; 0x30e4 <__ashldi3+0x8c>
    30f0:	89 87       	std	Y+9, r24	; 0x09
    30f2:	9a 87       	std	Y+10, r25	; 0x0a
    30f4:	ab 87       	std	Y+11, r26	; 0x0b
    30f6:	bc 87       	std	Y+12, r27	; 0x0c
    30f8:	04 c0       	rjmp	.+8      	; 0x3102 <__ashldi3+0xaa>
    30fa:	76 95       	lsr	r23
    30fc:	67 95       	ror	r22
    30fe:	57 95       	ror	r21
    3100:	47 95       	ror	r20
    3102:	ea 95       	dec	r30
    3104:	d2 f7       	brpl	.-12     	; 0x30fa <__ashldi3+0xa2>
    3106:	8d 81       	ldd	r24, Y+5	; 0x05
    3108:	9e 81       	ldd	r25, Y+6	; 0x06
    310a:	af 81       	ldd	r26, Y+7	; 0x07
    310c:	b8 85       	ldd	r27, Y+8	; 0x08
    310e:	04 c0       	rjmp	.+8      	; 0x3118 <__ashldi3+0xc0>
    3110:	88 0f       	add	r24, r24
    3112:	99 1f       	adc	r25, r25
    3114:	aa 1f       	adc	r26, r26
    3116:	bb 1f       	adc	r27, r27
    3118:	2a 95       	dec	r18
    311a:	d2 f7       	brpl	.-12     	; 0x3110 <__ashldi3+0xb8>
    311c:	48 2b       	or	r20, r24
    311e:	59 2b       	or	r21, r25
    3120:	6a 2b       	or	r22, r26
    3122:	7b 2b       	or	r23, r27
    3124:	4d 87       	std	Y+13, r20	; 0x0d
    3126:	5e 87       	std	Y+14, r21	; 0x0e
    3128:	6f 87       	std	Y+15, r22	; 0x0f
    312a:	78 8b       	std	Y+16, r23	; 0x10
    312c:	29 85       	ldd	r18, Y+9	; 0x09
    312e:	3a 85       	ldd	r19, Y+10	; 0x0a
    3130:	4b 85       	ldd	r20, Y+11	; 0x0b
    3132:	5c 85       	ldd	r21, Y+12	; 0x0c
    3134:	6d 85       	ldd	r22, Y+13	; 0x0d
    3136:	7e 85       	ldd	r23, Y+14	; 0x0e
    3138:	af 85       	ldd	r26, Y+15	; 0x0f
    313a:	98 89       	ldd	r25, Y+16	; 0x10
    313c:	8a 2f       	mov	r24, r26
    313e:	60 96       	adiw	r28, 0x10	; 16
    3140:	0f b6       	in	r0, 0x3f	; 63
    3142:	f8 94       	cli
    3144:	de bf       	out	0x3e, r29	; 62
    3146:	0f be       	out	0x3f, r0	; 63
    3148:	cd bf       	out	0x3d, r28	; 61
    314a:	cf 91       	pop	r28
    314c:	df 91       	pop	r29
    314e:	0f 91       	pop	r16
    3150:	ff 90       	pop	r15
    3152:	ef 90       	pop	r14
    3154:	08 95       	ret

00003156 <__ashrdi3>:
    3156:	ef 92       	push	r14
    3158:	ff 92       	push	r15
    315a:	0f 93       	push	r16
    315c:	df 93       	push	r29
    315e:	cf 93       	push	r28
    3160:	cd b7       	in	r28, 0x3d	; 61
    3162:	de b7       	in	r29, 0x3e	; 62
    3164:	60 97       	sbiw	r28, 0x10	; 16
    3166:	0f b6       	in	r0, 0x3f	; 63
    3168:	f8 94       	cli
    316a:	de bf       	out	0x3e, r29	; 62
    316c:	0f be       	out	0x3f, r0	; 63
    316e:	cd bf       	out	0x3d, r28	; 61
    3170:	a8 2f       	mov	r26, r24
    3172:	00 23       	and	r16, r16
    3174:	09 f4       	brne	.+2      	; 0x3178 <__ashrdi3+0x22>
    3176:	67 c0       	rjmp	.+206    	; 0x3246 <__ashrdi3+0xf0>
    3178:	7e 01       	movw	r14, r28
    317a:	08 94       	sec
    317c:	e1 1c       	adc	r14, r1
    317e:	f1 1c       	adc	r15, r1
    3180:	88 e0       	ldi	r24, 0x08	; 8
    3182:	f7 01       	movw	r30, r14
    3184:	11 92       	st	Z+, r1
    3186:	8a 95       	dec	r24
    3188:	e9 f7       	brne	.-6      	; 0x3184 <__ashrdi3+0x2e>
    318a:	29 83       	std	Y+1, r18	; 0x01
    318c:	3a 83       	std	Y+2, r19	; 0x02
    318e:	4b 83       	std	Y+3, r20	; 0x03
    3190:	5c 83       	std	Y+4, r21	; 0x04
    3192:	6d 83       	std	Y+5, r22	; 0x05
    3194:	7e 83       	std	Y+6, r23	; 0x06
    3196:	af 83       	std	Y+7, r26	; 0x07
    3198:	98 87       	std	Y+8, r25	; 0x08
    319a:	80 e2       	ldi	r24, 0x20	; 32
    319c:	80 1b       	sub	r24, r16
    319e:	4d 81       	ldd	r20, Y+5	; 0x05
    31a0:	5e 81       	ldd	r21, Y+6	; 0x06
    31a2:	6f 81       	ldd	r22, Y+7	; 0x07
    31a4:	78 85       	ldd	r23, Y+8	; 0x08
    31a6:	e8 2f       	mov	r30, r24
    31a8:	ff 27       	eor	r31, r31
    31aa:	e7 fd       	sbrc	r30, 7
    31ac:	f0 95       	com	r31
    31ae:	18 16       	cp	r1, r24
    31b0:	b4 f0       	brlt	.+44     	; 0x31de <__ashrdi3+0x88>
    31b2:	db 01       	movw	r26, r22
    31b4:	ca 01       	movw	r24, r20
    31b6:	bb 0f       	add	r27, r27
    31b8:	88 0b       	sbc	r24, r24
    31ba:	98 2f       	mov	r25, r24
    31bc:	dc 01       	movw	r26, r24
    31be:	8d 87       	std	Y+13, r24	; 0x0d
    31c0:	9e 87       	std	Y+14, r25	; 0x0e
    31c2:	af 87       	std	Y+15, r26	; 0x0f
    31c4:	b8 8b       	std	Y+16, r27	; 0x10
    31c6:	88 27       	eor	r24, r24
    31c8:	99 27       	eor	r25, r25
    31ca:	8e 1b       	sub	r24, r30
    31cc:	9f 0b       	sbc	r25, r31
    31ce:	04 c0       	rjmp	.+8      	; 0x31d8 <__ashrdi3+0x82>
    31d0:	75 95       	asr	r23
    31d2:	67 95       	ror	r22
    31d4:	57 95       	ror	r21
    31d6:	47 95       	ror	r20
    31d8:	8a 95       	dec	r24
    31da:	d2 f7       	brpl	.-12     	; 0x31d0 <__ashrdi3+0x7a>
    31dc:	28 c0       	rjmp	.+80     	; 0x322e <__ashrdi3+0xd8>
    31de:	20 2f       	mov	r18, r16
    31e0:	33 27       	eor	r19, r19
    31e2:	27 fd       	sbrc	r18, 7
    31e4:	30 95       	com	r19
    31e6:	db 01       	movw	r26, r22
    31e8:	ca 01       	movw	r24, r20
    31ea:	02 2e       	mov	r0, r18
    31ec:	04 c0       	rjmp	.+8      	; 0x31f6 <__ashrdi3+0xa0>
    31ee:	b5 95       	asr	r27
    31f0:	a7 95       	ror	r26
    31f2:	97 95       	ror	r25
    31f4:	87 95       	ror	r24
    31f6:	0a 94       	dec	r0
    31f8:	d2 f7       	brpl	.-12     	; 0x31ee <__ashrdi3+0x98>
    31fa:	8d 87       	std	Y+13, r24	; 0x0d
    31fc:	9e 87       	std	Y+14, r25	; 0x0e
    31fe:	af 87       	std	Y+15, r26	; 0x0f
    3200:	b8 8b       	std	Y+16, r27	; 0x10
    3202:	04 c0       	rjmp	.+8      	; 0x320c <__ashrdi3+0xb6>
    3204:	44 0f       	add	r20, r20
    3206:	55 1f       	adc	r21, r21
    3208:	66 1f       	adc	r22, r22
    320a:	77 1f       	adc	r23, r23
    320c:	ea 95       	dec	r30
    320e:	d2 f7       	brpl	.-12     	; 0x3204 <__ashrdi3+0xae>
    3210:	89 81       	ldd	r24, Y+1	; 0x01
    3212:	9a 81       	ldd	r25, Y+2	; 0x02
    3214:	ab 81       	ldd	r26, Y+3	; 0x03
    3216:	bc 81       	ldd	r27, Y+4	; 0x04
    3218:	04 c0       	rjmp	.+8      	; 0x3222 <__ashrdi3+0xcc>
    321a:	b6 95       	lsr	r27
    321c:	a7 95       	ror	r26
    321e:	97 95       	ror	r25
    3220:	87 95       	ror	r24
    3222:	2a 95       	dec	r18
    3224:	d2 f7       	brpl	.-12     	; 0x321a <__ashrdi3+0xc4>
    3226:	48 2b       	or	r20, r24
    3228:	59 2b       	or	r21, r25
    322a:	6a 2b       	or	r22, r26
    322c:	7b 2b       	or	r23, r27
    322e:	49 87       	std	Y+9, r20	; 0x09
    3230:	5a 87       	std	Y+10, r21	; 0x0a
    3232:	6b 87       	std	Y+11, r22	; 0x0b
    3234:	7c 87       	std	Y+12, r23	; 0x0c
    3236:	29 85       	ldd	r18, Y+9	; 0x09
    3238:	3a 85       	ldd	r19, Y+10	; 0x0a
    323a:	4b 85       	ldd	r20, Y+11	; 0x0b
    323c:	5c 85       	ldd	r21, Y+12	; 0x0c
    323e:	6d 85       	ldd	r22, Y+13	; 0x0d
    3240:	7e 85       	ldd	r23, Y+14	; 0x0e
    3242:	af 85       	ldd	r26, Y+15	; 0x0f
    3244:	98 89       	ldd	r25, Y+16	; 0x10
    3246:	8a 2f       	mov	r24, r26
    3248:	60 96       	adiw	r28, 0x10	; 16
    324a:	0f b6       	in	r0, 0x3f	; 63
    324c:	f8 94       	cli
    324e:	de bf       	out	0x3e, r29	; 62
    3250:	0f be       	out	0x3f, r0	; 63
    3252:	cd bf       	out	0x3d, r28	; 61
    3254:	cf 91       	pop	r28
    3256:	df 91       	pop	r29
    3258:	0f 91       	pop	r16
    325a:	ff 90       	pop	r15
    325c:	ef 90       	pop	r14
    325e:	08 95       	ret

00003260 <__clzsi2>:
    3260:	ef 92       	push	r14
    3262:	ff 92       	push	r15
    3264:	0f 93       	push	r16
    3266:	1f 93       	push	r17
    3268:	7b 01       	movw	r14, r22
    326a:	8c 01       	movw	r16, r24
    326c:	80 e0       	ldi	r24, 0x00	; 0
    326e:	e8 16       	cp	r14, r24
    3270:	80 e0       	ldi	r24, 0x00	; 0
    3272:	f8 06       	cpc	r15, r24
    3274:	81 e0       	ldi	r24, 0x01	; 1
    3276:	08 07       	cpc	r16, r24
    3278:	80 e0       	ldi	r24, 0x00	; 0
    327a:	18 07       	cpc	r17, r24
    327c:	88 f4       	brcc	.+34     	; 0x32a0 <__clzsi2+0x40>
    327e:	8f ef       	ldi	r24, 0xFF	; 255
    3280:	e8 16       	cp	r14, r24
    3282:	f1 04       	cpc	r15, r1
    3284:	01 05       	cpc	r16, r1
    3286:	11 05       	cpc	r17, r1
    3288:	31 f0       	breq	.+12     	; 0x3296 <__clzsi2+0x36>
    328a:	28 f0       	brcs	.+10     	; 0x3296 <__clzsi2+0x36>
    328c:	88 e0       	ldi	r24, 0x08	; 8
    328e:	90 e0       	ldi	r25, 0x00	; 0
    3290:	a0 e0       	ldi	r26, 0x00	; 0
    3292:	b0 e0       	ldi	r27, 0x00	; 0
    3294:	17 c0       	rjmp	.+46     	; 0x32c4 <__clzsi2+0x64>
    3296:	80 e0       	ldi	r24, 0x00	; 0
    3298:	90 e0       	ldi	r25, 0x00	; 0
    329a:	a0 e0       	ldi	r26, 0x00	; 0
    329c:	b0 e0       	ldi	r27, 0x00	; 0
    329e:	12 c0       	rjmp	.+36     	; 0x32c4 <__clzsi2+0x64>
    32a0:	80 e0       	ldi	r24, 0x00	; 0
    32a2:	e8 16       	cp	r14, r24
    32a4:	80 e0       	ldi	r24, 0x00	; 0
    32a6:	f8 06       	cpc	r15, r24
    32a8:	80 e0       	ldi	r24, 0x00	; 0
    32aa:	08 07       	cpc	r16, r24
    32ac:	81 e0       	ldi	r24, 0x01	; 1
    32ae:	18 07       	cpc	r17, r24
    32b0:	28 f0       	brcs	.+10     	; 0x32bc <__clzsi2+0x5c>
    32b2:	88 e1       	ldi	r24, 0x18	; 24
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	a0 e0       	ldi	r26, 0x00	; 0
    32b8:	b0 e0       	ldi	r27, 0x00	; 0
    32ba:	04 c0       	rjmp	.+8      	; 0x32c4 <__clzsi2+0x64>
    32bc:	80 e1       	ldi	r24, 0x10	; 16
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	a0 e0       	ldi	r26, 0x00	; 0
    32c2:	b0 e0       	ldi	r27, 0x00	; 0
    32c4:	20 e2       	ldi	r18, 0x20	; 32
    32c6:	30 e0       	ldi	r19, 0x00	; 0
    32c8:	40 e0       	ldi	r20, 0x00	; 0
    32ca:	50 e0       	ldi	r21, 0x00	; 0
    32cc:	28 1b       	sub	r18, r24
    32ce:	39 0b       	sbc	r19, r25
    32d0:	4a 0b       	sbc	r20, r26
    32d2:	5b 0b       	sbc	r21, r27
    32d4:	04 c0       	rjmp	.+8      	; 0x32de <__clzsi2+0x7e>
    32d6:	16 95       	lsr	r17
    32d8:	07 95       	ror	r16
    32da:	f7 94       	ror	r15
    32dc:	e7 94       	ror	r14
    32de:	8a 95       	dec	r24
    32e0:	d2 f7       	brpl	.-12     	; 0x32d6 <__clzsi2+0x76>
    32e2:	f7 01       	movw	r30, r14
    32e4:	ea 56       	subi	r30, 0x6A	; 106
    32e6:	ff 4f       	sbci	r31, 0xFF	; 255
    32e8:	80 81       	ld	r24, Z
    32ea:	28 1b       	sub	r18, r24
    32ec:	31 09       	sbc	r19, r1
    32ee:	41 09       	sbc	r20, r1
    32f0:	51 09       	sbc	r21, r1
    32f2:	c9 01       	movw	r24, r18
    32f4:	1f 91       	pop	r17
    32f6:	0f 91       	pop	r16
    32f8:	ff 90       	pop	r15
    32fa:	ef 90       	pop	r14
    32fc:	08 95       	ret

000032fe <__pack_f>:
    32fe:	df 92       	push	r13
    3300:	ef 92       	push	r14
    3302:	ff 92       	push	r15
    3304:	0f 93       	push	r16
    3306:	1f 93       	push	r17
    3308:	fc 01       	movw	r30, r24
    330a:	e4 80       	ldd	r14, Z+4	; 0x04
    330c:	f5 80       	ldd	r15, Z+5	; 0x05
    330e:	06 81       	ldd	r16, Z+6	; 0x06
    3310:	17 81       	ldd	r17, Z+7	; 0x07
    3312:	d1 80       	ldd	r13, Z+1	; 0x01
    3314:	80 81       	ld	r24, Z
    3316:	82 30       	cpi	r24, 0x02	; 2
    3318:	48 f4       	brcc	.+18     	; 0x332c <__pack_f+0x2e>
    331a:	80 e0       	ldi	r24, 0x00	; 0
    331c:	90 e0       	ldi	r25, 0x00	; 0
    331e:	a0 e1       	ldi	r26, 0x10	; 16
    3320:	b0 e0       	ldi	r27, 0x00	; 0
    3322:	e8 2a       	or	r14, r24
    3324:	f9 2a       	or	r15, r25
    3326:	0a 2b       	or	r16, r26
    3328:	1b 2b       	or	r17, r27
    332a:	a5 c0       	rjmp	.+330    	; 0x3476 <__pack_f+0x178>
    332c:	84 30       	cpi	r24, 0x04	; 4
    332e:	09 f4       	brne	.+2      	; 0x3332 <__pack_f+0x34>
    3330:	9f c0       	rjmp	.+318    	; 0x3470 <__pack_f+0x172>
    3332:	82 30       	cpi	r24, 0x02	; 2
    3334:	21 f4       	brne	.+8      	; 0x333e <__pack_f+0x40>
    3336:	ee 24       	eor	r14, r14
    3338:	ff 24       	eor	r15, r15
    333a:	87 01       	movw	r16, r14
    333c:	05 c0       	rjmp	.+10     	; 0x3348 <__pack_f+0x4a>
    333e:	e1 14       	cp	r14, r1
    3340:	f1 04       	cpc	r15, r1
    3342:	01 05       	cpc	r16, r1
    3344:	11 05       	cpc	r17, r1
    3346:	19 f4       	brne	.+6      	; 0x334e <__pack_f+0x50>
    3348:	e0 e0       	ldi	r30, 0x00	; 0
    334a:	f0 e0       	ldi	r31, 0x00	; 0
    334c:	96 c0       	rjmp	.+300    	; 0x347a <__pack_f+0x17c>
    334e:	62 81       	ldd	r22, Z+2	; 0x02
    3350:	73 81       	ldd	r23, Z+3	; 0x03
    3352:	9f ef       	ldi	r25, 0xFF	; 255
    3354:	62 38       	cpi	r22, 0x82	; 130
    3356:	79 07       	cpc	r23, r25
    3358:	0c f0       	brlt	.+2      	; 0x335c <__pack_f+0x5e>
    335a:	5b c0       	rjmp	.+182    	; 0x3412 <__pack_f+0x114>
    335c:	22 e8       	ldi	r18, 0x82	; 130
    335e:	3f ef       	ldi	r19, 0xFF	; 255
    3360:	26 1b       	sub	r18, r22
    3362:	37 0b       	sbc	r19, r23
    3364:	2a 31       	cpi	r18, 0x1A	; 26
    3366:	31 05       	cpc	r19, r1
    3368:	2c f0       	brlt	.+10     	; 0x3374 <__pack_f+0x76>
    336a:	20 e0       	ldi	r18, 0x00	; 0
    336c:	30 e0       	ldi	r19, 0x00	; 0
    336e:	40 e0       	ldi	r20, 0x00	; 0
    3370:	50 e0       	ldi	r21, 0x00	; 0
    3372:	2a c0       	rjmp	.+84     	; 0x33c8 <__pack_f+0xca>
    3374:	b8 01       	movw	r22, r16
    3376:	a7 01       	movw	r20, r14
    3378:	02 2e       	mov	r0, r18
    337a:	04 c0       	rjmp	.+8      	; 0x3384 <__pack_f+0x86>
    337c:	76 95       	lsr	r23
    337e:	67 95       	ror	r22
    3380:	57 95       	ror	r21
    3382:	47 95       	ror	r20
    3384:	0a 94       	dec	r0
    3386:	d2 f7       	brpl	.-12     	; 0x337c <__pack_f+0x7e>
    3388:	81 e0       	ldi	r24, 0x01	; 1
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	a0 e0       	ldi	r26, 0x00	; 0
    338e:	b0 e0       	ldi	r27, 0x00	; 0
    3390:	04 c0       	rjmp	.+8      	; 0x339a <__pack_f+0x9c>
    3392:	88 0f       	add	r24, r24
    3394:	99 1f       	adc	r25, r25
    3396:	aa 1f       	adc	r26, r26
    3398:	bb 1f       	adc	r27, r27
    339a:	2a 95       	dec	r18
    339c:	d2 f7       	brpl	.-12     	; 0x3392 <__pack_f+0x94>
    339e:	01 97       	sbiw	r24, 0x01	; 1
    33a0:	a1 09       	sbc	r26, r1
    33a2:	b1 09       	sbc	r27, r1
    33a4:	8e 21       	and	r24, r14
    33a6:	9f 21       	and	r25, r15
    33a8:	a0 23       	and	r26, r16
    33aa:	b1 23       	and	r27, r17
    33ac:	00 97       	sbiw	r24, 0x00	; 0
    33ae:	a1 05       	cpc	r26, r1
    33b0:	b1 05       	cpc	r27, r1
    33b2:	21 f0       	breq	.+8      	; 0x33bc <__pack_f+0xbe>
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	a0 e0       	ldi	r26, 0x00	; 0
    33ba:	b0 e0       	ldi	r27, 0x00	; 0
    33bc:	9a 01       	movw	r18, r20
    33be:	ab 01       	movw	r20, r22
    33c0:	28 2b       	or	r18, r24
    33c2:	39 2b       	or	r19, r25
    33c4:	4a 2b       	or	r20, r26
    33c6:	5b 2b       	or	r21, r27
    33c8:	da 01       	movw	r26, r20
    33ca:	c9 01       	movw	r24, r18
    33cc:	8f 77       	andi	r24, 0x7F	; 127
    33ce:	90 70       	andi	r25, 0x00	; 0
    33d0:	a0 70       	andi	r26, 0x00	; 0
    33d2:	b0 70       	andi	r27, 0x00	; 0
    33d4:	80 34       	cpi	r24, 0x40	; 64
    33d6:	91 05       	cpc	r25, r1
    33d8:	a1 05       	cpc	r26, r1
    33da:	b1 05       	cpc	r27, r1
    33dc:	39 f4       	brne	.+14     	; 0x33ec <__pack_f+0xee>
    33de:	27 ff       	sbrs	r18, 7
    33e0:	09 c0       	rjmp	.+18     	; 0x33f4 <__pack_f+0xf6>
    33e2:	20 5c       	subi	r18, 0xC0	; 192
    33e4:	3f 4f       	sbci	r19, 0xFF	; 255
    33e6:	4f 4f       	sbci	r20, 0xFF	; 255
    33e8:	5f 4f       	sbci	r21, 0xFF	; 255
    33ea:	04 c0       	rjmp	.+8      	; 0x33f4 <__pack_f+0xf6>
    33ec:	21 5c       	subi	r18, 0xC1	; 193
    33ee:	3f 4f       	sbci	r19, 0xFF	; 255
    33f0:	4f 4f       	sbci	r20, 0xFF	; 255
    33f2:	5f 4f       	sbci	r21, 0xFF	; 255
    33f4:	e0 e0       	ldi	r30, 0x00	; 0
    33f6:	f0 e0       	ldi	r31, 0x00	; 0
    33f8:	20 30       	cpi	r18, 0x00	; 0
    33fa:	a0 e0       	ldi	r26, 0x00	; 0
    33fc:	3a 07       	cpc	r19, r26
    33fe:	a0 e0       	ldi	r26, 0x00	; 0
    3400:	4a 07       	cpc	r20, r26
    3402:	a0 e4       	ldi	r26, 0x40	; 64
    3404:	5a 07       	cpc	r21, r26
    3406:	10 f0       	brcs	.+4      	; 0x340c <__pack_f+0x10e>
    3408:	e1 e0       	ldi	r30, 0x01	; 1
    340a:	f0 e0       	ldi	r31, 0x00	; 0
    340c:	79 01       	movw	r14, r18
    340e:	8a 01       	movw	r16, r20
    3410:	27 c0       	rjmp	.+78     	; 0x3460 <__pack_f+0x162>
    3412:	60 38       	cpi	r22, 0x80	; 128
    3414:	71 05       	cpc	r23, r1
    3416:	64 f5       	brge	.+88     	; 0x3470 <__pack_f+0x172>
    3418:	fb 01       	movw	r30, r22
    341a:	e1 58       	subi	r30, 0x81	; 129
    341c:	ff 4f       	sbci	r31, 0xFF	; 255
    341e:	d8 01       	movw	r26, r16
    3420:	c7 01       	movw	r24, r14
    3422:	8f 77       	andi	r24, 0x7F	; 127
    3424:	90 70       	andi	r25, 0x00	; 0
    3426:	a0 70       	andi	r26, 0x00	; 0
    3428:	b0 70       	andi	r27, 0x00	; 0
    342a:	80 34       	cpi	r24, 0x40	; 64
    342c:	91 05       	cpc	r25, r1
    342e:	a1 05       	cpc	r26, r1
    3430:	b1 05       	cpc	r27, r1
    3432:	39 f4       	brne	.+14     	; 0x3442 <__pack_f+0x144>
    3434:	e7 fe       	sbrs	r14, 7
    3436:	0d c0       	rjmp	.+26     	; 0x3452 <__pack_f+0x154>
    3438:	80 e4       	ldi	r24, 0x40	; 64
    343a:	90 e0       	ldi	r25, 0x00	; 0
    343c:	a0 e0       	ldi	r26, 0x00	; 0
    343e:	b0 e0       	ldi	r27, 0x00	; 0
    3440:	04 c0       	rjmp	.+8      	; 0x344a <__pack_f+0x14c>
    3442:	8f e3       	ldi	r24, 0x3F	; 63
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	a0 e0       	ldi	r26, 0x00	; 0
    3448:	b0 e0       	ldi	r27, 0x00	; 0
    344a:	e8 0e       	add	r14, r24
    344c:	f9 1e       	adc	r15, r25
    344e:	0a 1f       	adc	r16, r26
    3450:	1b 1f       	adc	r17, r27
    3452:	17 ff       	sbrs	r17, 7
    3454:	05 c0       	rjmp	.+10     	; 0x3460 <__pack_f+0x162>
    3456:	16 95       	lsr	r17
    3458:	07 95       	ror	r16
    345a:	f7 94       	ror	r15
    345c:	e7 94       	ror	r14
    345e:	31 96       	adiw	r30, 0x01	; 1
    3460:	87 e0       	ldi	r24, 0x07	; 7
    3462:	16 95       	lsr	r17
    3464:	07 95       	ror	r16
    3466:	f7 94       	ror	r15
    3468:	e7 94       	ror	r14
    346a:	8a 95       	dec	r24
    346c:	d1 f7       	brne	.-12     	; 0x3462 <__pack_f+0x164>
    346e:	05 c0       	rjmp	.+10     	; 0x347a <__pack_f+0x17c>
    3470:	ee 24       	eor	r14, r14
    3472:	ff 24       	eor	r15, r15
    3474:	87 01       	movw	r16, r14
    3476:	ef ef       	ldi	r30, 0xFF	; 255
    3478:	f0 e0       	ldi	r31, 0x00	; 0
    347a:	6e 2f       	mov	r22, r30
    347c:	67 95       	ror	r22
    347e:	66 27       	eor	r22, r22
    3480:	67 95       	ror	r22
    3482:	90 2f       	mov	r25, r16
    3484:	9f 77       	andi	r25, 0x7F	; 127
    3486:	d7 94       	ror	r13
    3488:	dd 24       	eor	r13, r13
    348a:	d7 94       	ror	r13
    348c:	8e 2f       	mov	r24, r30
    348e:	86 95       	lsr	r24
    3490:	49 2f       	mov	r20, r25
    3492:	46 2b       	or	r20, r22
    3494:	58 2f       	mov	r21, r24
    3496:	5d 29       	or	r21, r13
    3498:	b7 01       	movw	r22, r14
    349a:	ca 01       	movw	r24, r20
    349c:	1f 91       	pop	r17
    349e:	0f 91       	pop	r16
    34a0:	ff 90       	pop	r15
    34a2:	ef 90       	pop	r14
    34a4:	df 90       	pop	r13
    34a6:	08 95       	ret

000034a8 <__unpack_f>:
    34a8:	fc 01       	movw	r30, r24
    34aa:	db 01       	movw	r26, r22
    34ac:	40 81       	ld	r20, Z
    34ae:	51 81       	ldd	r21, Z+1	; 0x01
    34b0:	22 81       	ldd	r18, Z+2	; 0x02
    34b2:	62 2f       	mov	r22, r18
    34b4:	6f 77       	andi	r22, 0x7F	; 127
    34b6:	70 e0       	ldi	r23, 0x00	; 0
    34b8:	22 1f       	adc	r18, r18
    34ba:	22 27       	eor	r18, r18
    34bc:	22 1f       	adc	r18, r18
    34be:	93 81       	ldd	r25, Z+3	; 0x03
    34c0:	89 2f       	mov	r24, r25
    34c2:	88 0f       	add	r24, r24
    34c4:	82 2b       	or	r24, r18
    34c6:	28 2f       	mov	r18, r24
    34c8:	30 e0       	ldi	r19, 0x00	; 0
    34ca:	99 1f       	adc	r25, r25
    34cc:	99 27       	eor	r25, r25
    34ce:	99 1f       	adc	r25, r25
    34d0:	11 96       	adiw	r26, 0x01	; 1
    34d2:	9c 93       	st	X, r25
    34d4:	11 97       	sbiw	r26, 0x01	; 1
    34d6:	21 15       	cp	r18, r1
    34d8:	31 05       	cpc	r19, r1
    34da:	a9 f5       	brne	.+106    	; 0x3546 <__unpack_f+0x9e>
    34dc:	41 15       	cp	r20, r1
    34de:	51 05       	cpc	r21, r1
    34e0:	61 05       	cpc	r22, r1
    34e2:	71 05       	cpc	r23, r1
    34e4:	11 f4       	brne	.+4      	; 0x34ea <__unpack_f+0x42>
    34e6:	82 e0       	ldi	r24, 0x02	; 2
    34e8:	37 c0       	rjmp	.+110    	; 0x3558 <__unpack_f+0xb0>
    34ea:	82 e8       	ldi	r24, 0x82	; 130
    34ec:	9f ef       	ldi	r25, 0xFF	; 255
    34ee:	13 96       	adiw	r26, 0x03	; 3
    34f0:	9c 93       	st	X, r25
    34f2:	8e 93       	st	-X, r24
    34f4:	12 97       	sbiw	r26, 0x02	; 2
    34f6:	9a 01       	movw	r18, r20
    34f8:	ab 01       	movw	r20, r22
    34fa:	67 e0       	ldi	r22, 0x07	; 7
    34fc:	22 0f       	add	r18, r18
    34fe:	33 1f       	adc	r19, r19
    3500:	44 1f       	adc	r20, r20
    3502:	55 1f       	adc	r21, r21
    3504:	6a 95       	dec	r22
    3506:	d1 f7       	brne	.-12     	; 0x34fc <__unpack_f+0x54>
    3508:	83 e0       	ldi	r24, 0x03	; 3
    350a:	8c 93       	st	X, r24
    350c:	0d c0       	rjmp	.+26     	; 0x3528 <__unpack_f+0x80>
    350e:	22 0f       	add	r18, r18
    3510:	33 1f       	adc	r19, r19
    3512:	44 1f       	adc	r20, r20
    3514:	55 1f       	adc	r21, r21
    3516:	12 96       	adiw	r26, 0x02	; 2
    3518:	8d 91       	ld	r24, X+
    351a:	9c 91       	ld	r25, X
    351c:	13 97       	sbiw	r26, 0x03	; 3
    351e:	01 97       	sbiw	r24, 0x01	; 1
    3520:	13 96       	adiw	r26, 0x03	; 3
    3522:	9c 93       	st	X, r25
    3524:	8e 93       	st	-X, r24
    3526:	12 97       	sbiw	r26, 0x02	; 2
    3528:	20 30       	cpi	r18, 0x00	; 0
    352a:	80 e0       	ldi	r24, 0x00	; 0
    352c:	38 07       	cpc	r19, r24
    352e:	80 e0       	ldi	r24, 0x00	; 0
    3530:	48 07       	cpc	r20, r24
    3532:	80 e4       	ldi	r24, 0x40	; 64
    3534:	58 07       	cpc	r21, r24
    3536:	58 f3       	brcs	.-42     	; 0x350e <__unpack_f+0x66>
    3538:	14 96       	adiw	r26, 0x04	; 4
    353a:	2d 93       	st	X+, r18
    353c:	3d 93       	st	X+, r19
    353e:	4d 93       	st	X+, r20
    3540:	5c 93       	st	X, r21
    3542:	17 97       	sbiw	r26, 0x07	; 7
    3544:	08 95       	ret
    3546:	2f 3f       	cpi	r18, 0xFF	; 255
    3548:	31 05       	cpc	r19, r1
    354a:	79 f4       	brne	.+30     	; 0x356a <__unpack_f+0xc2>
    354c:	41 15       	cp	r20, r1
    354e:	51 05       	cpc	r21, r1
    3550:	61 05       	cpc	r22, r1
    3552:	71 05       	cpc	r23, r1
    3554:	19 f4       	brne	.+6      	; 0x355c <__unpack_f+0xb4>
    3556:	84 e0       	ldi	r24, 0x04	; 4
    3558:	8c 93       	st	X, r24
    355a:	08 95       	ret
    355c:	64 ff       	sbrs	r22, 4
    355e:	03 c0       	rjmp	.+6      	; 0x3566 <__unpack_f+0xbe>
    3560:	81 e0       	ldi	r24, 0x01	; 1
    3562:	8c 93       	st	X, r24
    3564:	12 c0       	rjmp	.+36     	; 0x358a <__unpack_f+0xe2>
    3566:	1c 92       	st	X, r1
    3568:	10 c0       	rjmp	.+32     	; 0x358a <__unpack_f+0xe2>
    356a:	2f 57       	subi	r18, 0x7F	; 127
    356c:	30 40       	sbci	r19, 0x00	; 0
    356e:	13 96       	adiw	r26, 0x03	; 3
    3570:	3c 93       	st	X, r19
    3572:	2e 93       	st	-X, r18
    3574:	12 97       	sbiw	r26, 0x02	; 2
    3576:	83 e0       	ldi	r24, 0x03	; 3
    3578:	8c 93       	st	X, r24
    357a:	87 e0       	ldi	r24, 0x07	; 7
    357c:	44 0f       	add	r20, r20
    357e:	55 1f       	adc	r21, r21
    3580:	66 1f       	adc	r22, r22
    3582:	77 1f       	adc	r23, r23
    3584:	8a 95       	dec	r24
    3586:	d1 f7       	brne	.-12     	; 0x357c <__unpack_f+0xd4>
    3588:	70 64       	ori	r23, 0x40	; 64
    358a:	14 96       	adiw	r26, 0x04	; 4
    358c:	4d 93       	st	X+, r20
    358e:	5d 93       	st	X+, r21
    3590:	6d 93       	st	X+, r22
    3592:	7c 93       	st	X, r23
    3594:	17 97       	sbiw	r26, 0x07	; 7
    3596:	08 95       	ret

00003598 <__fpcmp_parts_f>:
    3598:	1f 93       	push	r17
    359a:	dc 01       	movw	r26, r24
    359c:	fb 01       	movw	r30, r22
    359e:	9c 91       	ld	r25, X
    35a0:	92 30       	cpi	r25, 0x02	; 2
    35a2:	08 f4       	brcc	.+2      	; 0x35a6 <__fpcmp_parts_f+0xe>
    35a4:	47 c0       	rjmp	.+142    	; 0x3634 <__fpcmp_parts_f+0x9c>
    35a6:	80 81       	ld	r24, Z
    35a8:	82 30       	cpi	r24, 0x02	; 2
    35aa:	08 f4       	brcc	.+2      	; 0x35ae <__fpcmp_parts_f+0x16>
    35ac:	43 c0       	rjmp	.+134    	; 0x3634 <__fpcmp_parts_f+0x9c>
    35ae:	94 30       	cpi	r25, 0x04	; 4
    35b0:	51 f4       	brne	.+20     	; 0x35c6 <__fpcmp_parts_f+0x2e>
    35b2:	11 96       	adiw	r26, 0x01	; 1
    35b4:	1c 91       	ld	r17, X
    35b6:	84 30       	cpi	r24, 0x04	; 4
    35b8:	99 f5       	brne	.+102    	; 0x3620 <__fpcmp_parts_f+0x88>
    35ba:	81 81       	ldd	r24, Z+1	; 0x01
    35bc:	68 2f       	mov	r22, r24
    35be:	70 e0       	ldi	r23, 0x00	; 0
    35c0:	61 1b       	sub	r22, r17
    35c2:	71 09       	sbc	r23, r1
    35c4:	3f c0       	rjmp	.+126    	; 0x3644 <__fpcmp_parts_f+0xac>
    35c6:	84 30       	cpi	r24, 0x04	; 4
    35c8:	21 f0       	breq	.+8      	; 0x35d2 <__fpcmp_parts_f+0x3a>
    35ca:	92 30       	cpi	r25, 0x02	; 2
    35cc:	31 f4       	brne	.+12     	; 0x35da <__fpcmp_parts_f+0x42>
    35ce:	82 30       	cpi	r24, 0x02	; 2
    35d0:	b9 f1       	breq	.+110    	; 0x3640 <__fpcmp_parts_f+0xa8>
    35d2:	81 81       	ldd	r24, Z+1	; 0x01
    35d4:	88 23       	and	r24, r24
    35d6:	89 f1       	breq	.+98     	; 0x363a <__fpcmp_parts_f+0xa2>
    35d8:	2d c0       	rjmp	.+90     	; 0x3634 <__fpcmp_parts_f+0x9c>
    35da:	11 96       	adiw	r26, 0x01	; 1
    35dc:	1c 91       	ld	r17, X
    35de:	11 97       	sbiw	r26, 0x01	; 1
    35e0:	82 30       	cpi	r24, 0x02	; 2
    35e2:	f1 f0       	breq	.+60     	; 0x3620 <__fpcmp_parts_f+0x88>
    35e4:	81 81       	ldd	r24, Z+1	; 0x01
    35e6:	18 17       	cp	r17, r24
    35e8:	d9 f4       	brne	.+54     	; 0x3620 <__fpcmp_parts_f+0x88>
    35ea:	12 96       	adiw	r26, 0x02	; 2
    35ec:	2d 91       	ld	r18, X+
    35ee:	3c 91       	ld	r19, X
    35f0:	13 97       	sbiw	r26, 0x03	; 3
    35f2:	82 81       	ldd	r24, Z+2	; 0x02
    35f4:	93 81       	ldd	r25, Z+3	; 0x03
    35f6:	82 17       	cp	r24, r18
    35f8:	93 07       	cpc	r25, r19
    35fa:	94 f0       	brlt	.+36     	; 0x3620 <__fpcmp_parts_f+0x88>
    35fc:	28 17       	cp	r18, r24
    35fe:	39 07       	cpc	r19, r25
    3600:	bc f0       	brlt	.+46     	; 0x3630 <__fpcmp_parts_f+0x98>
    3602:	14 96       	adiw	r26, 0x04	; 4
    3604:	8d 91       	ld	r24, X+
    3606:	9d 91       	ld	r25, X+
    3608:	0d 90       	ld	r0, X+
    360a:	bc 91       	ld	r27, X
    360c:	a0 2d       	mov	r26, r0
    360e:	24 81       	ldd	r18, Z+4	; 0x04
    3610:	35 81       	ldd	r19, Z+5	; 0x05
    3612:	46 81       	ldd	r20, Z+6	; 0x06
    3614:	57 81       	ldd	r21, Z+7	; 0x07
    3616:	28 17       	cp	r18, r24
    3618:	39 07       	cpc	r19, r25
    361a:	4a 07       	cpc	r20, r26
    361c:	5b 07       	cpc	r21, r27
    361e:	18 f4       	brcc	.+6      	; 0x3626 <__fpcmp_parts_f+0x8e>
    3620:	11 23       	and	r17, r17
    3622:	41 f0       	breq	.+16     	; 0x3634 <__fpcmp_parts_f+0x9c>
    3624:	0a c0       	rjmp	.+20     	; 0x363a <__fpcmp_parts_f+0xa2>
    3626:	82 17       	cp	r24, r18
    3628:	93 07       	cpc	r25, r19
    362a:	a4 07       	cpc	r26, r20
    362c:	b5 07       	cpc	r27, r21
    362e:	40 f4       	brcc	.+16     	; 0x3640 <__fpcmp_parts_f+0xa8>
    3630:	11 23       	and	r17, r17
    3632:	19 f0       	breq	.+6      	; 0x363a <__fpcmp_parts_f+0xa2>
    3634:	61 e0       	ldi	r22, 0x01	; 1
    3636:	70 e0       	ldi	r23, 0x00	; 0
    3638:	05 c0       	rjmp	.+10     	; 0x3644 <__fpcmp_parts_f+0xac>
    363a:	6f ef       	ldi	r22, 0xFF	; 255
    363c:	7f ef       	ldi	r23, 0xFF	; 255
    363e:	02 c0       	rjmp	.+4      	; 0x3644 <__fpcmp_parts_f+0xac>
    3640:	60 e0       	ldi	r22, 0x00	; 0
    3642:	70 e0       	ldi	r23, 0x00	; 0
    3644:	cb 01       	movw	r24, r22
    3646:	1f 91       	pop	r17
    3648:	08 95       	ret

0000364a <DIO_vsetPINDir>:
/*****************************************************************************************/


#include "std_macros.h"
#include <avr/io.h>
void DIO_vsetPINDir(unsigned char portname,unsigned char pinnumber,unsigned char direction){
    364a:	df 93       	push	r29
    364c:	cf 93       	push	r28
    364e:	00 d0       	rcall	.+0      	; 0x3650 <DIO_vsetPINDir+0x6>
    3650:	0f 92       	push	r0
    3652:	cd b7       	in	r28, 0x3d	; 61
    3654:	de b7       	in	r29, 0x3e	; 62
    3656:	89 83       	std	Y+1, r24	; 0x01
    3658:	6a 83       	std	Y+2, r22	; 0x02
    365a:	4b 83       	std	Y+3, r20	; 0x03
	
	if (portname=='A')
    365c:	89 81       	ldd	r24, Y+1	; 0x01
    365e:	81 34       	cpi	r24, 0x41	; 65
    3660:	59 f5       	brne	.+86     	; 0x36b8 <DIO_vsetPINDir+0x6e>
	{
		if (direction)
    3662:	8b 81       	ldd	r24, Y+3	; 0x03
    3664:	88 23       	and	r24, r24
    3666:	a1 f0       	breq	.+40     	; 0x3690 <DIO_vsetPINDir+0x46>
		{
			SET_BIT(DDRA,pinnumber);
    3668:	aa e3       	ldi	r26, 0x3A	; 58
    366a:	b0 e0       	ldi	r27, 0x00	; 0
    366c:	ea e3       	ldi	r30, 0x3A	; 58
    366e:	f0 e0       	ldi	r31, 0x00	; 0
    3670:	80 81       	ld	r24, Z
    3672:	48 2f       	mov	r20, r24
    3674:	8a 81       	ldd	r24, Y+2	; 0x02
    3676:	28 2f       	mov	r18, r24
    3678:	30 e0       	ldi	r19, 0x00	; 0
    367a:	81 e0       	ldi	r24, 0x01	; 1
    367c:	90 e0       	ldi	r25, 0x00	; 0
    367e:	02 2e       	mov	r0, r18
    3680:	02 c0       	rjmp	.+4      	; 0x3686 <DIO_vsetPINDir+0x3c>
    3682:	88 0f       	add	r24, r24
    3684:	99 1f       	adc	r25, r25
    3686:	0a 94       	dec	r0
    3688:	e2 f7       	brpl	.-8      	; 0x3682 <DIO_vsetPINDir+0x38>
    368a:	84 2b       	or	r24, r20
    368c:	8c 93       	st	X, r24
    368e:	14 c0       	rjmp	.+40     	; 0x36b8 <DIO_vsetPINDir+0x6e>
		}else{
			CLR_BIT(DDRA,pinnumber);
    3690:	aa e3       	ldi	r26, 0x3A	; 58
    3692:	b0 e0       	ldi	r27, 0x00	; 0
    3694:	ea e3       	ldi	r30, 0x3A	; 58
    3696:	f0 e0       	ldi	r31, 0x00	; 0
    3698:	80 81       	ld	r24, Z
    369a:	48 2f       	mov	r20, r24
    369c:	8a 81       	ldd	r24, Y+2	; 0x02
    369e:	28 2f       	mov	r18, r24
    36a0:	30 e0       	ldi	r19, 0x00	; 0
    36a2:	81 e0       	ldi	r24, 0x01	; 1
    36a4:	90 e0       	ldi	r25, 0x00	; 0
    36a6:	02 2e       	mov	r0, r18
    36a8:	02 c0       	rjmp	.+4      	; 0x36ae <DIO_vsetPINDir+0x64>
    36aa:	88 0f       	add	r24, r24
    36ac:	99 1f       	adc	r25, r25
    36ae:	0a 94       	dec	r0
    36b0:	e2 f7       	brpl	.-8      	; 0x36aa <DIO_vsetPINDir+0x60>
    36b2:	80 95       	com	r24
    36b4:	84 23       	and	r24, r20
    36b6:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='B')
    36b8:	89 81       	ldd	r24, Y+1	; 0x01
    36ba:	82 34       	cpi	r24, 0x42	; 66
    36bc:	59 f5       	brne	.+86     	; 0x3714 <DIO_vsetPINDir+0xca>
	{
		if (direction)
    36be:	8b 81       	ldd	r24, Y+3	; 0x03
    36c0:	88 23       	and	r24, r24
    36c2:	a1 f0       	breq	.+40     	; 0x36ec <DIO_vsetPINDir+0xa2>
		{
			SET_BIT(DDRB,pinnumber);
    36c4:	a7 e3       	ldi	r26, 0x37	; 55
    36c6:	b0 e0       	ldi	r27, 0x00	; 0
    36c8:	e7 e3       	ldi	r30, 0x37	; 55
    36ca:	f0 e0       	ldi	r31, 0x00	; 0
    36cc:	80 81       	ld	r24, Z
    36ce:	48 2f       	mov	r20, r24
    36d0:	8a 81       	ldd	r24, Y+2	; 0x02
    36d2:	28 2f       	mov	r18, r24
    36d4:	30 e0       	ldi	r19, 0x00	; 0
    36d6:	81 e0       	ldi	r24, 0x01	; 1
    36d8:	90 e0       	ldi	r25, 0x00	; 0
    36da:	02 2e       	mov	r0, r18
    36dc:	02 c0       	rjmp	.+4      	; 0x36e2 <DIO_vsetPINDir+0x98>
    36de:	88 0f       	add	r24, r24
    36e0:	99 1f       	adc	r25, r25
    36e2:	0a 94       	dec	r0
    36e4:	e2 f7       	brpl	.-8      	; 0x36de <DIO_vsetPINDir+0x94>
    36e6:	84 2b       	or	r24, r20
    36e8:	8c 93       	st	X, r24
    36ea:	14 c0       	rjmp	.+40     	; 0x3714 <DIO_vsetPINDir+0xca>
		}else{
			CLR_BIT(DDRB,pinnumber);
    36ec:	a7 e3       	ldi	r26, 0x37	; 55
    36ee:	b0 e0       	ldi	r27, 0x00	; 0
    36f0:	e7 e3       	ldi	r30, 0x37	; 55
    36f2:	f0 e0       	ldi	r31, 0x00	; 0
    36f4:	80 81       	ld	r24, Z
    36f6:	48 2f       	mov	r20, r24
    36f8:	8a 81       	ldd	r24, Y+2	; 0x02
    36fa:	28 2f       	mov	r18, r24
    36fc:	30 e0       	ldi	r19, 0x00	; 0
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	90 e0       	ldi	r25, 0x00	; 0
    3702:	02 2e       	mov	r0, r18
    3704:	02 c0       	rjmp	.+4      	; 0x370a <DIO_vsetPINDir+0xc0>
    3706:	88 0f       	add	r24, r24
    3708:	99 1f       	adc	r25, r25
    370a:	0a 94       	dec	r0
    370c:	e2 f7       	brpl	.-8      	; 0x3706 <DIO_vsetPINDir+0xbc>
    370e:	80 95       	com	r24
    3710:	84 23       	and	r24, r20
    3712:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='C')
    3714:	89 81       	ldd	r24, Y+1	; 0x01
    3716:	83 34       	cpi	r24, 0x43	; 67
    3718:	59 f5       	brne	.+86     	; 0x3770 <DIO_vsetPINDir+0x126>
	{
		if (direction)
    371a:	8b 81       	ldd	r24, Y+3	; 0x03
    371c:	88 23       	and	r24, r24
    371e:	a1 f0       	breq	.+40     	; 0x3748 <DIO_vsetPINDir+0xfe>
		{
			SET_BIT(DDRC,pinnumber);
    3720:	a4 e3       	ldi	r26, 0x34	; 52
    3722:	b0 e0       	ldi	r27, 0x00	; 0
    3724:	e4 e3       	ldi	r30, 0x34	; 52
    3726:	f0 e0       	ldi	r31, 0x00	; 0
    3728:	80 81       	ld	r24, Z
    372a:	48 2f       	mov	r20, r24
    372c:	8a 81       	ldd	r24, Y+2	; 0x02
    372e:	28 2f       	mov	r18, r24
    3730:	30 e0       	ldi	r19, 0x00	; 0
    3732:	81 e0       	ldi	r24, 0x01	; 1
    3734:	90 e0       	ldi	r25, 0x00	; 0
    3736:	02 2e       	mov	r0, r18
    3738:	02 c0       	rjmp	.+4      	; 0x373e <DIO_vsetPINDir+0xf4>
    373a:	88 0f       	add	r24, r24
    373c:	99 1f       	adc	r25, r25
    373e:	0a 94       	dec	r0
    3740:	e2 f7       	brpl	.-8      	; 0x373a <DIO_vsetPINDir+0xf0>
    3742:	84 2b       	or	r24, r20
    3744:	8c 93       	st	X, r24
    3746:	14 c0       	rjmp	.+40     	; 0x3770 <DIO_vsetPINDir+0x126>
		}else{
			CLR_BIT(DDRC,pinnumber);
    3748:	a4 e3       	ldi	r26, 0x34	; 52
    374a:	b0 e0       	ldi	r27, 0x00	; 0
    374c:	e4 e3       	ldi	r30, 0x34	; 52
    374e:	f0 e0       	ldi	r31, 0x00	; 0
    3750:	80 81       	ld	r24, Z
    3752:	48 2f       	mov	r20, r24
    3754:	8a 81       	ldd	r24, Y+2	; 0x02
    3756:	28 2f       	mov	r18, r24
    3758:	30 e0       	ldi	r19, 0x00	; 0
    375a:	81 e0       	ldi	r24, 0x01	; 1
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	02 2e       	mov	r0, r18
    3760:	02 c0       	rjmp	.+4      	; 0x3766 <DIO_vsetPINDir+0x11c>
    3762:	88 0f       	add	r24, r24
    3764:	99 1f       	adc	r25, r25
    3766:	0a 94       	dec	r0
    3768:	e2 f7       	brpl	.-8      	; 0x3762 <DIO_vsetPINDir+0x118>
    376a:	80 95       	com	r24
    376c:	84 23       	and	r24, r20
    376e:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='D')
    3770:	89 81       	ldd	r24, Y+1	; 0x01
    3772:	84 34       	cpi	r24, 0x44	; 68
    3774:	59 f5       	brne	.+86     	; 0x37cc <DIO_vsetPINDir+0x182>
	{
		if (direction)
    3776:	8b 81       	ldd	r24, Y+3	; 0x03
    3778:	88 23       	and	r24, r24
    377a:	a1 f0       	breq	.+40     	; 0x37a4 <DIO_vsetPINDir+0x15a>
		{
			SET_BIT(DDRD,pinnumber);
    377c:	a1 e3       	ldi	r26, 0x31	; 49
    377e:	b0 e0       	ldi	r27, 0x00	; 0
    3780:	e1 e3       	ldi	r30, 0x31	; 49
    3782:	f0 e0       	ldi	r31, 0x00	; 0
    3784:	80 81       	ld	r24, Z
    3786:	48 2f       	mov	r20, r24
    3788:	8a 81       	ldd	r24, Y+2	; 0x02
    378a:	28 2f       	mov	r18, r24
    378c:	30 e0       	ldi	r19, 0x00	; 0
    378e:	81 e0       	ldi	r24, 0x01	; 1
    3790:	90 e0       	ldi	r25, 0x00	; 0
    3792:	02 2e       	mov	r0, r18
    3794:	02 c0       	rjmp	.+4      	; 0x379a <DIO_vsetPINDir+0x150>
    3796:	88 0f       	add	r24, r24
    3798:	99 1f       	adc	r25, r25
    379a:	0a 94       	dec	r0
    379c:	e2 f7       	brpl	.-8      	; 0x3796 <DIO_vsetPINDir+0x14c>
    379e:	84 2b       	or	r24, r20
    37a0:	8c 93       	st	X, r24
    37a2:	14 c0       	rjmp	.+40     	; 0x37cc <DIO_vsetPINDir+0x182>
		}else{
			CLR_BIT(DDRD,pinnumber);
    37a4:	a1 e3       	ldi	r26, 0x31	; 49
    37a6:	b0 e0       	ldi	r27, 0x00	; 0
    37a8:	e1 e3       	ldi	r30, 0x31	; 49
    37aa:	f0 e0       	ldi	r31, 0x00	; 0
    37ac:	80 81       	ld	r24, Z
    37ae:	48 2f       	mov	r20, r24
    37b0:	8a 81       	ldd	r24, Y+2	; 0x02
    37b2:	28 2f       	mov	r18, r24
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	81 e0       	ldi	r24, 0x01	; 1
    37b8:	90 e0       	ldi	r25, 0x00	; 0
    37ba:	02 2e       	mov	r0, r18
    37bc:	02 c0       	rjmp	.+4      	; 0x37c2 <DIO_vsetPINDir+0x178>
    37be:	88 0f       	add	r24, r24
    37c0:	99 1f       	adc	r25, r25
    37c2:	0a 94       	dec	r0
    37c4:	e2 f7       	brpl	.-8      	; 0x37be <DIO_vsetPINDir+0x174>
    37c6:	80 95       	com	r24
    37c8:	84 23       	and	r24, r20
    37ca:	8c 93       	st	X, r24
		}
	}
		
}
    37cc:	0f 90       	pop	r0
    37ce:	0f 90       	pop	r0
    37d0:	0f 90       	pop	r0
    37d2:	cf 91       	pop	r28
    37d4:	df 91       	pop	r29
    37d6:	08 95       	ret

000037d8 <DIO_vwrite>:



void DIO_vwrite(unsigned char portname,unsigned char pinnumber,unsigned char outputvalue){
    37d8:	df 93       	push	r29
    37da:	cf 93       	push	r28
    37dc:	00 d0       	rcall	.+0      	; 0x37de <DIO_vwrite+0x6>
    37de:	0f 92       	push	r0
    37e0:	cd b7       	in	r28, 0x3d	; 61
    37e2:	de b7       	in	r29, 0x3e	; 62
    37e4:	89 83       	std	Y+1, r24	; 0x01
    37e6:	6a 83       	std	Y+2, r22	; 0x02
    37e8:	4b 83       	std	Y+3, r20	; 0x03
	
	if (portname=='A')
    37ea:	89 81       	ldd	r24, Y+1	; 0x01
    37ec:	81 34       	cpi	r24, 0x41	; 65
    37ee:	59 f5       	brne	.+86     	; 0x3846 <DIO_vwrite+0x6e>
	{
		if (outputvalue)
    37f0:	8b 81       	ldd	r24, Y+3	; 0x03
    37f2:	88 23       	and	r24, r24
    37f4:	a1 f0       	breq	.+40     	; 0x381e <DIO_vwrite+0x46>
		{
			SET_BIT(PORTA,pinnumber);
    37f6:	ab e3       	ldi	r26, 0x3B	; 59
    37f8:	b0 e0       	ldi	r27, 0x00	; 0
    37fa:	eb e3       	ldi	r30, 0x3B	; 59
    37fc:	f0 e0       	ldi	r31, 0x00	; 0
    37fe:	80 81       	ld	r24, Z
    3800:	48 2f       	mov	r20, r24
    3802:	8a 81       	ldd	r24, Y+2	; 0x02
    3804:	28 2f       	mov	r18, r24
    3806:	30 e0       	ldi	r19, 0x00	; 0
    3808:	81 e0       	ldi	r24, 0x01	; 1
    380a:	90 e0       	ldi	r25, 0x00	; 0
    380c:	02 2e       	mov	r0, r18
    380e:	02 c0       	rjmp	.+4      	; 0x3814 <DIO_vwrite+0x3c>
    3810:	88 0f       	add	r24, r24
    3812:	99 1f       	adc	r25, r25
    3814:	0a 94       	dec	r0
    3816:	e2 f7       	brpl	.-8      	; 0x3810 <DIO_vwrite+0x38>
    3818:	84 2b       	or	r24, r20
    381a:	8c 93       	st	X, r24
    381c:	14 c0       	rjmp	.+40     	; 0x3846 <DIO_vwrite+0x6e>
		}else{
			CLR_BIT(PORTA,pinnumber);
    381e:	ab e3       	ldi	r26, 0x3B	; 59
    3820:	b0 e0       	ldi	r27, 0x00	; 0
    3822:	eb e3       	ldi	r30, 0x3B	; 59
    3824:	f0 e0       	ldi	r31, 0x00	; 0
    3826:	80 81       	ld	r24, Z
    3828:	48 2f       	mov	r20, r24
    382a:	8a 81       	ldd	r24, Y+2	; 0x02
    382c:	28 2f       	mov	r18, r24
    382e:	30 e0       	ldi	r19, 0x00	; 0
    3830:	81 e0       	ldi	r24, 0x01	; 1
    3832:	90 e0       	ldi	r25, 0x00	; 0
    3834:	02 2e       	mov	r0, r18
    3836:	02 c0       	rjmp	.+4      	; 0x383c <DIO_vwrite+0x64>
    3838:	88 0f       	add	r24, r24
    383a:	99 1f       	adc	r25, r25
    383c:	0a 94       	dec	r0
    383e:	e2 f7       	brpl	.-8      	; 0x3838 <DIO_vwrite+0x60>
    3840:	80 95       	com	r24
    3842:	84 23       	and	r24, r20
    3844:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='B')
    3846:	89 81       	ldd	r24, Y+1	; 0x01
    3848:	82 34       	cpi	r24, 0x42	; 66
    384a:	59 f5       	brne	.+86     	; 0x38a2 <DIO_vwrite+0xca>
	{
		if (outputvalue)
    384c:	8b 81       	ldd	r24, Y+3	; 0x03
    384e:	88 23       	and	r24, r24
    3850:	a1 f0       	breq	.+40     	; 0x387a <DIO_vwrite+0xa2>
		{
			SET_BIT(PORTB,pinnumber);
    3852:	a8 e3       	ldi	r26, 0x38	; 56
    3854:	b0 e0       	ldi	r27, 0x00	; 0
    3856:	e8 e3       	ldi	r30, 0x38	; 56
    3858:	f0 e0       	ldi	r31, 0x00	; 0
    385a:	80 81       	ld	r24, Z
    385c:	48 2f       	mov	r20, r24
    385e:	8a 81       	ldd	r24, Y+2	; 0x02
    3860:	28 2f       	mov	r18, r24
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	81 e0       	ldi	r24, 0x01	; 1
    3866:	90 e0       	ldi	r25, 0x00	; 0
    3868:	02 2e       	mov	r0, r18
    386a:	02 c0       	rjmp	.+4      	; 0x3870 <DIO_vwrite+0x98>
    386c:	88 0f       	add	r24, r24
    386e:	99 1f       	adc	r25, r25
    3870:	0a 94       	dec	r0
    3872:	e2 f7       	brpl	.-8      	; 0x386c <DIO_vwrite+0x94>
    3874:	84 2b       	or	r24, r20
    3876:	8c 93       	st	X, r24
    3878:	14 c0       	rjmp	.+40     	; 0x38a2 <DIO_vwrite+0xca>
		}else{
			CLR_BIT(PORTB,pinnumber);
    387a:	a8 e3       	ldi	r26, 0x38	; 56
    387c:	b0 e0       	ldi	r27, 0x00	; 0
    387e:	e8 e3       	ldi	r30, 0x38	; 56
    3880:	f0 e0       	ldi	r31, 0x00	; 0
    3882:	80 81       	ld	r24, Z
    3884:	48 2f       	mov	r20, r24
    3886:	8a 81       	ldd	r24, Y+2	; 0x02
    3888:	28 2f       	mov	r18, r24
    388a:	30 e0       	ldi	r19, 0x00	; 0
    388c:	81 e0       	ldi	r24, 0x01	; 1
    388e:	90 e0       	ldi	r25, 0x00	; 0
    3890:	02 2e       	mov	r0, r18
    3892:	02 c0       	rjmp	.+4      	; 0x3898 <DIO_vwrite+0xc0>
    3894:	88 0f       	add	r24, r24
    3896:	99 1f       	adc	r25, r25
    3898:	0a 94       	dec	r0
    389a:	e2 f7       	brpl	.-8      	; 0x3894 <DIO_vwrite+0xbc>
    389c:	80 95       	com	r24
    389e:	84 23       	and	r24, r20
    38a0:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='C')
    38a2:	89 81       	ldd	r24, Y+1	; 0x01
    38a4:	83 34       	cpi	r24, 0x43	; 67
    38a6:	59 f5       	brne	.+86     	; 0x38fe <DIO_vwrite+0x126>
	{
		if (outputvalue)
    38a8:	8b 81       	ldd	r24, Y+3	; 0x03
    38aa:	88 23       	and	r24, r24
    38ac:	a1 f0       	breq	.+40     	; 0x38d6 <DIO_vwrite+0xfe>
		{
			SET_BIT(PORTC,pinnumber);
    38ae:	a5 e3       	ldi	r26, 0x35	; 53
    38b0:	b0 e0       	ldi	r27, 0x00	; 0
    38b2:	e5 e3       	ldi	r30, 0x35	; 53
    38b4:	f0 e0       	ldi	r31, 0x00	; 0
    38b6:	80 81       	ld	r24, Z
    38b8:	48 2f       	mov	r20, r24
    38ba:	8a 81       	ldd	r24, Y+2	; 0x02
    38bc:	28 2f       	mov	r18, r24
    38be:	30 e0       	ldi	r19, 0x00	; 0
    38c0:	81 e0       	ldi	r24, 0x01	; 1
    38c2:	90 e0       	ldi	r25, 0x00	; 0
    38c4:	02 2e       	mov	r0, r18
    38c6:	02 c0       	rjmp	.+4      	; 0x38cc <DIO_vwrite+0xf4>
    38c8:	88 0f       	add	r24, r24
    38ca:	99 1f       	adc	r25, r25
    38cc:	0a 94       	dec	r0
    38ce:	e2 f7       	brpl	.-8      	; 0x38c8 <DIO_vwrite+0xf0>
    38d0:	84 2b       	or	r24, r20
    38d2:	8c 93       	st	X, r24
    38d4:	14 c0       	rjmp	.+40     	; 0x38fe <DIO_vwrite+0x126>
		}else{
			CLR_BIT(PORTC,pinnumber);
    38d6:	a5 e3       	ldi	r26, 0x35	; 53
    38d8:	b0 e0       	ldi	r27, 0x00	; 0
    38da:	e5 e3       	ldi	r30, 0x35	; 53
    38dc:	f0 e0       	ldi	r31, 0x00	; 0
    38de:	80 81       	ld	r24, Z
    38e0:	48 2f       	mov	r20, r24
    38e2:	8a 81       	ldd	r24, Y+2	; 0x02
    38e4:	28 2f       	mov	r18, r24
    38e6:	30 e0       	ldi	r19, 0x00	; 0
    38e8:	81 e0       	ldi	r24, 0x01	; 1
    38ea:	90 e0       	ldi	r25, 0x00	; 0
    38ec:	02 2e       	mov	r0, r18
    38ee:	02 c0       	rjmp	.+4      	; 0x38f4 <DIO_vwrite+0x11c>
    38f0:	88 0f       	add	r24, r24
    38f2:	99 1f       	adc	r25, r25
    38f4:	0a 94       	dec	r0
    38f6:	e2 f7       	brpl	.-8      	; 0x38f0 <DIO_vwrite+0x118>
    38f8:	80 95       	com	r24
    38fa:	84 23       	and	r24, r20
    38fc:	8c 93       	st	X, r24
		}
	}
	
	
	if (portname=='D')
    38fe:	89 81       	ldd	r24, Y+1	; 0x01
    3900:	84 34       	cpi	r24, 0x44	; 68
    3902:	59 f5       	brne	.+86     	; 0x395a <DIO_vwrite+0x182>
	{
		if (outputvalue)
    3904:	8b 81       	ldd	r24, Y+3	; 0x03
    3906:	88 23       	and	r24, r24
    3908:	a1 f0       	breq	.+40     	; 0x3932 <DIO_vwrite+0x15a>
		{
			SET_BIT(PORTD,pinnumber);
    390a:	a2 e3       	ldi	r26, 0x32	; 50
    390c:	b0 e0       	ldi	r27, 0x00	; 0
    390e:	e2 e3       	ldi	r30, 0x32	; 50
    3910:	f0 e0       	ldi	r31, 0x00	; 0
    3912:	80 81       	ld	r24, Z
    3914:	48 2f       	mov	r20, r24
    3916:	8a 81       	ldd	r24, Y+2	; 0x02
    3918:	28 2f       	mov	r18, r24
    391a:	30 e0       	ldi	r19, 0x00	; 0
    391c:	81 e0       	ldi	r24, 0x01	; 1
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	02 2e       	mov	r0, r18
    3922:	02 c0       	rjmp	.+4      	; 0x3928 <DIO_vwrite+0x150>
    3924:	88 0f       	add	r24, r24
    3926:	99 1f       	adc	r25, r25
    3928:	0a 94       	dec	r0
    392a:	e2 f7       	brpl	.-8      	; 0x3924 <DIO_vwrite+0x14c>
    392c:	84 2b       	or	r24, r20
    392e:	8c 93       	st	X, r24
    3930:	14 c0       	rjmp	.+40     	; 0x395a <DIO_vwrite+0x182>
		}else{
			CLR_BIT(PORTD,pinnumber);
    3932:	a2 e3       	ldi	r26, 0x32	; 50
    3934:	b0 e0       	ldi	r27, 0x00	; 0
    3936:	e2 e3       	ldi	r30, 0x32	; 50
    3938:	f0 e0       	ldi	r31, 0x00	; 0
    393a:	80 81       	ld	r24, Z
    393c:	48 2f       	mov	r20, r24
    393e:	8a 81       	ldd	r24, Y+2	; 0x02
    3940:	28 2f       	mov	r18, r24
    3942:	30 e0       	ldi	r19, 0x00	; 0
    3944:	81 e0       	ldi	r24, 0x01	; 1
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	02 2e       	mov	r0, r18
    394a:	02 c0       	rjmp	.+4      	; 0x3950 <DIO_vwrite+0x178>
    394c:	88 0f       	add	r24, r24
    394e:	99 1f       	adc	r25, r25
    3950:	0a 94       	dec	r0
    3952:	e2 f7       	brpl	.-8      	; 0x394c <DIO_vwrite+0x174>
    3954:	80 95       	com	r24
    3956:	84 23       	and	r24, r20
    3958:	8c 93       	st	X, r24
		}
	}
}
    395a:	0f 90       	pop	r0
    395c:	0f 90       	pop	r0
    395e:	0f 90       	pop	r0
    3960:	cf 91       	pop	r28
    3962:	df 91       	pop	r29
    3964:	08 95       	ret

00003966 <DIO_u8read>:


unsigned char DIO_u8read(unsigned char portname,unsigned char pinnumber){
    3966:	df 93       	push	r29
    3968:	cf 93       	push	r28
    396a:	00 d0       	rcall	.+0      	; 0x396c <DIO_u8read+0x6>
    396c:	0f 92       	push	r0
    396e:	cd b7       	in	r28, 0x3d	; 61
    3970:	de b7       	in	r29, 0x3e	; 62
    3972:	89 83       	std	Y+1, r24	; 0x01
    3974:	6a 83       	std	Y+2, r22	; 0x02
	
	if (portname=='A')
    3976:	89 81       	ldd	r24, Y+1	; 0x01
    3978:	81 34       	cpi	r24, 0x41	; 65
    397a:	f1 f4       	brne	.+60     	; 0x39b8 <DIO_u8read+0x52>
	{
		return READ_BIT(PINA,pinnumber);
    397c:	e9 e3       	ldi	r30, 0x39	; 57
    397e:	f0 e0       	ldi	r31, 0x00	; 0
    3980:	80 81       	ld	r24, Z
    3982:	48 2f       	mov	r20, r24
    3984:	50 e0       	ldi	r21, 0x00	; 0
    3986:	8a 81       	ldd	r24, Y+2	; 0x02
    3988:	28 2f       	mov	r18, r24
    398a:	30 e0       	ldi	r19, 0x00	; 0
    398c:	81 e0       	ldi	r24, 0x01	; 1
    398e:	90 e0       	ldi	r25, 0x00	; 0
    3990:	02 c0       	rjmp	.+4      	; 0x3996 <DIO_u8read+0x30>
    3992:	88 0f       	add	r24, r24
    3994:	99 1f       	adc	r25, r25
    3996:	2a 95       	dec	r18
    3998:	e2 f7       	brpl	.-8      	; 0x3992 <DIO_u8read+0x2c>
    399a:	9a 01       	movw	r18, r20
    399c:	28 23       	and	r18, r24
    399e:	39 23       	and	r19, r25
    39a0:	8a 81       	ldd	r24, Y+2	; 0x02
    39a2:	88 2f       	mov	r24, r24
    39a4:	90 e0       	ldi	r25, 0x00	; 0
    39a6:	a9 01       	movw	r20, r18
    39a8:	02 c0       	rjmp	.+4      	; 0x39ae <DIO_u8read+0x48>
    39aa:	55 95       	asr	r21
    39ac:	47 95       	ror	r20
    39ae:	8a 95       	dec	r24
    39b0:	e2 f7       	brpl	.-8      	; 0x39aa <DIO_u8read+0x44>
    39b2:	ca 01       	movw	r24, r20
    39b4:	8b 83       	std	Y+3, r24	; 0x03
    39b6:	64 c0       	rjmp	.+200    	; 0x3a80 <DIO_u8read+0x11a>
	}
	
	if (portname=='B')
    39b8:	89 81       	ldd	r24, Y+1	; 0x01
    39ba:	82 34       	cpi	r24, 0x42	; 66
    39bc:	f1 f4       	brne	.+60     	; 0x39fa <DIO_u8read+0x94>
	{
		return READ_BIT(PINB,pinnumber);
    39be:	e6 e3       	ldi	r30, 0x36	; 54
    39c0:	f0 e0       	ldi	r31, 0x00	; 0
    39c2:	80 81       	ld	r24, Z
    39c4:	48 2f       	mov	r20, r24
    39c6:	50 e0       	ldi	r21, 0x00	; 0
    39c8:	8a 81       	ldd	r24, Y+2	; 0x02
    39ca:	28 2f       	mov	r18, r24
    39cc:	30 e0       	ldi	r19, 0x00	; 0
    39ce:	81 e0       	ldi	r24, 0x01	; 1
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	02 c0       	rjmp	.+4      	; 0x39d8 <DIO_u8read+0x72>
    39d4:	88 0f       	add	r24, r24
    39d6:	99 1f       	adc	r25, r25
    39d8:	2a 95       	dec	r18
    39da:	e2 f7       	brpl	.-8      	; 0x39d4 <DIO_u8read+0x6e>
    39dc:	9a 01       	movw	r18, r20
    39de:	28 23       	and	r18, r24
    39e0:	39 23       	and	r19, r25
    39e2:	8a 81       	ldd	r24, Y+2	; 0x02
    39e4:	88 2f       	mov	r24, r24
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	a9 01       	movw	r20, r18
    39ea:	02 c0       	rjmp	.+4      	; 0x39f0 <DIO_u8read+0x8a>
    39ec:	55 95       	asr	r21
    39ee:	47 95       	ror	r20
    39f0:	8a 95       	dec	r24
    39f2:	e2 f7       	brpl	.-8      	; 0x39ec <DIO_u8read+0x86>
    39f4:	ca 01       	movw	r24, r20
    39f6:	8b 83       	std	Y+3, r24	; 0x03
    39f8:	43 c0       	rjmp	.+134    	; 0x3a80 <DIO_u8read+0x11a>
	}
	
	if (portname=='C')
    39fa:	89 81       	ldd	r24, Y+1	; 0x01
    39fc:	83 34       	cpi	r24, 0x43	; 67
    39fe:	f1 f4       	brne	.+60     	; 0x3a3c <DIO_u8read+0xd6>
	{
		return READ_BIT(PINC,pinnumber);
    3a00:	e3 e3       	ldi	r30, 0x33	; 51
    3a02:	f0 e0       	ldi	r31, 0x00	; 0
    3a04:	80 81       	ld	r24, Z
    3a06:	48 2f       	mov	r20, r24
    3a08:	50 e0       	ldi	r21, 0x00	; 0
    3a0a:	8a 81       	ldd	r24, Y+2	; 0x02
    3a0c:	28 2f       	mov	r18, r24
    3a0e:	30 e0       	ldi	r19, 0x00	; 0
    3a10:	81 e0       	ldi	r24, 0x01	; 1
    3a12:	90 e0       	ldi	r25, 0x00	; 0
    3a14:	02 c0       	rjmp	.+4      	; 0x3a1a <DIO_u8read+0xb4>
    3a16:	88 0f       	add	r24, r24
    3a18:	99 1f       	adc	r25, r25
    3a1a:	2a 95       	dec	r18
    3a1c:	e2 f7       	brpl	.-8      	; 0x3a16 <DIO_u8read+0xb0>
    3a1e:	9a 01       	movw	r18, r20
    3a20:	28 23       	and	r18, r24
    3a22:	39 23       	and	r19, r25
    3a24:	8a 81       	ldd	r24, Y+2	; 0x02
    3a26:	88 2f       	mov	r24, r24
    3a28:	90 e0       	ldi	r25, 0x00	; 0
    3a2a:	a9 01       	movw	r20, r18
    3a2c:	02 c0       	rjmp	.+4      	; 0x3a32 <DIO_u8read+0xcc>
    3a2e:	55 95       	asr	r21
    3a30:	47 95       	ror	r20
    3a32:	8a 95       	dec	r24
    3a34:	e2 f7       	brpl	.-8      	; 0x3a2e <DIO_u8read+0xc8>
    3a36:	ca 01       	movw	r24, r20
    3a38:	8b 83       	std	Y+3, r24	; 0x03
    3a3a:	22 c0       	rjmp	.+68     	; 0x3a80 <DIO_u8read+0x11a>
	}
	
	if (portname=='D')
    3a3c:	89 81       	ldd	r24, Y+1	; 0x01
    3a3e:	84 34       	cpi	r24, 0x44	; 68
    3a40:	f1 f4       	brne	.+60     	; 0x3a7e <DIO_u8read+0x118>
	{
		return READ_BIT(PIND,pinnumber);
    3a42:	e0 e3       	ldi	r30, 0x30	; 48
    3a44:	f0 e0       	ldi	r31, 0x00	; 0
    3a46:	80 81       	ld	r24, Z
    3a48:	48 2f       	mov	r20, r24
    3a4a:	50 e0       	ldi	r21, 0x00	; 0
    3a4c:	8a 81       	ldd	r24, Y+2	; 0x02
    3a4e:	28 2f       	mov	r18, r24
    3a50:	30 e0       	ldi	r19, 0x00	; 0
    3a52:	81 e0       	ldi	r24, 0x01	; 1
    3a54:	90 e0       	ldi	r25, 0x00	; 0
    3a56:	02 c0       	rjmp	.+4      	; 0x3a5c <DIO_u8read+0xf6>
    3a58:	88 0f       	add	r24, r24
    3a5a:	99 1f       	adc	r25, r25
    3a5c:	2a 95       	dec	r18
    3a5e:	e2 f7       	brpl	.-8      	; 0x3a58 <DIO_u8read+0xf2>
    3a60:	9a 01       	movw	r18, r20
    3a62:	28 23       	and	r18, r24
    3a64:	39 23       	and	r19, r25
    3a66:	8a 81       	ldd	r24, Y+2	; 0x02
    3a68:	88 2f       	mov	r24, r24
    3a6a:	90 e0       	ldi	r25, 0x00	; 0
    3a6c:	a9 01       	movw	r20, r18
    3a6e:	02 c0       	rjmp	.+4      	; 0x3a74 <DIO_u8read+0x10e>
    3a70:	55 95       	asr	r21
    3a72:	47 95       	ror	r20
    3a74:	8a 95       	dec	r24
    3a76:	e2 f7       	brpl	.-8      	; 0x3a70 <DIO_u8read+0x10a>
    3a78:	ca 01       	movw	r24, r20
    3a7a:	8b 83       	std	Y+3, r24	; 0x03
    3a7c:	01 c0       	rjmp	.+2      	; 0x3a80 <DIO_u8read+0x11a>
	}
	
	return 0;
    3a7e:	1b 82       	std	Y+3, r1	; 0x03
    3a80:	8b 81       	ldd	r24, Y+3	; 0x03
}
    3a82:	0f 90       	pop	r0
    3a84:	0f 90       	pop	r0
    3a86:	0f 90       	pop	r0
    3a88:	cf 91       	pop	r28
    3a8a:	df 91       	pop	r29
    3a8c:	08 95       	ret

00003a8e <DIO_vtoggle>:



void DIO_vtoggle(unsigned char portname,unsigned char pinnumber){
    3a8e:	df 93       	push	r29
    3a90:	cf 93       	push	r28
    3a92:	00 d0       	rcall	.+0      	; 0x3a94 <DIO_vtoggle+0x6>
    3a94:	cd b7       	in	r28, 0x3d	; 61
    3a96:	de b7       	in	r29, 0x3e	; 62
    3a98:	89 83       	std	Y+1, r24	; 0x01
    3a9a:	6a 83       	std	Y+2, r22	; 0x02
		if (portname=='A')
    3a9c:	89 81       	ldd	r24, Y+1	; 0x01
    3a9e:	81 34       	cpi	r24, 0x41	; 65
    3aa0:	99 f4       	brne	.+38     	; 0x3ac8 <DIO_vtoggle+0x3a>
		{
			TOG_BIT(PORTA,pinnumber);
    3aa2:	ab e3       	ldi	r26, 0x3B	; 59
    3aa4:	b0 e0       	ldi	r27, 0x00	; 0
    3aa6:	eb e3       	ldi	r30, 0x3B	; 59
    3aa8:	f0 e0       	ldi	r31, 0x00	; 0
    3aaa:	80 81       	ld	r24, Z
    3aac:	48 2f       	mov	r20, r24
    3aae:	8a 81       	ldd	r24, Y+2	; 0x02
    3ab0:	28 2f       	mov	r18, r24
    3ab2:	30 e0       	ldi	r19, 0x00	; 0
    3ab4:	81 e0       	ldi	r24, 0x01	; 1
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	02 2e       	mov	r0, r18
    3aba:	02 c0       	rjmp	.+4      	; 0x3ac0 <DIO_vtoggle+0x32>
    3abc:	88 0f       	add	r24, r24
    3abe:	99 1f       	adc	r25, r25
    3ac0:	0a 94       	dec	r0
    3ac2:	e2 f7       	brpl	.-8      	; 0x3abc <DIO_vtoggle+0x2e>
    3ac4:	84 27       	eor	r24, r20
    3ac6:	8c 93       	st	X, r24
		}
		
		if (portname=='B')
    3ac8:	89 81       	ldd	r24, Y+1	; 0x01
    3aca:	82 34       	cpi	r24, 0x42	; 66
    3acc:	99 f4       	brne	.+38     	; 0x3af4 <DIO_vtoggle+0x66>
		{
			TOG_BIT(PORTB,pinnumber);
    3ace:	a8 e3       	ldi	r26, 0x38	; 56
    3ad0:	b0 e0       	ldi	r27, 0x00	; 0
    3ad2:	e8 e3       	ldi	r30, 0x38	; 56
    3ad4:	f0 e0       	ldi	r31, 0x00	; 0
    3ad6:	80 81       	ld	r24, Z
    3ad8:	48 2f       	mov	r20, r24
    3ada:	8a 81       	ldd	r24, Y+2	; 0x02
    3adc:	28 2f       	mov	r18, r24
    3ade:	30 e0       	ldi	r19, 0x00	; 0
    3ae0:	81 e0       	ldi	r24, 0x01	; 1
    3ae2:	90 e0       	ldi	r25, 0x00	; 0
    3ae4:	02 2e       	mov	r0, r18
    3ae6:	02 c0       	rjmp	.+4      	; 0x3aec <DIO_vtoggle+0x5e>
    3ae8:	88 0f       	add	r24, r24
    3aea:	99 1f       	adc	r25, r25
    3aec:	0a 94       	dec	r0
    3aee:	e2 f7       	brpl	.-8      	; 0x3ae8 <DIO_vtoggle+0x5a>
    3af0:	84 27       	eor	r24, r20
    3af2:	8c 93       	st	X, r24
		}
		
		if (portname=='C')
    3af4:	89 81       	ldd	r24, Y+1	; 0x01
    3af6:	83 34       	cpi	r24, 0x43	; 67
    3af8:	99 f4       	brne	.+38     	; 0x3b20 <DIO_vtoggle+0x92>
		{
			TOG_BIT(PORTC,pinnumber);
    3afa:	a5 e3       	ldi	r26, 0x35	; 53
    3afc:	b0 e0       	ldi	r27, 0x00	; 0
    3afe:	e5 e3       	ldi	r30, 0x35	; 53
    3b00:	f0 e0       	ldi	r31, 0x00	; 0
    3b02:	80 81       	ld	r24, Z
    3b04:	48 2f       	mov	r20, r24
    3b06:	8a 81       	ldd	r24, Y+2	; 0x02
    3b08:	28 2f       	mov	r18, r24
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	81 e0       	ldi	r24, 0x01	; 1
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	02 2e       	mov	r0, r18
    3b12:	02 c0       	rjmp	.+4      	; 0x3b18 <DIO_vtoggle+0x8a>
    3b14:	88 0f       	add	r24, r24
    3b16:	99 1f       	adc	r25, r25
    3b18:	0a 94       	dec	r0
    3b1a:	e2 f7       	brpl	.-8      	; 0x3b14 <DIO_vtoggle+0x86>
    3b1c:	84 27       	eor	r24, r20
    3b1e:	8c 93       	st	X, r24
		}
		
		if (portname=='D')
    3b20:	89 81       	ldd	r24, Y+1	; 0x01
    3b22:	84 34       	cpi	r24, 0x44	; 68
    3b24:	99 f4       	brne	.+38     	; 0x3b4c <DIO_vtoggle+0xbe>
		{
			TOG_BIT(PORTD,pinnumber);
    3b26:	a2 e3       	ldi	r26, 0x32	; 50
    3b28:	b0 e0       	ldi	r27, 0x00	; 0
    3b2a:	e2 e3       	ldi	r30, 0x32	; 50
    3b2c:	f0 e0       	ldi	r31, 0x00	; 0
    3b2e:	80 81       	ld	r24, Z
    3b30:	48 2f       	mov	r20, r24
    3b32:	8a 81       	ldd	r24, Y+2	; 0x02
    3b34:	28 2f       	mov	r18, r24
    3b36:	30 e0       	ldi	r19, 0x00	; 0
    3b38:	81 e0       	ldi	r24, 0x01	; 1
    3b3a:	90 e0       	ldi	r25, 0x00	; 0
    3b3c:	02 2e       	mov	r0, r18
    3b3e:	02 c0       	rjmp	.+4      	; 0x3b44 <DIO_vtoggle+0xb6>
    3b40:	88 0f       	add	r24, r24
    3b42:	99 1f       	adc	r25, r25
    3b44:	0a 94       	dec	r0
    3b46:	e2 f7       	brpl	.-8      	; 0x3b40 <DIO_vtoggle+0xb2>
    3b48:	84 27       	eor	r24, r20
    3b4a:	8c 93       	st	X, r24
		}
}
    3b4c:	0f 90       	pop	r0
    3b4e:	0f 90       	pop	r0
    3b50:	cf 91       	pop	r28
    3b52:	df 91       	pop	r29
    3b54:	08 95       	ret

00003b56 <DIO_vset_port_direction>:

void DIO_vset_port_direction(unsigned char portname,unsigned char direction){
    3b56:	df 93       	push	r29
    3b58:	cf 93       	push	r28
    3b5a:	00 d0       	rcall	.+0      	; 0x3b5c <DIO_vset_port_direction+0x6>
    3b5c:	cd b7       	in	r28, 0x3d	; 61
    3b5e:	de b7       	in	r29, 0x3e	; 62
    3b60:	89 83       	std	Y+1, r24	; 0x01
    3b62:	6a 83       	std	Y+2, r22	; 0x02
	
			if (portname=='A')
    3b64:	89 81       	ldd	r24, Y+1	; 0x01
    3b66:	81 34       	cpi	r24, 0x41	; 65
    3b68:	21 f4       	brne	.+8      	; 0x3b72 <DIO_vset_port_direction+0x1c>
			{
				DDRA=direction;
    3b6a:	ea e3       	ldi	r30, 0x3A	; 58
    3b6c:	f0 e0       	ldi	r31, 0x00	; 0
    3b6e:	8a 81       	ldd	r24, Y+2	; 0x02
    3b70:	80 83       	st	Z, r24
			}			
			if (portname=='B')
    3b72:	89 81       	ldd	r24, Y+1	; 0x01
    3b74:	82 34       	cpi	r24, 0x42	; 66
    3b76:	21 f4       	brne	.+8      	; 0x3b80 <DIO_vset_port_direction+0x2a>
			{
				DDRB=direction;
    3b78:	e7 e3       	ldi	r30, 0x37	; 55
    3b7a:	f0 e0       	ldi	r31, 0x00	; 0
    3b7c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b7e:	80 83       	st	Z, r24
			}
			
			if (portname=='C')
    3b80:	89 81       	ldd	r24, Y+1	; 0x01
    3b82:	83 34       	cpi	r24, 0x43	; 67
    3b84:	21 f4       	brne	.+8      	; 0x3b8e <DIO_vset_port_direction+0x38>
			{
				DDRC=direction;
    3b86:	e4 e3       	ldi	r30, 0x34	; 52
    3b88:	f0 e0       	ldi	r31, 0x00	; 0
    3b8a:	8a 81       	ldd	r24, Y+2	; 0x02
    3b8c:	80 83       	st	Z, r24
			}
			
			if (portname=='D')
    3b8e:	89 81       	ldd	r24, Y+1	; 0x01
    3b90:	84 34       	cpi	r24, 0x44	; 68
    3b92:	21 f4       	brne	.+8      	; 0x3b9c <DIO_vset_port_direction+0x46>
			{
				DDRD=direction;
    3b94:	e1 e3       	ldi	r30, 0x31	; 49
    3b96:	f0 e0       	ldi	r31, 0x00	; 0
    3b98:	8a 81       	ldd	r24, Y+2	; 0x02
    3b9a:	80 83       	st	Z, r24
			}
}
    3b9c:	0f 90       	pop	r0
    3b9e:	0f 90       	pop	r0
    3ba0:	cf 91       	pop	r28
    3ba2:	df 91       	pop	r29
    3ba4:	08 95       	ret

00003ba6 <DIO_vwrite_port>:

void DIO_vwrite_port(unsigned char portname,unsigned char portvalue){
    3ba6:	df 93       	push	r29
    3ba8:	cf 93       	push	r28
    3baa:	00 d0       	rcall	.+0      	; 0x3bac <DIO_vwrite_port+0x6>
    3bac:	cd b7       	in	r28, 0x3d	; 61
    3bae:	de b7       	in	r29, 0x3e	; 62
    3bb0:	89 83       	std	Y+1, r24	; 0x01
    3bb2:	6a 83       	std	Y+2, r22	; 0x02
			if (portname=='A')
    3bb4:	89 81       	ldd	r24, Y+1	; 0x01
    3bb6:	81 34       	cpi	r24, 0x41	; 65
    3bb8:	21 f4       	brne	.+8      	; 0x3bc2 <DIO_vwrite_port+0x1c>
			{
				PORTA=portvalue;
    3bba:	eb e3       	ldi	r30, 0x3B	; 59
    3bbc:	f0 e0       	ldi	r31, 0x00	; 0
    3bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    3bc0:	80 83       	st	Z, r24
			}
			if (portname=='B')
    3bc2:	89 81       	ldd	r24, Y+1	; 0x01
    3bc4:	82 34       	cpi	r24, 0x42	; 66
    3bc6:	21 f4       	brne	.+8      	; 0x3bd0 <DIO_vwrite_port+0x2a>
			{
				PORTB=portvalue;
    3bc8:	e8 e3       	ldi	r30, 0x38	; 56
    3bca:	f0 e0       	ldi	r31, 0x00	; 0
    3bcc:	8a 81       	ldd	r24, Y+2	; 0x02
    3bce:	80 83       	st	Z, r24
			}
			
			if (portname=='C')
    3bd0:	89 81       	ldd	r24, Y+1	; 0x01
    3bd2:	83 34       	cpi	r24, 0x43	; 67
    3bd4:	21 f4       	brne	.+8      	; 0x3bde <DIO_vwrite_port+0x38>
			{
				PORTC=portvalue;
    3bd6:	e5 e3       	ldi	r30, 0x35	; 53
    3bd8:	f0 e0       	ldi	r31, 0x00	; 0
    3bda:	8a 81       	ldd	r24, Y+2	; 0x02
    3bdc:	80 83       	st	Z, r24
			}
			
			if (portname=='D')
    3bde:	89 81       	ldd	r24, Y+1	; 0x01
    3be0:	84 34       	cpi	r24, 0x44	; 68
    3be2:	21 f4       	brne	.+8      	; 0x3bec <DIO_vwrite_port+0x46>
			{
				PORTD=portvalue;
    3be4:	e2 e3       	ldi	r30, 0x32	; 50
    3be6:	f0 e0       	ldi	r31, 0x00	; 0
    3be8:	8a 81       	ldd	r24, Y+2	; 0x02
    3bea:	80 83       	st	Z, r24
			}
}
    3bec:	0f 90       	pop	r0
    3bee:	0f 90       	pop	r0
    3bf0:	cf 91       	pop	r28
    3bf2:	df 91       	pop	r29
    3bf4:	08 95       	ret

00003bf6 <DIO_u8read_port>:




unsigned char DIO_u8read_port(unsigned char portname){
    3bf6:	df 93       	push	r29
    3bf8:	cf 93       	push	r28
    3bfa:	00 d0       	rcall	.+0      	; 0x3bfc <DIO_u8read_port+0x6>
    3bfc:	0f 92       	push	r0
    3bfe:	cd b7       	in	r28, 0x3d	; 61
    3c00:	de b7       	in	r29, 0x3e	; 62
    3c02:	89 83       	std	Y+1, r24	; 0x01
	
			if (portname=='A')
    3c04:	89 81       	ldd	r24, Y+1	; 0x01
    3c06:	81 34       	cpi	r24, 0x41	; 65
    3c08:	29 f4       	brne	.+10     	; 0x3c14 <DIO_u8read_port+0x1e>
			{
				return PINA;
    3c0a:	e9 e3       	ldi	r30, 0x39	; 57
    3c0c:	f0 e0       	ldi	r31, 0x00	; 0
    3c0e:	80 81       	ld	r24, Z
    3c10:	8a 83       	std	Y+2, r24	; 0x02
    3c12:	19 c0       	rjmp	.+50     	; 0x3c46 <DIO_u8read_port+0x50>
			}
			if (portname=='B')
    3c14:	89 81       	ldd	r24, Y+1	; 0x01
    3c16:	82 34       	cpi	r24, 0x42	; 66
    3c18:	29 f4       	brne	.+10     	; 0x3c24 <DIO_u8read_port+0x2e>
			{
				return PINB;
    3c1a:	e6 e3       	ldi	r30, 0x36	; 54
    3c1c:	f0 e0       	ldi	r31, 0x00	; 0
    3c1e:	80 81       	ld	r24, Z
    3c20:	8a 83       	std	Y+2, r24	; 0x02
    3c22:	11 c0       	rjmp	.+34     	; 0x3c46 <DIO_u8read_port+0x50>
			}
			
			if (portname=='C')
    3c24:	89 81       	ldd	r24, Y+1	; 0x01
    3c26:	83 34       	cpi	r24, 0x43	; 67
    3c28:	29 f4       	brne	.+10     	; 0x3c34 <DIO_u8read_port+0x3e>
			{
				return PINB;
    3c2a:	e6 e3       	ldi	r30, 0x36	; 54
    3c2c:	f0 e0       	ldi	r31, 0x00	; 0
    3c2e:	80 81       	ld	r24, Z
    3c30:	8a 83       	std	Y+2, r24	; 0x02
    3c32:	09 c0       	rjmp	.+18     	; 0x3c46 <DIO_u8read_port+0x50>
			}
			
			if (portname=='D')
    3c34:	89 81       	ldd	r24, Y+1	; 0x01
    3c36:	84 34       	cpi	r24, 0x44	; 68
    3c38:	29 f4       	brne	.+10     	; 0x3c44 <DIO_u8read_port+0x4e>
			{
				return PIND;
    3c3a:	e0 e3       	ldi	r30, 0x30	; 48
    3c3c:	f0 e0       	ldi	r31, 0x00	; 0
    3c3e:	80 81       	ld	r24, Z
    3c40:	8a 83       	std	Y+2, r24	; 0x02
    3c42:	01 c0       	rjmp	.+2      	; 0x3c46 <DIO_u8read_port+0x50>
    3c44:	02 c0       	rjmp	.+4      	; 0x3c4a <DIO_u8read_port+0x54>
			}
}
    3c46:	8a 81       	ldd	r24, Y+2	; 0x02
    3c48:	8b 83       	std	Y+3, r24	; 0x03
    3c4a:	8b 81       	ldd	r24, Y+3	; 0x03
    3c4c:	0f 90       	pop	r0
    3c4e:	0f 90       	pop	r0
    3c50:	0f 90       	pop	r0
    3c52:	cf 91       	pop	r28
    3c54:	df 91       	pop	r29
    3c56:	08 95       	ret

00003c58 <DIO_vconnectpullup>:



void DIO_vconnectpullup(char portname ,char pinnumber, char connect_pullup)
{
    3c58:	df 93       	push	r29
    3c5a:	cf 93       	push	r28
    3c5c:	00 d0       	rcall	.+0      	; 0x3c5e <DIO_vconnectpullup+0x6>
    3c5e:	00 d0       	rcall	.+0      	; 0x3c60 <DIO_vconnectpullup+0x8>
    3c60:	0f 92       	push	r0
    3c62:	cd b7       	in	r28, 0x3d	; 61
    3c64:	de b7       	in	r29, 0x3e	; 62
    3c66:	89 83       	std	Y+1, r24	; 0x01
    3c68:	6a 83       	std	Y+2, r22	; 0x02
    3c6a:	4b 83       	std	Y+3, r20	; 0x03
	switch(portname)
    3c6c:	89 81       	ldd	r24, Y+1	; 0x01
    3c6e:	28 2f       	mov	r18, r24
    3c70:	30 e0       	ldi	r19, 0x00	; 0
    3c72:	3d 83       	std	Y+5, r19	; 0x05
    3c74:	2c 83       	std	Y+4, r18	; 0x04
    3c76:	8c 81       	ldd	r24, Y+4	; 0x04
    3c78:	9d 81       	ldd	r25, Y+5	; 0x05
    3c7a:	82 34       	cpi	r24, 0x42	; 66
    3c7c:	91 05       	cpc	r25, r1
    3c7e:	09 f4       	brne	.+2      	; 0x3c82 <DIO_vconnectpullup+0x2a>
    3c80:	44 c0       	rjmp	.+136    	; 0x3d0a <DIO_vconnectpullup+0xb2>
    3c82:	2c 81       	ldd	r18, Y+4	; 0x04
    3c84:	3d 81       	ldd	r19, Y+5	; 0x05
    3c86:	23 34       	cpi	r18, 0x43	; 67
    3c88:	31 05       	cpc	r19, r1
    3c8a:	34 f4       	brge	.+12     	; 0x3c98 <DIO_vconnectpullup+0x40>
    3c8c:	8c 81       	ldd	r24, Y+4	; 0x04
    3c8e:	9d 81       	ldd	r25, Y+5	; 0x05
    3c90:	81 34       	cpi	r24, 0x41	; 65
    3c92:	91 05       	cpc	r25, r1
    3c94:	71 f0       	breq	.+28     	; 0x3cb2 <DIO_vconnectpullup+0x5a>
    3c96:	bc c0       	rjmp	.+376    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
    3c98:	2c 81       	ldd	r18, Y+4	; 0x04
    3c9a:	3d 81       	ldd	r19, Y+5	; 0x05
    3c9c:	23 34       	cpi	r18, 0x43	; 67
    3c9e:	31 05       	cpc	r19, r1
    3ca0:	09 f4       	brne	.+2      	; 0x3ca4 <DIO_vconnectpullup+0x4c>
    3ca2:	5f c0       	rjmp	.+190    	; 0x3d62 <DIO_vconnectpullup+0x10a>
    3ca4:	8c 81       	ldd	r24, Y+4	; 0x04
    3ca6:	9d 81       	ldd	r25, Y+5	; 0x05
    3ca8:	84 34       	cpi	r24, 0x44	; 68
    3caa:	91 05       	cpc	r25, r1
    3cac:	09 f4       	brne	.+2      	; 0x3cb0 <DIO_vconnectpullup+0x58>
    3cae:	85 c0       	rjmp	.+266    	; 0x3dba <DIO_vconnectpullup+0x162>
    3cb0:	af c0       	rjmp	.+350    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
	{
		case 'A':
		if(connect_pullup==1)
    3cb2:	8b 81       	ldd	r24, Y+3	; 0x03
    3cb4:	81 30       	cpi	r24, 0x01	; 1
    3cb6:	a1 f4       	brne	.+40     	; 0x3ce0 <DIO_vconnectpullup+0x88>
		{
			SET_BIT(PORTA,pinnumber);
    3cb8:	ab e3       	ldi	r26, 0x3B	; 59
    3cba:	b0 e0       	ldi	r27, 0x00	; 0
    3cbc:	eb e3       	ldi	r30, 0x3B	; 59
    3cbe:	f0 e0       	ldi	r31, 0x00	; 0
    3cc0:	80 81       	ld	r24, Z
    3cc2:	48 2f       	mov	r20, r24
    3cc4:	8a 81       	ldd	r24, Y+2	; 0x02
    3cc6:	28 2f       	mov	r18, r24
    3cc8:	30 e0       	ldi	r19, 0x00	; 0
    3cca:	81 e0       	ldi	r24, 0x01	; 1
    3ccc:	90 e0       	ldi	r25, 0x00	; 0
    3cce:	02 2e       	mov	r0, r18
    3cd0:	02 c0       	rjmp	.+4      	; 0x3cd6 <DIO_vconnectpullup+0x7e>
    3cd2:	88 0f       	add	r24, r24
    3cd4:	99 1f       	adc	r25, r25
    3cd6:	0a 94       	dec	r0
    3cd8:	e2 f7       	brpl	.-8      	; 0x3cd2 <DIO_vconnectpullup+0x7a>
    3cda:	84 2b       	or	r24, r20
    3cdc:	8c 93       	st	X, r24
    3cde:	98 c0       	rjmp	.+304    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
		}
		else
		{
			CLR_BIT(PORTA,pinnumber);
    3ce0:	ab e3       	ldi	r26, 0x3B	; 59
    3ce2:	b0 e0       	ldi	r27, 0x00	; 0
    3ce4:	eb e3       	ldi	r30, 0x3B	; 59
    3ce6:	f0 e0       	ldi	r31, 0x00	; 0
    3ce8:	80 81       	ld	r24, Z
    3cea:	48 2f       	mov	r20, r24
    3cec:	8a 81       	ldd	r24, Y+2	; 0x02
    3cee:	28 2f       	mov	r18, r24
    3cf0:	30 e0       	ldi	r19, 0x00	; 0
    3cf2:	81 e0       	ldi	r24, 0x01	; 1
    3cf4:	90 e0       	ldi	r25, 0x00	; 0
    3cf6:	02 2e       	mov	r0, r18
    3cf8:	02 c0       	rjmp	.+4      	; 0x3cfe <DIO_vconnectpullup+0xa6>
    3cfa:	88 0f       	add	r24, r24
    3cfc:	99 1f       	adc	r25, r25
    3cfe:	0a 94       	dec	r0
    3d00:	e2 f7       	brpl	.-8      	; 0x3cfa <DIO_vconnectpullup+0xa2>
    3d02:	80 95       	com	r24
    3d04:	84 23       	and	r24, r20
    3d06:	8c 93       	st	X, r24
    3d08:	83 c0       	rjmp	.+262    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'B':
		if(connect_pullup==1)
    3d0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d0c:	81 30       	cpi	r24, 0x01	; 1
    3d0e:	a1 f4       	brne	.+40     	; 0x3d38 <DIO_vconnectpullup+0xe0>
		{
			SET_BIT(PORTB,pinnumber);
    3d10:	a8 e3       	ldi	r26, 0x38	; 56
    3d12:	b0 e0       	ldi	r27, 0x00	; 0
    3d14:	e8 e3       	ldi	r30, 0x38	; 56
    3d16:	f0 e0       	ldi	r31, 0x00	; 0
    3d18:	80 81       	ld	r24, Z
    3d1a:	48 2f       	mov	r20, r24
    3d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d1e:	28 2f       	mov	r18, r24
    3d20:	30 e0       	ldi	r19, 0x00	; 0
    3d22:	81 e0       	ldi	r24, 0x01	; 1
    3d24:	90 e0       	ldi	r25, 0x00	; 0
    3d26:	02 2e       	mov	r0, r18
    3d28:	02 c0       	rjmp	.+4      	; 0x3d2e <DIO_vconnectpullup+0xd6>
    3d2a:	88 0f       	add	r24, r24
    3d2c:	99 1f       	adc	r25, r25
    3d2e:	0a 94       	dec	r0
    3d30:	e2 f7       	brpl	.-8      	; 0x3d2a <DIO_vconnectpullup+0xd2>
    3d32:	84 2b       	or	r24, r20
    3d34:	8c 93       	st	X, r24
    3d36:	6c c0       	rjmp	.+216    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
		}
		else
		{
			CLR_BIT(PORTB,pinnumber);
    3d38:	a8 e3       	ldi	r26, 0x38	; 56
    3d3a:	b0 e0       	ldi	r27, 0x00	; 0
    3d3c:	e8 e3       	ldi	r30, 0x38	; 56
    3d3e:	f0 e0       	ldi	r31, 0x00	; 0
    3d40:	80 81       	ld	r24, Z
    3d42:	48 2f       	mov	r20, r24
    3d44:	8a 81       	ldd	r24, Y+2	; 0x02
    3d46:	28 2f       	mov	r18, r24
    3d48:	30 e0       	ldi	r19, 0x00	; 0
    3d4a:	81 e0       	ldi	r24, 0x01	; 1
    3d4c:	90 e0       	ldi	r25, 0x00	; 0
    3d4e:	02 2e       	mov	r0, r18
    3d50:	02 c0       	rjmp	.+4      	; 0x3d56 <DIO_vconnectpullup+0xfe>
    3d52:	88 0f       	add	r24, r24
    3d54:	99 1f       	adc	r25, r25
    3d56:	0a 94       	dec	r0
    3d58:	e2 f7       	brpl	.-8      	; 0x3d52 <DIO_vconnectpullup+0xfa>
    3d5a:	80 95       	com	r24
    3d5c:	84 23       	and	r24, r20
    3d5e:	8c 93       	st	X, r24
    3d60:	57 c0       	rjmp	.+174    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'C':
		if(connect_pullup==1)
    3d62:	8b 81       	ldd	r24, Y+3	; 0x03
    3d64:	81 30       	cpi	r24, 0x01	; 1
    3d66:	a1 f4       	brne	.+40     	; 0x3d90 <DIO_vconnectpullup+0x138>
		{
			SET_BIT(PORTC,pinnumber);
    3d68:	a5 e3       	ldi	r26, 0x35	; 53
    3d6a:	b0 e0       	ldi	r27, 0x00	; 0
    3d6c:	e5 e3       	ldi	r30, 0x35	; 53
    3d6e:	f0 e0       	ldi	r31, 0x00	; 0
    3d70:	80 81       	ld	r24, Z
    3d72:	48 2f       	mov	r20, r24
    3d74:	8a 81       	ldd	r24, Y+2	; 0x02
    3d76:	28 2f       	mov	r18, r24
    3d78:	30 e0       	ldi	r19, 0x00	; 0
    3d7a:	81 e0       	ldi	r24, 0x01	; 1
    3d7c:	90 e0       	ldi	r25, 0x00	; 0
    3d7e:	02 2e       	mov	r0, r18
    3d80:	02 c0       	rjmp	.+4      	; 0x3d86 <DIO_vconnectpullup+0x12e>
    3d82:	88 0f       	add	r24, r24
    3d84:	99 1f       	adc	r25, r25
    3d86:	0a 94       	dec	r0
    3d88:	e2 f7       	brpl	.-8      	; 0x3d82 <DIO_vconnectpullup+0x12a>
    3d8a:	84 2b       	or	r24, r20
    3d8c:	8c 93       	st	X, r24
    3d8e:	40 c0       	rjmp	.+128    	; 0x3e10 <DIO_vconnectpullup+0x1b8>
			
		}
		else
		{
			CLR_BIT(PORTC,pinnumber);
    3d90:	a5 e3       	ldi	r26, 0x35	; 53
    3d92:	b0 e0       	ldi	r27, 0x00	; 0
    3d94:	e5 e3       	ldi	r30, 0x35	; 53
    3d96:	f0 e0       	ldi	r31, 0x00	; 0
    3d98:	80 81       	ld	r24, Z
    3d9a:	48 2f       	mov	r20, r24
    3d9c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d9e:	28 2f       	mov	r18, r24
    3da0:	30 e0       	ldi	r19, 0x00	; 0
    3da2:	81 e0       	ldi	r24, 0x01	; 1
    3da4:	90 e0       	ldi	r25, 0x00	; 0
    3da6:	02 2e       	mov	r0, r18
    3da8:	02 c0       	rjmp	.+4      	; 0x3dae <DIO_vconnectpullup+0x156>
    3daa:	88 0f       	add	r24, r24
    3dac:	99 1f       	adc	r25, r25
    3dae:	0a 94       	dec	r0
    3db0:	e2 f7       	brpl	.-8      	; 0x3daa <DIO_vconnectpullup+0x152>
    3db2:	80 95       	com	r24
    3db4:	84 23       	and	r24, r20
    3db6:	8c 93       	st	X, r24
    3db8:	2b c0       	rjmp	.+86     	; 0x3e10 <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'D':
		if(connect_pullup==1)
    3dba:	8b 81       	ldd	r24, Y+3	; 0x03
    3dbc:	81 30       	cpi	r24, 0x01	; 1
    3dbe:	a1 f4       	brne	.+40     	; 0x3de8 <DIO_vconnectpullup+0x190>
		{
			SET_BIT(PORTD,pinnumber);
    3dc0:	a2 e3       	ldi	r26, 0x32	; 50
    3dc2:	b0 e0       	ldi	r27, 0x00	; 0
    3dc4:	e2 e3       	ldi	r30, 0x32	; 50
    3dc6:	f0 e0       	ldi	r31, 0x00	; 0
    3dc8:	80 81       	ld	r24, Z
    3dca:	48 2f       	mov	r20, r24
    3dcc:	8a 81       	ldd	r24, Y+2	; 0x02
    3dce:	28 2f       	mov	r18, r24
    3dd0:	30 e0       	ldi	r19, 0x00	; 0
    3dd2:	81 e0       	ldi	r24, 0x01	; 1
    3dd4:	90 e0       	ldi	r25, 0x00	; 0
    3dd6:	02 2e       	mov	r0, r18
    3dd8:	02 c0       	rjmp	.+4      	; 0x3dde <DIO_vconnectpullup+0x186>
    3dda:	88 0f       	add	r24, r24
    3ddc:	99 1f       	adc	r25, r25
    3dde:	0a 94       	dec	r0
    3de0:	e2 f7       	brpl	.-8      	; 0x3dda <DIO_vconnectpullup+0x182>
    3de2:	84 2b       	or	r24, r20
    3de4:	8c 93       	st	X, r24
    3de6:	14 c0       	rjmp	.+40     	; 0x3e10 <DIO_vconnectpullup+0x1b8>
			
		}
		else
		{
			CLR_BIT(PORTD,pinnumber);
    3de8:	a2 e3       	ldi	r26, 0x32	; 50
    3dea:	b0 e0       	ldi	r27, 0x00	; 0
    3dec:	e2 e3       	ldi	r30, 0x32	; 50
    3dee:	f0 e0       	ldi	r31, 0x00	; 0
    3df0:	80 81       	ld	r24, Z
    3df2:	48 2f       	mov	r20, r24
    3df4:	8a 81       	ldd	r24, Y+2	; 0x02
    3df6:	28 2f       	mov	r18, r24
    3df8:	30 e0       	ldi	r19, 0x00	; 0
    3dfa:	81 e0       	ldi	r24, 0x01	; 1
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	02 2e       	mov	r0, r18
    3e00:	02 c0       	rjmp	.+4      	; 0x3e06 <DIO_vconnectpullup+0x1ae>
    3e02:	88 0f       	add	r24, r24
    3e04:	99 1f       	adc	r25, r25
    3e06:	0a 94       	dec	r0
    3e08:	e2 f7       	brpl	.-8      	; 0x3e02 <DIO_vconnectpullup+0x1aa>
    3e0a:	80 95       	com	r24
    3e0c:	84 23       	and	r24, r20
    3e0e:	8c 93       	st	X, r24
		}
		break;
		
	}
}
    3e10:	0f 90       	pop	r0
    3e12:	0f 90       	pop	r0
    3e14:	0f 90       	pop	r0
    3e16:	0f 90       	pop	r0
    3e18:	0f 90       	pop	r0
    3e1a:	cf 91       	pop	r28
    3e1c:	df 91       	pop	r29
    3e1e:	08 95       	ret

00003e20 <DIO_vpin_output>:



void DIO_vpin_output(char portname,char pinnumber){
    3e20:	df 93       	push	r29
    3e22:	cf 93       	push	r28
    3e24:	00 d0       	rcall	.+0      	; 0x3e26 <DIO_vpin_output+0x6>
    3e26:	cd b7       	in	r28, 0x3d	; 61
    3e28:	de b7       	in	r29, 0x3e	; 62
    3e2a:	89 83       	std	Y+1, r24	; 0x01
    3e2c:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vsetPINDir(portname,pinnumber,1);
    3e2e:	89 81       	ldd	r24, Y+1	; 0x01
    3e30:	6a 81       	ldd	r22, Y+2	; 0x02
    3e32:	41 e0       	ldi	r20, 0x01	; 1
    3e34:	0e 94 25 1b 	call	0x364a	; 0x364a <DIO_vsetPINDir>
}
    3e38:	0f 90       	pop	r0
    3e3a:	0f 90       	pop	r0
    3e3c:	cf 91       	pop	r28
    3e3e:	df 91       	pop	r29
    3e40:	08 95       	ret

00003e42 <DIO_vpin_input>:

void DIO_vpin_input(char portname,char pinnumber){
    3e42:	df 93       	push	r29
    3e44:	cf 93       	push	r28
    3e46:	00 d0       	rcall	.+0      	; 0x3e48 <DIO_vpin_input+0x6>
    3e48:	cd b7       	in	r28, 0x3d	; 61
    3e4a:	de b7       	in	r29, 0x3e	; 62
    3e4c:	89 83       	std	Y+1, r24	; 0x01
    3e4e:	6a 83       	std	Y+2, r22	; 0x02
		DIO_vsetPINDir(portname,pinnumber,0);
    3e50:	89 81       	ldd	r24, Y+1	; 0x01
    3e52:	6a 81       	ldd	r22, Y+2	; 0x02
    3e54:	40 e0       	ldi	r20, 0x00	; 0
    3e56:	0e 94 25 1b 	call	0x364a	; 0x364a <DIO_vsetPINDir>
}
    3e5a:	0f 90       	pop	r0
    3e5c:	0f 90       	pop	r0
    3e5e:	cf 91       	pop	r28
    3e60:	df 91       	pop	r29
    3e62:	08 95       	ret

00003e64 <write_low_nibble>:

void write_low_nibble(unsigned char portname,unsigned char value)
{
    3e64:	df 93       	push	r29
    3e66:	cf 93       	push	r28
    3e68:	00 d0       	rcall	.+0      	; 0x3e6a <write_low_nibble+0x6>
    3e6a:	00 d0       	rcall	.+0      	; 0x3e6c <write_low_nibble+0x8>
    3e6c:	cd b7       	in	r28, 0x3d	; 61
    3e6e:	de b7       	in	r29, 0x3e	; 62
    3e70:	89 83       	std	Y+1, r24	; 0x01
    3e72:	6a 83       	std	Y+2, r22	; 0x02
	value&=0x0f;
    3e74:	8a 81       	ldd	r24, Y+2	; 0x02
    3e76:	8f 70       	andi	r24, 0x0F	; 15
    3e78:	8a 83       	std	Y+2, r24	; 0x02
	switch(portname)
    3e7a:	89 81       	ldd	r24, Y+1	; 0x01
    3e7c:	28 2f       	mov	r18, r24
    3e7e:	30 e0       	ldi	r19, 0x00	; 0
    3e80:	3c 83       	std	Y+4, r19	; 0x04
    3e82:	2b 83       	std	Y+3, r18	; 0x03
    3e84:	8b 81       	ldd	r24, Y+3	; 0x03
    3e86:	9c 81       	ldd	r25, Y+4	; 0x04
    3e88:	82 34       	cpi	r24, 0x42	; 66
    3e8a:	91 05       	cpc	r25, r1
    3e8c:	29 f1       	breq	.+74     	; 0x3ed8 <write_low_nibble+0x74>
    3e8e:	2b 81       	ldd	r18, Y+3	; 0x03
    3e90:	3c 81       	ldd	r19, Y+4	; 0x04
    3e92:	23 34       	cpi	r18, 0x43	; 67
    3e94:	31 05       	cpc	r19, r1
    3e96:	34 f4       	brge	.+12     	; 0x3ea4 <write_low_nibble+0x40>
    3e98:	8b 81       	ldd	r24, Y+3	; 0x03
    3e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e9c:	81 34       	cpi	r24, 0x41	; 65
    3e9e:	91 05       	cpc	r25, r1
    3ea0:	61 f0       	breq	.+24     	; 0x3eba <write_low_nibble+0x56>
    3ea2:	47 c0       	rjmp	.+142    	; 0x3f32 <write_low_nibble+0xce>
    3ea4:	2b 81       	ldd	r18, Y+3	; 0x03
    3ea6:	3c 81       	ldd	r19, Y+4	; 0x04
    3ea8:	23 34       	cpi	r18, 0x43	; 67
    3eaa:	31 05       	cpc	r19, r1
    3eac:	21 f1       	breq	.+72     	; 0x3ef6 <write_low_nibble+0x92>
    3eae:	8b 81       	ldd	r24, Y+3	; 0x03
    3eb0:	9c 81       	ldd	r25, Y+4	; 0x04
    3eb2:	84 34       	cpi	r24, 0x44	; 68
    3eb4:	91 05       	cpc	r25, r1
    3eb6:	71 f1       	breq	.+92     	; 0x3f14 <write_low_nibble+0xb0>
    3eb8:	3c c0       	rjmp	.+120    	; 0x3f32 <write_low_nibble+0xce>
	{
		case 'A':
		PORTA&=0xf0;
    3eba:	ab e3       	ldi	r26, 0x3B	; 59
    3ebc:	b0 e0       	ldi	r27, 0x00	; 0
    3ebe:	eb e3       	ldi	r30, 0x3B	; 59
    3ec0:	f0 e0       	ldi	r31, 0x00	; 0
    3ec2:	80 81       	ld	r24, Z
    3ec4:	80 7f       	andi	r24, 0xF0	; 240
    3ec6:	8c 93       	st	X, r24
		PORTA|=value;
    3ec8:	ab e3       	ldi	r26, 0x3B	; 59
    3eca:	b0 e0       	ldi	r27, 0x00	; 0
    3ecc:	eb e3       	ldi	r30, 0x3B	; 59
    3ece:	f0 e0       	ldi	r31, 0x00	; 0
    3ed0:	90 81       	ld	r25, Z
    3ed2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ed4:	89 2b       	or	r24, r25
    3ed6:	8c 93       	st	X, r24
		case 'B':
		PORTB&=0xf0;
    3ed8:	a8 e3       	ldi	r26, 0x38	; 56
    3eda:	b0 e0       	ldi	r27, 0x00	; 0
    3edc:	e8 e3       	ldi	r30, 0x38	; 56
    3ede:	f0 e0       	ldi	r31, 0x00	; 0
    3ee0:	80 81       	ld	r24, Z
    3ee2:	80 7f       	andi	r24, 0xF0	; 240
    3ee4:	8c 93       	st	X, r24
		PORTB|=value;
    3ee6:	a8 e3       	ldi	r26, 0x38	; 56
    3ee8:	b0 e0       	ldi	r27, 0x00	; 0
    3eea:	e8 e3       	ldi	r30, 0x38	; 56
    3eec:	f0 e0       	ldi	r31, 0x00	; 0
    3eee:	90 81       	ld	r25, Z
    3ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ef2:	89 2b       	or	r24, r25
    3ef4:	8c 93       	st	X, r24
		case 'C':
		PORTC&=0xf0;
    3ef6:	a5 e3       	ldi	r26, 0x35	; 53
    3ef8:	b0 e0       	ldi	r27, 0x00	; 0
    3efa:	e5 e3       	ldi	r30, 0x35	; 53
    3efc:	f0 e0       	ldi	r31, 0x00	; 0
    3efe:	80 81       	ld	r24, Z
    3f00:	80 7f       	andi	r24, 0xF0	; 240
    3f02:	8c 93       	st	X, r24
		PORTC|=value;
    3f04:	a5 e3       	ldi	r26, 0x35	; 53
    3f06:	b0 e0       	ldi	r27, 0x00	; 0
    3f08:	e5 e3       	ldi	r30, 0x35	; 53
    3f0a:	f0 e0       	ldi	r31, 0x00	; 0
    3f0c:	90 81       	ld	r25, Z
    3f0e:	8a 81       	ldd	r24, Y+2	; 0x02
    3f10:	89 2b       	or	r24, r25
    3f12:	8c 93       	st	X, r24
		case 'D':
		PORTD&=0xf0;
    3f14:	a2 e3       	ldi	r26, 0x32	; 50
    3f16:	b0 e0       	ldi	r27, 0x00	; 0
    3f18:	e2 e3       	ldi	r30, 0x32	; 50
    3f1a:	f0 e0       	ldi	r31, 0x00	; 0
    3f1c:	80 81       	ld	r24, Z
    3f1e:	80 7f       	andi	r24, 0xF0	; 240
    3f20:	8c 93       	st	X, r24
		PORTD|=value;
    3f22:	a2 e3       	ldi	r26, 0x32	; 50
    3f24:	b0 e0       	ldi	r27, 0x00	; 0
    3f26:	e2 e3       	ldi	r30, 0x32	; 50
    3f28:	f0 e0       	ldi	r31, 0x00	; 0
    3f2a:	90 81       	ld	r25, Z
    3f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    3f2e:	89 2b       	or	r24, r25
    3f30:	8c 93       	st	X, r24
	}
}
    3f32:	0f 90       	pop	r0
    3f34:	0f 90       	pop	r0
    3f36:	0f 90       	pop	r0
    3f38:	0f 90       	pop	r0
    3f3a:	cf 91       	pop	r28
    3f3c:	df 91       	pop	r29
    3f3e:	08 95       	ret

00003f40 <write_high_nibble>:

void write_high_nibble(unsigned char portname,unsigned char value)
{
    3f40:	df 93       	push	r29
    3f42:	cf 93       	push	r28
    3f44:	00 d0       	rcall	.+0      	; 0x3f46 <write_high_nibble+0x6>
    3f46:	00 d0       	rcall	.+0      	; 0x3f48 <write_high_nibble+0x8>
    3f48:	cd b7       	in	r28, 0x3d	; 61
    3f4a:	de b7       	in	r29, 0x3e	; 62
    3f4c:	89 83       	std	Y+1, r24	; 0x01
    3f4e:	6a 83       	std	Y+2, r22	; 0x02
	value<<=4;
    3f50:	8a 81       	ldd	r24, Y+2	; 0x02
    3f52:	82 95       	swap	r24
    3f54:	80 7f       	andi	r24, 0xF0	; 240
    3f56:	8a 83       	std	Y+2, r24	; 0x02
	switch(portname)
    3f58:	89 81       	ldd	r24, Y+1	; 0x01
    3f5a:	28 2f       	mov	r18, r24
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	3c 83       	std	Y+4, r19	; 0x04
    3f60:	2b 83       	std	Y+3, r18	; 0x03
    3f62:	8b 81       	ldd	r24, Y+3	; 0x03
    3f64:	9c 81       	ldd	r25, Y+4	; 0x04
    3f66:	82 34       	cpi	r24, 0x42	; 66
    3f68:	91 05       	cpc	r25, r1
    3f6a:	29 f1       	breq	.+74     	; 0x3fb6 <write_high_nibble+0x76>
    3f6c:	2b 81       	ldd	r18, Y+3	; 0x03
    3f6e:	3c 81       	ldd	r19, Y+4	; 0x04
    3f70:	23 34       	cpi	r18, 0x43	; 67
    3f72:	31 05       	cpc	r19, r1
    3f74:	34 f4       	brge	.+12     	; 0x3f82 <write_high_nibble+0x42>
    3f76:	8b 81       	ldd	r24, Y+3	; 0x03
    3f78:	9c 81       	ldd	r25, Y+4	; 0x04
    3f7a:	81 34       	cpi	r24, 0x41	; 65
    3f7c:	91 05       	cpc	r25, r1
    3f7e:	61 f0       	breq	.+24     	; 0x3f98 <write_high_nibble+0x58>
    3f80:	47 c0       	rjmp	.+142    	; 0x4010 <write_high_nibble+0xd0>
    3f82:	2b 81       	ldd	r18, Y+3	; 0x03
    3f84:	3c 81       	ldd	r19, Y+4	; 0x04
    3f86:	23 34       	cpi	r18, 0x43	; 67
    3f88:	31 05       	cpc	r19, r1
    3f8a:	21 f1       	breq	.+72     	; 0x3fd4 <write_high_nibble+0x94>
    3f8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3f8e:	9c 81       	ldd	r25, Y+4	; 0x04
    3f90:	84 34       	cpi	r24, 0x44	; 68
    3f92:	91 05       	cpc	r25, r1
    3f94:	71 f1       	breq	.+92     	; 0x3ff2 <write_high_nibble+0xb2>
    3f96:	3c c0       	rjmp	.+120    	; 0x4010 <write_high_nibble+0xd0>
	{
		case 'A':
		PORTA&=0x0f;
    3f98:	ab e3       	ldi	r26, 0x3B	; 59
    3f9a:	b0 e0       	ldi	r27, 0x00	; 0
    3f9c:	eb e3       	ldi	r30, 0x3B	; 59
    3f9e:	f0 e0       	ldi	r31, 0x00	; 0
    3fa0:	80 81       	ld	r24, Z
    3fa2:	8f 70       	andi	r24, 0x0F	; 15
    3fa4:	8c 93       	st	X, r24
		PORTA|=value;
    3fa6:	ab e3       	ldi	r26, 0x3B	; 59
    3fa8:	b0 e0       	ldi	r27, 0x00	; 0
    3faa:	eb e3       	ldi	r30, 0x3B	; 59
    3fac:	f0 e0       	ldi	r31, 0x00	; 0
    3fae:	90 81       	ld	r25, Z
    3fb0:	8a 81       	ldd	r24, Y+2	; 0x02
    3fb2:	89 2b       	or	r24, r25
    3fb4:	8c 93       	st	X, r24
		case 'B':
		PORTB&=0x0f;
    3fb6:	a8 e3       	ldi	r26, 0x38	; 56
    3fb8:	b0 e0       	ldi	r27, 0x00	; 0
    3fba:	e8 e3       	ldi	r30, 0x38	; 56
    3fbc:	f0 e0       	ldi	r31, 0x00	; 0
    3fbe:	80 81       	ld	r24, Z
    3fc0:	8f 70       	andi	r24, 0x0F	; 15
    3fc2:	8c 93       	st	X, r24
		PORTB|=value;
    3fc4:	a8 e3       	ldi	r26, 0x38	; 56
    3fc6:	b0 e0       	ldi	r27, 0x00	; 0
    3fc8:	e8 e3       	ldi	r30, 0x38	; 56
    3fca:	f0 e0       	ldi	r31, 0x00	; 0
    3fcc:	90 81       	ld	r25, Z
    3fce:	8a 81       	ldd	r24, Y+2	; 0x02
    3fd0:	89 2b       	or	r24, r25
    3fd2:	8c 93       	st	X, r24
		case 'C':
		PORTC&=0x0f;
    3fd4:	a5 e3       	ldi	r26, 0x35	; 53
    3fd6:	b0 e0       	ldi	r27, 0x00	; 0
    3fd8:	e5 e3       	ldi	r30, 0x35	; 53
    3fda:	f0 e0       	ldi	r31, 0x00	; 0
    3fdc:	80 81       	ld	r24, Z
    3fde:	8f 70       	andi	r24, 0x0F	; 15
    3fe0:	8c 93       	st	X, r24
		PORTC|=value;
    3fe2:	a5 e3       	ldi	r26, 0x35	; 53
    3fe4:	b0 e0       	ldi	r27, 0x00	; 0
    3fe6:	e5 e3       	ldi	r30, 0x35	; 53
    3fe8:	f0 e0       	ldi	r31, 0x00	; 0
    3fea:	90 81       	ld	r25, Z
    3fec:	8a 81       	ldd	r24, Y+2	; 0x02
    3fee:	89 2b       	or	r24, r25
    3ff0:	8c 93       	st	X, r24
		case 'D':
		PORTD&=0x0f;
    3ff2:	a2 e3       	ldi	r26, 0x32	; 50
    3ff4:	b0 e0       	ldi	r27, 0x00	; 0
    3ff6:	e2 e3       	ldi	r30, 0x32	; 50
    3ff8:	f0 e0       	ldi	r31, 0x00	; 0
    3ffa:	80 81       	ld	r24, Z
    3ffc:	8f 70       	andi	r24, 0x0F	; 15
    3ffe:	8c 93       	st	X, r24
		PORTD|=value;
    4000:	a2 e3       	ldi	r26, 0x32	; 50
    4002:	b0 e0       	ldi	r27, 0x00	; 0
    4004:	e2 e3       	ldi	r30, 0x32	; 50
    4006:	f0 e0       	ldi	r31, 0x00	; 0
    4008:	90 81       	ld	r25, Z
    400a:	8a 81       	ldd	r24, Y+2	; 0x02
    400c:	89 2b       	or	r24, r25
    400e:	8c 93       	st	X, r24
	}
}	
    4010:	0f 90       	pop	r0
    4012:	0f 90       	pop	r0
    4014:	0f 90       	pop	r0
    4016:	0f 90       	pop	r0
    4018:	cf 91       	pop	r28
    401a:	df 91       	pop	r29
    401c:	08 95       	ret

0000401e <LCD_vInit>:
#include <avr/io.h>
#include "LCD.h"
#define  F_CPU 8000000UL
#include <util/delay.h>
#include <avr/io.h>
void LCD_vInit(void){
    401e:	df 93       	push	r29
    4020:	cf 93       	push	r28
    4022:	cd b7       	in	r28, 0x3d	; 61
    4024:	de b7       	in	r29, 0x3e	; 62
    4026:	e8 97       	sbiw	r28, 0x38	; 56
    4028:	0f b6       	in	r0, 0x3f	; 63
    402a:	f8 94       	cli
    402c:	de bf       	out	0x3e, r29	; 62
    402e:	0f be       	out	0x3f, r0	; 63
    4030:	cd bf       	out	0x3d, r28	; 61
    4032:	80 e0       	ldi	r24, 0x00	; 0
    4034:	90 e0       	ldi	r25, 0x00	; 0
    4036:	a8 ec       	ldi	r26, 0xC8	; 200
    4038:	b2 e4       	ldi	r27, 0x42	; 66
    403a:	8d ab       	std	Y+53, r24	; 0x35
    403c:	9e ab       	std	Y+54, r25	; 0x36
    403e:	af ab       	std	Y+55, r26	; 0x37
    4040:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4042:	6d a9       	ldd	r22, Y+53	; 0x35
    4044:	7e a9       	ldd	r23, Y+54	; 0x36
    4046:	8f a9       	ldd	r24, Y+55	; 0x37
    4048:	98 ad       	ldd	r25, Y+56	; 0x38
    404a:	20 e0       	ldi	r18, 0x00	; 0
    404c:	30 e0       	ldi	r19, 0x00	; 0
    404e:	4a ef       	ldi	r20, 0xFA	; 250
    4050:	54 e4       	ldi	r21, 0x44	; 68
    4052:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4056:	dc 01       	movw	r26, r24
    4058:	cb 01       	movw	r24, r22
    405a:	89 ab       	std	Y+49, r24	; 0x31
    405c:	9a ab       	std	Y+50, r25	; 0x32
    405e:	ab ab       	std	Y+51, r26	; 0x33
    4060:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4062:	69 a9       	ldd	r22, Y+49	; 0x31
    4064:	7a a9       	ldd	r23, Y+50	; 0x32
    4066:	8b a9       	ldd	r24, Y+51	; 0x33
    4068:	9c a9       	ldd	r25, Y+52	; 0x34
    406a:	20 e0       	ldi	r18, 0x00	; 0
    406c:	30 e0       	ldi	r19, 0x00	; 0
    406e:	40 e8       	ldi	r20, 0x80	; 128
    4070:	5f e3       	ldi	r21, 0x3F	; 63
    4072:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4076:	88 23       	and	r24, r24
    4078:	2c f4       	brge	.+10     	; 0x4084 <LCD_vInit+0x66>
		__ticks = 1;
    407a:	81 e0       	ldi	r24, 0x01	; 1
    407c:	90 e0       	ldi	r25, 0x00	; 0
    407e:	98 ab       	std	Y+48, r25	; 0x30
    4080:	8f a7       	std	Y+47, r24	; 0x2f
    4082:	3f c0       	rjmp	.+126    	; 0x4102 <LCD_vInit+0xe4>
	else if (__tmp > 65535)
    4084:	69 a9       	ldd	r22, Y+49	; 0x31
    4086:	7a a9       	ldd	r23, Y+50	; 0x32
    4088:	8b a9       	ldd	r24, Y+51	; 0x33
    408a:	9c a9       	ldd	r25, Y+52	; 0x34
    408c:	20 e0       	ldi	r18, 0x00	; 0
    408e:	3f ef       	ldi	r19, 0xFF	; 255
    4090:	4f e7       	ldi	r20, 0x7F	; 127
    4092:	57 e4       	ldi	r21, 0x47	; 71
    4094:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4098:	18 16       	cp	r1, r24
    409a:	4c f5       	brge	.+82     	; 0x40ee <LCD_vInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    409c:	6d a9       	ldd	r22, Y+53	; 0x35
    409e:	7e a9       	ldd	r23, Y+54	; 0x36
    40a0:	8f a9       	ldd	r24, Y+55	; 0x37
    40a2:	98 ad       	ldd	r25, Y+56	; 0x38
    40a4:	20 e0       	ldi	r18, 0x00	; 0
    40a6:	30 e0       	ldi	r19, 0x00	; 0
    40a8:	40 e2       	ldi	r20, 0x20	; 32
    40aa:	51 e4       	ldi	r21, 0x41	; 65
    40ac:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    40b0:	dc 01       	movw	r26, r24
    40b2:	cb 01       	movw	r24, r22
    40b4:	bc 01       	movw	r22, r24
    40b6:	cd 01       	movw	r24, r26
    40b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40bc:	dc 01       	movw	r26, r24
    40be:	cb 01       	movw	r24, r22
    40c0:	98 ab       	std	Y+48, r25	; 0x30
    40c2:	8f a7       	std	Y+47, r24	; 0x2f
    40c4:	0f c0       	rjmp	.+30     	; 0x40e4 <LCD_vInit+0xc6>
    40c6:	88 ec       	ldi	r24, 0xC8	; 200
    40c8:	90 e0       	ldi	r25, 0x00	; 0
    40ca:	9e a7       	std	Y+46, r25	; 0x2e
    40cc:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    40ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    40d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    40d2:	01 97       	sbiw	r24, 0x01	; 1
    40d4:	f1 f7       	brne	.-4      	; 0x40d2 <LCD_vInit+0xb4>
    40d6:	9e a7       	std	Y+46, r25	; 0x2e
    40d8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40da:	8f a5       	ldd	r24, Y+47	; 0x2f
    40dc:	98 a9       	ldd	r25, Y+48	; 0x30
    40de:	01 97       	sbiw	r24, 0x01	; 1
    40e0:	98 ab       	std	Y+48, r25	; 0x30
    40e2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    40e6:	98 a9       	ldd	r25, Y+48	; 0x30
    40e8:	00 97       	sbiw	r24, 0x00	; 0
    40ea:	69 f7       	brne	.-38     	; 0x40c6 <LCD_vInit+0xa8>
    40ec:	14 c0       	rjmp	.+40     	; 0x4116 <LCD_vInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40ee:	69 a9       	ldd	r22, Y+49	; 0x31
    40f0:	7a a9       	ldd	r23, Y+50	; 0x32
    40f2:	8b a9       	ldd	r24, Y+51	; 0x33
    40f4:	9c a9       	ldd	r25, Y+52	; 0x34
    40f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40fa:	dc 01       	movw	r26, r24
    40fc:	cb 01       	movw	r24, r22
    40fe:	98 ab       	std	Y+48, r25	; 0x30
    4100:	8f a7       	std	Y+47, r24	; 0x2f
    4102:	8f a5       	ldd	r24, Y+47	; 0x2f
    4104:	98 a9       	ldd	r25, Y+48	; 0x30
    4106:	9c a7       	std	Y+44, r25	; 0x2c
    4108:	8b a7       	std	Y+43, r24	; 0x2b
    410a:	8b a5       	ldd	r24, Y+43	; 0x2b
    410c:	9c a5       	ldd	r25, Y+44	; 0x2c
    410e:	01 97       	sbiw	r24, 0x01	; 1
    4110:	f1 f7       	brne	.-4      	; 0x410e <LCD_vInit+0xf0>
    4112:	9c a7       	std	Y+44, r25	; 0x2c
    4114:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(100);
	DIO_vsetPINDir(CONTROL_PORT,EN,1);
    4116:	84 e4       	ldi	r24, 0x44	; 68
    4118:	63 e0       	ldi	r22, 0x03	; 3
    411a:	41 e0       	ldi	r20, 0x01	; 1
    411c:	0e 94 25 1b 	call	0x364a	; 0x364a <DIO_vsetPINDir>
	DIO_vsetPINDir(CONTROL_PORT,RS,1);
    4120:	84 e4       	ldi	r24, 0x44	; 68
    4122:	61 e0       	ldi	r22, 0x01	; 1
    4124:	41 e0       	ldi	r20, 0x01	; 1
    4126:	0e 94 25 1b 	call	0x364a	; 0x364a <DIO_vsetPINDir>
	DIO_vsetPINDir(CONTROL_PORT,RW,1);
    412a:	84 e4       	ldi	r24, 0x44	; 68
    412c:	62 e0       	ldi	r22, 0x02	; 2
    412e:	41 e0       	ldi	r20, 0x01	; 1
    4130:	0e 94 25 1b 	call	0x364a	; 0x364a <DIO_vsetPINDir>
	#ifdef eight_bits_mode
	DIO_vset_port_direction(DATA_PORT,0xff);
    4134:	82 e4       	ldi	r24, 0x42	; 66
    4136:	6f ef       	ldi	r22, 0xFF	; 255
    4138:	0e 94 ab 1d 	call	0x3b56	; 0x3b56 <DIO_vset_port_direction>
	LCD_vSend_cmd(EIGHT_BITS); //8 bit mode
    413c:	88 e3       	ldi	r24, 0x38	; 56
    413e:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    4142:	80 e0       	ldi	r24, 0x00	; 0
    4144:	90 e0       	ldi	r25, 0x00	; 0
    4146:	a0 e8       	ldi	r26, 0x80	; 128
    4148:	bf e3       	ldi	r27, 0x3F	; 63
    414a:	8f a3       	std	Y+39, r24	; 0x27
    414c:	98 a7       	std	Y+40, r25	; 0x28
    414e:	a9 a7       	std	Y+41, r26	; 0x29
    4150:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4152:	6f a1       	ldd	r22, Y+39	; 0x27
    4154:	78 a5       	ldd	r23, Y+40	; 0x28
    4156:	89 a5       	ldd	r24, Y+41	; 0x29
    4158:	9a a5       	ldd	r25, Y+42	; 0x2a
    415a:	20 e0       	ldi	r18, 0x00	; 0
    415c:	30 e0       	ldi	r19, 0x00	; 0
    415e:	4a ef       	ldi	r20, 0xFA	; 250
    4160:	54 e4       	ldi	r21, 0x44	; 68
    4162:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4166:	dc 01       	movw	r26, r24
    4168:	cb 01       	movw	r24, r22
    416a:	8b a3       	std	Y+35, r24	; 0x23
    416c:	9c a3       	std	Y+36, r25	; 0x24
    416e:	ad a3       	std	Y+37, r26	; 0x25
    4170:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4172:	6b a1       	ldd	r22, Y+35	; 0x23
    4174:	7c a1       	ldd	r23, Y+36	; 0x24
    4176:	8d a1       	ldd	r24, Y+37	; 0x25
    4178:	9e a1       	ldd	r25, Y+38	; 0x26
    417a:	20 e0       	ldi	r18, 0x00	; 0
    417c:	30 e0       	ldi	r19, 0x00	; 0
    417e:	40 e8       	ldi	r20, 0x80	; 128
    4180:	5f e3       	ldi	r21, 0x3F	; 63
    4182:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4186:	88 23       	and	r24, r24
    4188:	2c f4       	brge	.+10     	; 0x4194 <LCD_vInit+0x176>
		__ticks = 1;
    418a:	81 e0       	ldi	r24, 0x01	; 1
    418c:	90 e0       	ldi	r25, 0x00	; 0
    418e:	9a a3       	std	Y+34, r25	; 0x22
    4190:	89 a3       	std	Y+33, r24	; 0x21
    4192:	3f c0       	rjmp	.+126    	; 0x4212 <LCD_vInit+0x1f4>
	else if (__tmp > 65535)
    4194:	6b a1       	ldd	r22, Y+35	; 0x23
    4196:	7c a1       	ldd	r23, Y+36	; 0x24
    4198:	8d a1       	ldd	r24, Y+37	; 0x25
    419a:	9e a1       	ldd	r25, Y+38	; 0x26
    419c:	20 e0       	ldi	r18, 0x00	; 0
    419e:	3f ef       	ldi	r19, 0xFF	; 255
    41a0:	4f e7       	ldi	r20, 0x7F	; 127
    41a2:	57 e4       	ldi	r21, 0x47	; 71
    41a4:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    41a8:	18 16       	cp	r1, r24
    41aa:	4c f5       	brge	.+82     	; 0x41fe <LCD_vInit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41ac:	6f a1       	ldd	r22, Y+39	; 0x27
    41ae:	78 a5       	ldd	r23, Y+40	; 0x28
    41b0:	89 a5       	ldd	r24, Y+41	; 0x29
    41b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    41b4:	20 e0       	ldi	r18, 0x00	; 0
    41b6:	30 e0       	ldi	r19, 0x00	; 0
    41b8:	40 e2       	ldi	r20, 0x20	; 32
    41ba:	51 e4       	ldi	r21, 0x41	; 65
    41bc:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    41c0:	dc 01       	movw	r26, r24
    41c2:	cb 01       	movw	r24, r22
    41c4:	bc 01       	movw	r22, r24
    41c6:	cd 01       	movw	r24, r26
    41c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41cc:	dc 01       	movw	r26, r24
    41ce:	cb 01       	movw	r24, r22
    41d0:	9a a3       	std	Y+34, r25	; 0x22
    41d2:	89 a3       	std	Y+33, r24	; 0x21
    41d4:	0f c0       	rjmp	.+30     	; 0x41f4 <LCD_vInit+0x1d6>
    41d6:	88 ec       	ldi	r24, 0xC8	; 200
    41d8:	90 e0       	ldi	r25, 0x00	; 0
    41da:	98 a3       	std	Y+32, r25	; 0x20
    41dc:	8f 8f       	std	Y+31, r24	; 0x1f
    41de:	8f 8d       	ldd	r24, Y+31	; 0x1f
    41e0:	98 a1       	ldd	r25, Y+32	; 0x20
    41e2:	01 97       	sbiw	r24, 0x01	; 1
    41e4:	f1 f7       	brne	.-4      	; 0x41e2 <LCD_vInit+0x1c4>
    41e6:	98 a3       	std	Y+32, r25	; 0x20
    41e8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41ea:	89 a1       	ldd	r24, Y+33	; 0x21
    41ec:	9a a1       	ldd	r25, Y+34	; 0x22
    41ee:	01 97       	sbiw	r24, 0x01	; 1
    41f0:	9a a3       	std	Y+34, r25	; 0x22
    41f2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41f4:	89 a1       	ldd	r24, Y+33	; 0x21
    41f6:	9a a1       	ldd	r25, Y+34	; 0x22
    41f8:	00 97       	sbiw	r24, 0x00	; 0
    41fa:	69 f7       	brne	.-38     	; 0x41d6 <LCD_vInit+0x1b8>
    41fc:	14 c0       	rjmp	.+40     	; 0x4226 <LCD_vInit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41fe:	6b a1       	ldd	r22, Y+35	; 0x23
    4200:	7c a1       	ldd	r23, Y+36	; 0x24
    4202:	8d a1       	ldd	r24, Y+37	; 0x25
    4204:	9e a1       	ldd	r25, Y+38	; 0x26
    4206:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    420a:	dc 01       	movw	r26, r24
    420c:	cb 01       	movw	r24, r22
    420e:	9a a3       	std	Y+34, r25	; 0x22
    4210:	89 a3       	std	Y+33, r24	; 0x21
    4212:	89 a1       	ldd	r24, Y+33	; 0x21
    4214:	9a a1       	ldd	r25, Y+34	; 0x22
    4216:	9e 8f       	std	Y+30, r25	; 0x1e
    4218:	8d 8f       	std	Y+29, r24	; 0x1d
    421a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    421c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    421e:	01 97       	sbiw	r24, 0x01	; 1
    4220:	f1 f7       	brne	.-4      	; 0x421e <LCD_vInit+0x200>
    4222:	9e 8f       	std	Y+30, r25	; 0x1e
    4224:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAY_ON);//display on cursor on
    4226:	8e e0       	ldi	r24, 0x0E	; 14
    4228:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    422c:	80 e0       	ldi	r24, 0x00	; 0
    422e:	90 e0       	ldi	r25, 0x00	; 0
    4230:	a0 e8       	ldi	r26, 0x80	; 128
    4232:	bf e3       	ldi	r27, 0x3F	; 63
    4234:	89 8f       	std	Y+25, r24	; 0x19
    4236:	9a 8f       	std	Y+26, r25	; 0x1a
    4238:	ab 8f       	std	Y+27, r26	; 0x1b
    423a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    423c:	69 8d       	ldd	r22, Y+25	; 0x19
    423e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4240:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4242:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4244:	20 e0       	ldi	r18, 0x00	; 0
    4246:	30 e0       	ldi	r19, 0x00	; 0
    4248:	4a ef       	ldi	r20, 0xFA	; 250
    424a:	54 e4       	ldi	r21, 0x44	; 68
    424c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4250:	dc 01       	movw	r26, r24
    4252:	cb 01       	movw	r24, r22
    4254:	8d 8b       	std	Y+21, r24	; 0x15
    4256:	9e 8b       	std	Y+22, r25	; 0x16
    4258:	af 8b       	std	Y+23, r26	; 0x17
    425a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    425c:	6d 89       	ldd	r22, Y+21	; 0x15
    425e:	7e 89       	ldd	r23, Y+22	; 0x16
    4260:	8f 89       	ldd	r24, Y+23	; 0x17
    4262:	98 8d       	ldd	r25, Y+24	; 0x18
    4264:	20 e0       	ldi	r18, 0x00	; 0
    4266:	30 e0       	ldi	r19, 0x00	; 0
    4268:	40 e8       	ldi	r20, 0x80	; 128
    426a:	5f e3       	ldi	r21, 0x3F	; 63
    426c:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4270:	88 23       	and	r24, r24
    4272:	2c f4       	brge	.+10     	; 0x427e <LCD_vInit+0x260>
		__ticks = 1;
    4274:	81 e0       	ldi	r24, 0x01	; 1
    4276:	90 e0       	ldi	r25, 0x00	; 0
    4278:	9c 8b       	std	Y+20, r25	; 0x14
    427a:	8b 8b       	std	Y+19, r24	; 0x13
    427c:	3f c0       	rjmp	.+126    	; 0x42fc <LCD_vInit+0x2de>
	else if (__tmp > 65535)
    427e:	6d 89       	ldd	r22, Y+21	; 0x15
    4280:	7e 89       	ldd	r23, Y+22	; 0x16
    4282:	8f 89       	ldd	r24, Y+23	; 0x17
    4284:	98 8d       	ldd	r25, Y+24	; 0x18
    4286:	20 e0       	ldi	r18, 0x00	; 0
    4288:	3f ef       	ldi	r19, 0xFF	; 255
    428a:	4f e7       	ldi	r20, 0x7F	; 127
    428c:	57 e4       	ldi	r21, 0x47	; 71
    428e:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4292:	18 16       	cp	r1, r24
    4294:	4c f5       	brge	.+82     	; 0x42e8 <LCD_vInit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4296:	69 8d       	ldd	r22, Y+25	; 0x19
    4298:	7a 8d       	ldd	r23, Y+26	; 0x1a
    429a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    429c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    429e:	20 e0       	ldi	r18, 0x00	; 0
    42a0:	30 e0       	ldi	r19, 0x00	; 0
    42a2:	40 e2       	ldi	r20, 0x20	; 32
    42a4:	51 e4       	ldi	r21, 0x41	; 65
    42a6:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    42aa:	dc 01       	movw	r26, r24
    42ac:	cb 01       	movw	r24, r22
    42ae:	bc 01       	movw	r22, r24
    42b0:	cd 01       	movw	r24, r26
    42b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42b6:	dc 01       	movw	r26, r24
    42b8:	cb 01       	movw	r24, r22
    42ba:	9c 8b       	std	Y+20, r25	; 0x14
    42bc:	8b 8b       	std	Y+19, r24	; 0x13
    42be:	0f c0       	rjmp	.+30     	; 0x42de <LCD_vInit+0x2c0>
    42c0:	88 ec       	ldi	r24, 0xC8	; 200
    42c2:	90 e0       	ldi	r25, 0x00	; 0
    42c4:	9a 8b       	std	Y+18, r25	; 0x12
    42c6:	89 8b       	std	Y+17, r24	; 0x11
    42c8:	89 89       	ldd	r24, Y+17	; 0x11
    42ca:	9a 89       	ldd	r25, Y+18	; 0x12
    42cc:	01 97       	sbiw	r24, 0x01	; 1
    42ce:	f1 f7       	brne	.-4      	; 0x42cc <LCD_vInit+0x2ae>
    42d0:	9a 8b       	std	Y+18, r25	; 0x12
    42d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42d4:	8b 89       	ldd	r24, Y+19	; 0x13
    42d6:	9c 89       	ldd	r25, Y+20	; 0x14
    42d8:	01 97       	sbiw	r24, 0x01	; 1
    42da:	9c 8b       	std	Y+20, r25	; 0x14
    42dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42de:	8b 89       	ldd	r24, Y+19	; 0x13
    42e0:	9c 89       	ldd	r25, Y+20	; 0x14
    42e2:	00 97       	sbiw	r24, 0x00	; 0
    42e4:	69 f7       	brne	.-38     	; 0x42c0 <LCD_vInit+0x2a2>
    42e6:	14 c0       	rjmp	.+40     	; 0x4310 <LCD_vInit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42e8:	6d 89       	ldd	r22, Y+21	; 0x15
    42ea:	7e 89       	ldd	r23, Y+22	; 0x16
    42ec:	8f 89       	ldd	r24, Y+23	; 0x17
    42ee:	98 8d       	ldd	r25, Y+24	; 0x18
    42f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42f4:	dc 01       	movw	r26, r24
    42f6:	cb 01       	movw	r24, r22
    42f8:	9c 8b       	std	Y+20, r25	; 0x14
    42fa:	8b 8b       	std	Y+19, r24	; 0x13
    42fc:	8b 89       	ldd	r24, Y+19	; 0x13
    42fe:	9c 89       	ldd	r25, Y+20	; 0x14
    4300:	98 8b       	std	Y+16, r25	; 0x10
    4302:	8f 87       	std	Y+15, r24	; 0x0f
    4304:	8f 85       	ldd	r24, Y+15	; 0x0f
    4306:	98 89       	ldd	r25, Y+16	; 0x10
    4308:	01 97       	sbiw	r24, 0x01	; 1
    430a:	f1 f7       	brne	.-4      	; 0x4308 <LCD_vInit+0x2ea>
    430c:	98 8b       	std	Y+16, r25	; 0x10
    430e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
    4310:	81 e0       	ldi	r24, 0x01	; 1
    4312:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    4316:	80 e0       	ldi	r24, 0x00	; 0
    4318:	90 e0       	ldi	r25, 0x00	; 0
    431a:	a0 e2       	ldi	r26, 0x20	; 32
    431c:	b1 e4       	ldi	r27, 0x41	; 65
    431e:	8b 87       	std	Y+11, r24	; 0x0b
    4320:	9c 87       	std	Y+12, r25	; 0x0c
    4322:	ad 87       	std	Y+13, r26	; 0x0d
    4324:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4326:	6b 85       	ldd	r22, Y+11	; 0x0b
    4328:	7c 85       	ldd	r23, Y+12	; 0x0c
    432a:	8d 85       	ldd	r24, Y+13	; 0x0d
    432c:	9e 85       	ldd	r25, Y+14	; 0x0e
    432e:	20 e0       	ldi	r18, 0x00	; 0
    4330:	30 e0       	ldi	r19, 0x00	; 0
    4332:	4a ef       	ldi	r20, 0xFA	; 250
    4334:	54 e4       	ldi	r21, 0x44	; 68
    4336:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    433a:	dc 01       	movw	r26, r24
    433c:	cb 01       	movw	r24, r22
    433e:	8f 83       	std	Y+7, r24	; 0x07
    4340:	98 87       	std	Y+8, r25	; 0x08
    4342:	a9 87       	std	Y+9, r26	; 0x09
    4344:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4346:	6f 81       	ldd	r22, Y+7	; 0x07
    4348:	78 85       	ldd	r23, Y+8	; 0x08
    434a:	89 85       	ldd	r24, Y+9	; 0x09
    434c:	9a 85       	ldd	r25, Y+10	; 0x0a
    434e:	20 e0       	ldi	r18, 0x00	; 0
    4350:	30 e0       	ldi	r19, 0x00	; 0
    4352:	40 e8       	ldi	r20, 0x80	; 128
    4354:	5f e3       	ldi	r21, 0x3F	; 63
    4356:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    435a:	88 23       	and	r24, r24
    435c:	2c f4       	brge	.+10     	; 0x4368 <LCD_vInit+0x34a>
		__ticks = 1;
    435e:	81 e0       	ldi	r24, 0x01	; 1
    4360:	90 e0       	ldi	r25, 0x00	; 0
    4362:	9e 83       	std	Y+6, r25	; 0x06
    4364:	8d 83       	std	Y+5, r24	; 0x05
    4366:	3f c0       	rjmp	.+126    	; 0x43e6 <LCD_vInit+0x3c8>
	else if (__tmp > 65535)
    4368:	6f 81       	ldd	r22, Y+7	; 0x07
    436a:	78 85       	ldd	r23, Y+8	; 0x08
    436c:	89 85       	ldd	r24, Y+9	; 0x09
    436e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4370:	20 e0       	ldi	r18, 0x00	; 0
    4372:	3f ef       	ldi	r19, 0xFF	; 255
    4374:	4f e7       	ldi	r20, 0x7F	; 127
    4376:	57 e4       	ldi	r21, 0x47	; 71
    4378:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    437c:	18 16       	cp	r1, r24
    437e:	4c f5       	brge	.+82     	; 0x43d2 <LCD_vInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4380:	6b 85       	ldd	r22, Y+11	; 0x0b
    4382:	7c 85       	ldd	r23, Y+12	; 0x0c
    4384:	8d 85       	ldd	r24, Y+13	; 0x0d
    4386:	9e 85       	ldd	r25, Y+14	; 0x0e
    4388:	20 e0       	ldi	r18, 0x00	; 0
    438a:	30 e0       	ldi	r19, 0x00	; 0
    438c:	40 e2       	ldi	r20, 0x20	; 32
    438e:	51 e4       	ldi	r21, 0x41	; 65
    4390:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4394:	dc 01       	movw	r26, r24
    4396:	cb 01       	movw	r24, r22
    4398:	bc 01       	movw	r22, r24
    439a:	cd 01       	movw	r24, r26
    439c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43a0:	dc 01       	movw	r26, r24
    43a2:	cb 01       	movw	r24, r22
    43a4:	9e 83       	std	Y+6, r25	; 0x06
    43a6:	8d 83       	std	Y+5, r24	; 0x05
    43a8:	0f c0       	rjmp	.+30     	; 0x43c8 <LCD_vInit+0x3aa>
    43aa:	88 ec       	ldi	r24, 0xC8	; 200
    43ac:	90 e0       	ldi	r25, 0x00	; 0
    43ae:	9c 83       	std	Y+4, r25	; 0x04
    43b0:	8b 83       	std	Y+3, r24	; 0x03
    43b2:	8b 81       	ldd	r24, Y+3	; 0x03
    43b4:	9c 81       	ldd	r25, Y+4	; 0x04
    43b6:	01 97       	sbiw	r24, 0x01	; 1
    43b8:	f1 f7       	brne	.-4      	; 0x43b6 <LCD_vInit+0x398>
    43ba:	9c 83       	std	Y+4, r25	; 0x04
    43bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43be:	8d 81       	ldd	r24, Y+5	; 0x05
    43c0:	9e 81       	ldd	r25, Y+6	; 0x06
    43c2:	01 97       	sbiw	r24, 0x01	; 1
    43c4:	9e 83       	std	Y+6, r25	; 0x06
    43c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43c8:	8d 81       	ldd	r24, Y+5	; 0x05
    43ca:	9e 81       	ldd	r25, Y+6	; 0x06
    43cc:	00 97       	sbiw	r24, 0x00	; 0
    43ce:	69 f7       	brne	.-38     	; 0x43aa <LCD_vInit+0x38c>
    43d0:	14 c0       	rjmp	.+40     	; 0x43fa <LCD_vInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43d2:	6f 81       	ldd	r22, Y+7	; 0x07
    43d4:	78 85       	ldd	r23, Y+8	; 0x08
    43d6:	89 85       	ldd	r24, Y+9	; 0x09
    43d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    43da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43de:	dc 01       	movw	r26, r24
    43e0:	cb 01       	movw	r24, r22
    43e2:	9e 83       	std	Y+6, r25	; 0x06
    43e4:	8d 83       	std	Y+5, r24	; 0x05
    43e6:	8d 81       	ldd	r24, Y+5	; 0x05
    43e8:	9e 81       	ldd	r25, Y+6	; 0x06
    43ea:	9a 83       	std	Y+2, r25	; 0x02
    43ec:	89 83       	std	Y+1, r24	; 0x01
    43ee:	89 81       	ldd	r24, Y+1	; 0x01
    43f0:	9a 81       	ldd	r25, Y+2	; 0x02
    43f2:	01 97       	sbiw	r24, 0x01	; 1
    43f4:	f1 f7       	brne	.-4      	; 0x43f2 <LCD_vInit+0x3d4>
    43f6:	9a 83       	std	Y+2, r25	; 0x02
    43f8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
    43fa:	86 e0       	ldi	r24, 0x06	; 6
    43fc:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
	_delay_ms(1);
	#endif

}
    4400:	e8 96       	adiw	r28, 0x38	; 56
    4402:	0f b6       	in	r0, 0x3f	; 63
    4404:	f8 94       	cli
    4406:	de bf       	out	0x3e, r29	; 62
    4408:	0f be       	out	0x3f, r0	; 63
    440a:	cd bf       	out	0x3d, r28	; 61
    440c:	cf 91       	pop	r28
    440e:	df 91       	pop	r29
    4410:	08 95       	ret

00004412 <LCD_vSend_cmd>:


void LCD_vSend_cmd(char cmd){
    4412:	df 93       	push	r29
    4414:	cf 93       	push	r28
    4416:	cd b7       	in	r28, 0x3d	; 61
    4418:	de b7       	in	r29, 0x3e	; 62
    441a:	2f 97       	sbiw	r28, 0x0f	; 15
    441c:	0f b6       	in	r0, 0x3f	; 63
    441e:	f8 94       	cli
    4420:	de bf       	out	0x3e, r29	; 62
    4422:	0f be       	out	0x3f, r0	; 63
    4424:	cd bf       	out	0x3d, r28	; 61
    4426:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_vwrite(CONTROL_PORT,RS,0);
    4428:	84 e4       	ldi	r24, 0x44	; 68
    442a:	61 e0       	ldi	r22, 0x01	; 1
    442c:	40 e0       	ldi	r20, 0x00	; 0
    442e:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
	#ifdef eight_bits_mode
	DIO_vwrite_port(DATA_PORT,cmd);
    4432:	82 e4       	ldi	r24, 0x42	; 66
    4434:	6f 85       	ldd	r22, Y+15	; 0x0f
    4436:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <DIO_vwrite_port>
	send_falling_edge();
    443a:	0e 94 2b 23 	call	0x4656	; 0x4656 <send_falling_edge>
    443e:	80 e0       	ldi	r24, 0x00	; 0
    4440:	90 e0       	ldi	r25, 0x00	; 0
    4442:	a0 e8       	ldi	r26, 0x80	; 128
    4444:	bf e3       	ldi	r27, 0x3F	; 63
    4446:	8b 87       	std	Y+11, r24	; 0x0b
    4448:	9c 87       	std	Y+12, r25	; 0x0c
    444a:	ad 87       	std	Y+13, r26	; 0x0d
    444c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    444e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4450:	7c 85       	ldd	r23, Y+12	; 0x0c
    4452:	8d 85       	ldd	r24, Y+13	; 0x0d
    4454:	9e 85       	ldd	r25, Y+14	; 0x0e
    4456:	20 e0       	ldi	r18, 0x00	; 0
    4458:	30 e0       	ldi	r19, 0x00	; 0
    445a:	4a ef       	ldi	r20, 0xFA	; 250
    445c:	54 e4       	ldi	r21, 0x44	; 68
    445e:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4462:	dc 01       	movw	r26, r24
    4464:	cb 01       	movw	r24, r22
    4466:	8f 83       	std	Y+7, r24	; 0x07
    4468:	98 87       	std	Y+8, r25	; 0x08
    446a:	a9 87       	std	Y+9, r26	; 0x09
    446c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    446e:	6f 81       	ldd	r22, Y+7	; 0x07
    4470:	78 85       	ldd	r23, Y+8	; 0x08
    4472:	89 85       	ldd	r24, Y+9	; 0x09
    4474:	9a 85       	ldd	r25, Y+10	; 0x0a
    4476:	20 e0       	ldi	r18, 0x00	; 0
    4478:	30 e0       	ldi	r19, 0x00	; 0
    447a:	40 e8       	ldi	r20, 0x80	; 128
    447c:	5f e3       	ldi	r21, 0x3F	; 63
    447e:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4482:	88 23       	and	r24, r24
    4484:	2c f4       	brge	.+10     	; 0x4490 <LCD_vSend_cmd+0x7e>
		__ticks = 1;
    4486:	81 e0       	ldi	r24, 0x01	; 1
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	9e 83       	std	Y+6, r25	; 0x06
    448c:	8d 83       	std	Y+5, r24	; 0x05
    448e:	3f c0       	rjmp	.+126    	; 0x450e <LCD_vSend_cmd+0xfc>
	else if (__tmp > 65535)
    4490:	6f 81       	ldd	r22, Y+7	; 0x07
    4492:	78 85       	ldd	r23, Y+8	; 0x08
    4494:	89 85       	ldd	r24, Y+9	; 0x09
    4496:	9a 85       	ldd	r25, Y+10	; 0x0a
    4498:	20 e0       	ldi	r18, 0x00	; 0
    449a:	3f ef       	ldi	r19, 0xFF	; 255
    449c:	4f e7       	ldi	r20, 0x7F	; 127
    449e:	57 e4       	ldi	r21, 0x47	; 71
    44a0:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    44a4:	18 16       	cp	r1, r24
    44a6:	4c f5       	brge	.+82     	; 0x44fa <LCD_vSend_cmd+0xe8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    44aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    44ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    44ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    44b0:	20 e0       	ldi	r18, 0x00	; 0
    44b2:	30 e0       	ldi	r19, 0x00	; 0
    44b4:	40 e2       	ldi	r20, 0x20	; 32
    44b6:	51 e4       	ldi	r21, 0x41	; 65
    44b8:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    44bc:	dc 01       	movw	r26, r24
    44be:	cb 01       	movw	r24, r22
    44c0:	bc 01       	movw	r22, r24
    44c2:	cd 01       	movw	r24, r26
    44c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44c8:	dc 01       	movw	r26, r24
    44ca:	cb 01       	movw	r24, r22
    44cc:	9e 83       	std	Y+6, r25	; 0x06
    44ce:	8d 83       	std	Y+5, r24	; 0x05
    44d0:	0f c0       	rjmp	.+30     	; 0x44f0 <LCD_vSend_cmd+0xde>
    44d2:	88 ec       	ldi	r24, 0xC8	; 200
    44d4:	90 e0       	ldi	r25, 0x00	; 0
    44d6:	9c 83       	std	Y+4, r25	; 0x04
    44d8:	8b 83       	std	Y+3, r24	; 0x03
    44da:	8b 81       	ldd	r24, Y+3	; 0x03
    44dc:	9c 81       	ldd	r25, Y+4	; 0x04
    44de:	01 97       	sbiw	r24, 0x01	; 1
    44e0:	f1 f7       	brne	.-4      	; 0x44de <LCD_vSend_cmd+0xcc>
    44e2:	9c 83       	std	Y+4, r25	; 0x04
    44e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44e6:	8d 81       	ldd	r24, Y+5	; 0x05
    44e8:	9e 81       	ldd	r25, Y+6	; 0x06
    44ea:	01 97       	sbiw	r24, 0x01	; 1
    44ec:	9e 83       	std	Y+6, r25	; 0x06
    44ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44f0:	8d 81       	ldd	r24, Y+5	; 0x05
    44f2:	9e 81       	ldd	r25, Y+6	; 0x06
    44f4:	00 97       	sbiw	r24, 0x00	; 0
    44f6:	69 f7       	brne	.-38     	; 0x44d2 <LCD_vSend_cmd+0xc0>
    44f8:	14 c0       	rjmp	.+40     	; 0x4522 <LCD_vSend_cmd+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44fa:	6f 81       	ldd	r22, Y+7	; 0x07
    44fc:	78 85       	ldd	r23, Y+8	; 0x08
    44fe:	89 85       	ldd	r24, Y+9	; 0x09
    4500:	9a 85       	ldd	r25, Y+10	; 0x0a
    4502:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4506:	dc 01       	movw	r26, r24
    4508:	cb 01       	movw	r24, r22
    450a:	9e 83       	std	Y+6, r25	; 0x06
    450c:	8d 83       	std	Y+5, r24	; 0x05
    450e:	8d 81       	ldd	r24, Y+5	; 0x05
    4510:	9e 81       	ldd	r25, Y+6	; 0x06
    4512:	9a 83       	std	Y+2, r25	; 0x02
    4514:	89 83       	std	Y+1, r24	; 0x01
    4516:	89 81       	ldd	r24, Y+1	; 0x01
    4518:	9a 81       	ldd	r25, Y+2	; 0x02
    451a:	01 97       	sbiw	r24, 0x01	; 1
    451c:	f1 f7       	brne	.-4      	; 0x451a <LCD_vSend_cmd+0x108>
    451e:	9a 83       	std	Y+2, r25	; 0x02
    4520:	89 83       	std	Y+1, r24	; 0x01
	write_high_nibble(DATA_PORT,cmd);
	DIO_vwrite(CONTROL_PORT,RS,0);
	send_falling_edge();
	#endif
	_delay_ms(1);
}
    4522:	2f 96       	adiw	r28, 0x0f	; 15
    4524:	0f b6       	in	r0, 0x3f	; 63
    4526:	f8 94       	cli
    4528:	de bf       	out	0x3e, r29	; 62
    452a:	0f be       	out	0x3f, r0	; 63
    452c:	cd bf       	out	0x3d, r28	; 61
    452e:	cf 91       	pop	r28
    4530:	df 91       	pop	r29
    4532:	08 95       	ret

00004534 <LCD_vSend_char>:
void LCD_vSend_char(char data){
    4534:	df 93       	push	r29
    4536:	cf 93       	push	r28
    4538:	cd b7       	in	r28, 0x3d	; 61
    453a:	de b7       	in	r29, 0x3e	; 62
    453c:	2f 97       	sbiw	r28, 0x0f	; 15
    453e:	0f b6       	in	r0, 0x3f	; 63
    4540:	f8 94       	cli
    4542:	de bf       	out	0x3e, r29	; 62
    4544:	0f be       	out	0x3f, r0	; 63
    4546:	cd bf       	out	0x3d, r28	; 61
    4548:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_vwrite(CONTROL_PORT,RS,1);
    454a:	84 e4       	ldi	r24, 0x44	; 68
    454c:	61 e0       	ldi	r22, 0x01	; 1
    454e:	41 e0       	ldi	r20, 0x01	; 1
    4550:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
	#ifdef eight_bits_mode
	DIO_vwrite_port(DATA_PORT,data);
    4554:	82 e4       	ldi	r24, 0x42	; 66
    4556:	6f 85       	ldd	r22, Y+15	; 0x0f
    4558:	0e 94 d3 1d 	call	0x3ba6	; 0x3ba6 <DIO_vwrite_port>
	send_falling_edge();
    455c:	0e 94 2b 23 	call	0x4656	; 0x4656 <send_falling_edge>
    4560:	80 e0       	ldi	r24, 0x00	; 0
    4562:	90 e0       	ldi	r25, 0x00	; 0
    4564:	a0 e8       	ldi	r26, 0x80	; 128
    4566:	bf e3       	ldi	r27, 0x3F	; 63
    4568:	8b 87       	std	Y+11, r24	; 0x0b
    456a:	9c 87       	std	Y+12, r25	; 0x0c
    456c:	ad 87       	std	Y+13, r26	; 0x0d
    456e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4570:	6b 85       	ldd	r22, Y+11	; 0x0b
    4572:	7c 85       	ldd	r23, Y+12	; 0x0c
    4574:	8d 85       	ldd	r24, Y+13	; 0x0d
    4576:	9e 85       	ldd	r25, Y+14	; 0x0e
    4578:	20 e0       	ldi	r18, 0x00	; 0
    457a:	30 e0       	ldi	r19, 0x00	; 0
    457c:	4a ef       	ldi	r20, 0xFA	; 250
    457e:	54 e4       	ldi	r21, 0x44	; 68
    4580:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4584:	dc 01       	movw	r26, r24
    4586:	cb 01       	movw	r24, r22
    4588:	8f 83       	std	Y+7, r24	; 0x07
    458a:	98 87       	std	Y+8, r25	; 0x08
    458c:	a9 87       	std	Y+9, r26	; 0x09
    458e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4590:	6f 81       	ldd	r22, Y+7	; 0x07
    4592:	78 85       	ldd	r23, Y+8	; 0x08
    4594:	89 85       	ldd	r24, Y+9	; 0x09
    4596:	9a 85       	ldd	r25, Y+10	; 0x0a
    4598:	20 e0       	ldi	r18, 0x00	; 0
    459a:	30 e0       	ldi	r19, 0x00	; 0
    459c:	40 e8       	ldi	r20, 0x80	; 128
    459e:	5f e3       	ldi	r21, 0x3F	; 63
    45a0:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    45a4:	88 23       	and	r24, r24
    45a6:	2c f4       	brge	.+10     	; 0x45b2 <LCD_vSend_char+0x7e>
		__ticks = 1;
    45a8:	81 e0       	ldi	r24, 0x01	; 1
    45aa:	90 e0       	ldi	r25, 0x00	; 0
    45ac:	9e 83       	std	Y+6, r25	; 0x06
    45ae:	8d 83       	std	Y+5, r24	; 0x05
    45b0:	3f c0       	rjmp	.+126    	; 0x4630 <LCD_vSend_char+0xfc>
	else if (__tmp > 65535)
    45b2:	6f 81       	ldd	r22, Y+7	; 0x07
    45b4:	78 85       	ldd	r23, Y+8	; 0x08
    45b6:	89 85       	ldd	r24, Y+9	; 0x09
    45b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    45ba:	20 e0       	ldi	r18, 0x00	; 0
    45bc:	3f ef       	ldi	r19, 0xFF	; 255
    45be:	4f e7       	ldi	r20, 0x7F	; 127
    45c0:	57 e4       	ldi	r21, 0x47	; 71
    45c2:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    45c6:	18 16       	cp	r1, r24
    45c8:	4c f5       	brge	.+82     	; 0x461c <LCD_vSend_char+0xe8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    45cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    45ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    45d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    45d2:	20 e0       	ldi	r18, 0x00	; 0
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	40 e2       	ldi	r20, 0x20	; 32
    45d8:	51 e4       	ldi	r21, 0x41	; 65
    45da:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    45de:	dc 01       	movw	r26, r24
    45e0:	cb 01       	movw	r24, r22
    45e2:	bc 01       	movw	r22, r24
    45e4:	cd 01       	movw	r24, r26
    45e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45ea:	dc 01       	movw	r26, r24
    45ec:	cb 01       	movw	r24, r22
    45ee:	9e 83       	std	Y+6, r25	; 0x06
    45f0:	8d 83       	std	Y+5, r24	; 0x05
    45f2:	0f c0       	rjmp	.+30     	; 0x4612 <LCD_vSend_char+0xde>
    45f4:	88 ec       	ldi	r24, 0xC8	; 200
    45f6:	90 e0       	ldi	r25, 0x00	; 0
    45f8:	9c 83       	std	Y+4, r25	; 0x04
    45fa:	8b 83       	std	Y+3, r24	; 0x03
    45fc:	8b 81       	ldd	r24, Y+3	; 0x03
    45fe:	9c 81       	ldd	r25, Y+4	; 0x04
    4600:	01 97       	sbiw	r24, 0x01	; 1
    4602:	f1 f7       	brne	.-4      	; 0x4600 <LCD_vSend_char+0xcc>
    4604:	9c 83       	std	Y+4, r25	; 0x04
    4606:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4608:	8d 81       	ldd	r24, Y+5	; 0x05
    460a:	9e 81       	ldd	r25, Y+6	; 0x06
    460c:	01 97       	sbiw	r24, 0x01	; 1
    460e:	9e 83       	std	Y+6, r25	; 0x06
    4610:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4612:	8d 81       	ldd	r24, Y+5	; 0x05
    4614:	9e 81       	ldd	r25, Y+6	; 0x06
    4616:	00 97       	sbiw	r24, 0x00	; 0
    4618:	69 f7       	brne	.-38     	; 0x45f4 <LCD_vSend_char+0xc0>
    461a:	14 c0       	rjmp	.+40     	; 0x4644 <LCD_vSend_char+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    461c:	6f 81       	ldd	r22, Y+7	; 0x07
    461e:	78 85       	ldd	r23, Y+8	; 0x08
    4620:	89 85       	ldd	r24, Y+9	; 0x09
    4622:	9a 85       	ldd	r25, Y+10	; 0x0a
    4624:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4628:	dc 01       	movw	r26, r24
    462a:	cb 01       	movw	r24, r22
    462c:	9e 83       	std	Y+6, r25	; 0x06
    462e:	8d 83       	std	Y+5, r24	; 0x05
    4630:	8d 81       	ldd	r24, Y+5	; 0x05
    4632:	9e 81       	ldd	r25, Y+6	; 0x06
    4634:	9a 83       	std	Y+2, r25	; 0x02
    4636:	89 83       	std	Y+1, r24	; 0x01
    4638:	89 81       	ldd	r24, Y+1	; 0x01
    463a:	9a 81       	ldd	r25, Y+2	; 0x02
    463c:	01 97       	sbiw	r24, 0x01	; 1
    463e:	f1 f7       	brne	.-4      	; 0x463c <LCD_vSend_char+0x108>
    4640:	9a 83       	std	Y+2, r25	; 0x02
    4642:	89 83       	std	Y+1, r24	; 0x01
	send_falling_edge();
	write_high_nibble(DATA_PORT,data);
	send_falling_edge();
	#endif
	_delay_ms(1);
}
    4644:	2f 96       	adiw	r28, 0x0f	; 15
    4646:	0f b6       	in	r0, 0x3f	; 63
    4648:	f8 94       	cli
    464a:	de bf       	out	0x3e, r29	; 62
    464c:	0f be       	out	0x3f, r0	; 63
    464e:	cd bf       	out	0x3d, r28	; 61
    4650:	cf 91       	pop	r28
    4652:	df 91       	pop	r29
    4654:	08 95       	ret

00004656 <send_falling_edge>:

static void send_falling_edge()
{
    4656:	df 93       	push	r29
    4658:	cf 93       	push	r28
    465a:	cd b7       	in	r28, 0x3d	; 61
    465c:	de b7       	in	r29, 0x3e	; 62
    465e:	6c 97       	sbiw	r28, 0x1c	; 28
    4660:	0f b6       	in	r0, 0x3f	; 63
    4662:	f8 94       	cli
    4664:	de bf       	out	0x3e, r29	; 62
    4666:	0f be       	out	0x3f, r0	; 63
    4668:	cd bf       	out	0x3d, r28	; 61
	DIO_vwrite(CONTROL_PORT,EN,1);
    466a:	84 e4       	ldi	r24, 0x44	; 68
    466c:	63 e0       	ldi	r22, 0x03	; 3
    466e:	41 e0       	ldi	r20, 0x01	; 1
    4670:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
    4674:	80 e0       	ldi	r24, 0x00	; 0
    4676:	90 e0       	ldi	r25, 0x00	; 0
    4678:	a0 e0       	ldi	r26, 0x00	; 0
    467a:	b0 e4       	ldi	r27, 0x40	; 64
    467c:	89 8f       	std	Y+25, r24	; 0x19
    467e:	9a 8f       	std	Y+26, r25	; 0x1a
    4680:	ab 8f       	std	Y+27, r26	; 0x1b
    4682:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4684:	69 8d       	ldd	r22, Y+25	; 0x19
    4686:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4688:	8b 8d       	ldd	r24, Y+27	; 0x1b
    468a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    468c:	20 e0       	ldi	r18, 0x00	; 0
    468e:	30 e0       	ldi	r19, 0x00	; 0
    4690:	4a ef       	ldi	r20, 0xFA	; 250
    4692:	54 e4       	ldi	r21, 0x44	; 68
    4694:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4698:	dc 01       	movw	r26, r24
    469a:	cb 01       	movw	r24, r22
    469c:	8d 8b       	std	Y+21, r24	; 0x15
    469e:	9e 8b       	std	Y+22, r25	; 0x16
    46a0:	af 8b       	std	Y+23, r26	; 0x17
    46a2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    46a4:	6d 89       	ldd	r22, Y+21	; 0x15
    46a6:	7e 89       	ldd	r23, Y+22	; 0x16
    46a8:	8f 89       	ldd	r24, Y+23	; 0x17
    46aa:	98 8d       	ldd	r25, Y+24	; 0x18
    46ac:	20 e0       	ldi	r18, 0x00	; 0
    46ae:	30 e0       	ldi	r19, 0x00	; 0
    46b0:	40 e8       	ldi	r20, 0x80	; 128
    46b2:	5f e3       	ldi	r21, 0x3F	; 63
    46b4:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    46b8:	88 23       	and	r24, r24
    46ba:	2c f4       	brge	.+10     	; 0x46c6 <send_falling_edge+0x70>
		__ticks = 1;
    46bc:	81 e0       	ldi	r24, 0x01	; 1
    46be:	90 e0       	ldi	r25, 0x00	; 0
    46c0:	9c 8b       	std	Y+20, r25	; 0x14
    46c2:	8b 8b       	std	Y+19, r24	; 0x13
    46c4:	3f c0       	rjmp	.+126    	; 0x4744 <send_falling_edge+0xee>
	else if (__tmp > 65535)
    46c6:	6d 89       	ldd	r22, Y+21	; 0x15
    46c8:	7e 89       	ldd	r23, Y+22	; 0x16
    46ca:	8f 89       	ldd	r24, Y+23	; 0x17
    46cc:	98 8d       	ldd	r25, Y+24	; 0x18
    46ce:	20 e0       	ldi	r18, 0x00	; 0
    46d0:	3f ef       	ldi	r19, 0xFF	; 255
    46d2:	4f e7       	ldi	r20, 0x7F	; 127
    46d4:	57 e4       	ldi	r21, 0x47	; 71
    46d6:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    46da:	18 16       	cp	r1, r24
    46dc:	4c f5       	brge	.+82     	; 0x4730 <send_falling_edge+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46de:	69 8d       	ldd	r22, Y+25	; 0x19
    46e0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    46e2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    46e4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    46e6:	20 e0       	ldi	r18, 0x00	; 0
    46e8:	30 e0       	ldi	r19, 0x00	; 0
    46ea:	40 e2       	ldi	r20, 0x20	; 32
    46ec:	51 e4       	ldi	r21, 0x41	; 65
    46ee:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    46f2:	dc 01       	movw	r26, r24
    46f4:	cb 01       	movw	r24, r22
    46f6:	bc 01       	movw	r22, r24
    46f8:	cd 01       	movw	r24, r26
    46fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46fe:	dc 01       	movw	r26, r24
    4700:	cb 01       	movw	r24, r22
    4702:	9c 8b       	std	Y+20, r25	; 0x14
    4704:	8b 8b       	std	Y+19, r24	; 0x13
    4706:	0f c0       	rjmp	.+30     	; 0x4726 <send_falling_edge+0xd0>
    4708:	88 ec       	ldi	r24, 0xC8	; 200
    470a:	90 e0       	ldi	r25, 0x00	; 0
    470c:	9a 8b       	std	Y+18, r25	; 0x12
    470e:	89 8b       	std	Y+17, r24	; 0x11
    4710:	89 89       	ldd	r24, Y+17	; 0x11
    4712:	9a 89       	ldd	r25, Y+18	; 0x12
    4714:	01 97       	sbiw	r24, 0x01	; 1
    4716:	f1 f7       	brne	.-4      	; 0x4714 <send_falling_edge+0xbe>
    4718:	9a 8b       	std	Y+18, r25	; 0x12
    471a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    471c:	8b 89       	ldd	r24, Y+19	; 0x13
    471e:	9c 89       	ldd	r25, Y+20	; 0x14
    4720:	01 97       	sbiw	r24, 0x01	; 1
    4722:	9c 8b       	std	Y+20, r25	; 0x14
    4724:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4726:	8b 89       	ldd	r24, Y+19	; 0x13
    4728:	9c 89       	ldd	r25, Y+20	; 0x14
    472a:	00 97       	sbiw	r24, 0x00	; 0
    472c:	69 f7       	brne	.-38     	; 0x4708 <send_falling_edge+0xb2>
    472e:	14 c0       	rjmp	.+40     	; 0x4758 <send_falling_edge+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4730:	6d 89       	ldd	r22, Y+21	; 0x15
    4732:	7e 89       	ldd	r23, Y+22	; 0x16
    4734:	8f 89       	ldd	r24, Y+23	; 0x17
    4736:	98 8d       	ldd	r25, Y+24	; 0x18
    4738:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    473c:	dc 01       	movw	r26, r24
    473e:	cb 01       	movw	r24, r22
    4740:	9c 8b       	std	Y+20, r25	; 0x14
    4742:	8b 8b       	std	Y+19, r24	; 0x13
    4744:	8b 89       	ldd	r24, Y+19	; 0x13
    4746:	9c 89       	ldd	r25, Y+20	; 0x14
    4748:	98 8b       	std	Y+16, r25	; 0x10
    474a:	8f 87       	std	Y+15, r24	; 0x0f
    474c:	8f 85       	ldd	r24, Y+15	; 0x0f
    474e:	98 89       	ldd	r25, Y+16	; 0x10
    4750:	01 97       	sbiw	r24, 0x01	; 1
    4752:	f1 f7       	brne	.-4      	; 0x4750 <send_falling_edge+0xfa>
    4754:	98 8b       	std	Y+16, r25	; 0x10
    4756:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	DIO_vwrite(CONTROL_PORT,EN,0);
    4758:	84 e4       	ldi	r24, 0x44	; 68
    475a:	63 e0       	ldi	r22, 0x03	; 3
    475c:	40 e0       	ldi	r20, 0x00	; 0
    475e:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
    4762:	80 e0       	ldi	r24, 0x00	; 0
    4764:	90 e0       	ldi	r25, 0x00	; 0
    4766:	a0 e0       	ldi	r26, 0x00	; 0
    4768:	b0 e4       	ldi	r27, 0x40	; 64
    476a:	8b 87       	std	Y+11, r24	; 0x0b
    476c:	9c 87       	std	Y+12, r25	; 0x0c
    476e:	ad 87       	std	Y+13, r26	; 0x0d
    4770:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4772:	6b 85       	ldd	r22, Y+11	; 0x0b
    4774:	7c 85       	ldd	r23, Y+12	; 0x0c
    4776:	8d 85       	ldd	r24, Y+13	; 0x0d
    4778:	9e 85       	ldd	r25, Y+14	; 0x0e
    477a:	20 e0       	ldi	r18, 0x00	; 0
    477c:	30 e0       	ldi	r19, 0x00	; 0
    477e:	4a ef       	ldi	r20, 0xFA	; 250
    4780:	54 e4       	ldi	r21, 0x44	; 68
    4782:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4786:	dc 01       	movw	r26, r24
    4788:	cb 01       	movw	r24, r22
    478a:	8f 83       	std	Y+7, r24	; 0x07
    478c:	98 87       	std	Y+8, r25	; 0x08
    478e:	a9 87       	std	Y+9, r26	; 0x09
    4790:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4792:	6f 81       	ldd	r22, Y+7	; 0x07
    4794:	78 85       	ldd	r23, Y+8	; 0x08
    4796:	89 85       	ldd	r24, Y+9	; 0x09
    4798:	9a 85       	ldd	r25, Y+10	; 0x0a
    479a:	20 e0       	ldi	r18, 0x00	; 0
    479c:	30 e0       	ldi	r19, 0x00	; 0
    479e:	40 e8       	ldi	r20, 0x80	; 128
    47a0:	5f e3       	ldi	r21, 0x3F	; 63
    47a2:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    47a6:	88 23       	and	r24, r24
    47a8:	2c f4       	brge	.+10     	; 0x47b4 <send_falling_edge+0x15e>
		__ticks = 1;
    47aa:	81 e0       	ldi	r24, 0x01	; 1
    47ac:	90 e0       	ldi	r25, 0x00	; 0
    47ae:	9e 83       	std	Y+6, r25	; 0x06
    47b0:	8d 83       	std	Y+5, r24	; 0x05
    47b2:	3f c0       	rjmp	.+126    	; 0x4832 <send_falling_edge+0x1dc>
	else if (__tmp > 65535)
    47b4:	6f 81       	ldd	r22, Y+7	; 0x07
    47b6:	78 85       	ldd	r23, Y+8	; 0x08
    47b8:	89 85       	ldd	r24, Y+9	; 0x09
    47ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    47bc:	20 e0       	ldi	r18, 0x00	; 0
    47be:	3f ef       	ldi	r19, 0xFF	; 255
    47c0:	4f e7       	ldi	r20, 0x7F	; 127
    47c2:	57 e4       	ldi	r21, 0x47	; 71
    47c4:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    47c8:	18 16       	cp	r1, r24
    47ca:	4c f5       	brge	.+82     	; 0x481e <send_falling_edge+0x1c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    47ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    47d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    47d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    47d4:	20 e0       	ldi	r18, 0x00	; 0
    47d6:	30 e0       	ldi	r19, 0x00	; 0
    47d8:	40 e2       	ldi	r20, 0x20	; 32
    47da:	51 e4       	ldi	r21, 0x41	; 65
    47dc:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    47e0:	dc 01       	movw	r26, r24
    47e2:	cb 01       	movw	r24, r22
    47e4:	bc 01       	movw	r22, r24
    47e6:	cd 01       	movw	r24, r26
    47e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47ec:	dc 01       	movw	r26, r24
    47ee:	cb 01       	movw	r24, r22
    47f0:	9e 83       	std	Y+6, r25	; 0x06
    47f2:	8d 83       	std	Y+5, r24	; 0x05
    47f4:	0f c0       	rjmp	.+30     	; 0x4814 <send_falling_edge+0x1be>
    47f6:	88 ec       	ldi	r24, 0xC8	; 200
    47f8:	90 e0       	ldi	r25, 0x00	; 0
    47fa:	9c 83       	std	Y+4, r25	; 0x04
    47fc:	8b 83       	std	Y+3, r24	; 0x03
    47fe:	8b 81       	ldd	r24, Y+3	; 0x03
    4800:	9c 81       	ldd	r25, Y+4	; 0x04
    4802:	01 97       	sbiw	r24, 0x01	; 1
    4804:	f1 f7       	brne	.-4      	; 0x4802 <send_falling_edge+0x1ac>
    4806:	9c 83       	std	Y+4, r25	; 0x04
    4808:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    480a:	8d 81       	ldd	r24, Y+5	; 0x05
    480c:	9e 81       	ldd	r25, Y+6	; 0x06
    480e:	01 97       	sbiw	r24, 0x01	; 1
    4810:	9e 83       	std	Y+6, r25	; 0x06
    4812:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4814:	8d 81       	ldd	r24, Y+5	; 0x05
    4816:	9e 81       	ldd	r25, Y+6	; 0x06
    4818:	00 97       	sbiw	r24, 0x00	; 0
    481a:	69 f7       	brne	.-38     	; 0x47f6 <send_falling_edge+0x1a0>
    481c:	14 c0       	rjmp	.+40     	; 0x4846 <send_falling_edge+0x1f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    481e:	6f 81       	ldd	r22, Y+7	; 0x07
    4820:	78 85       	ldd	r23, Y+8	; 0x08
    4822:	89 85       	ldd	r24, Y+9	; 0x09
    4824:	9a 85       	ldd	r25, Y+10	; 0x0a
    4826:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    482a:	dc 01       	movw	r26, r24
    482c:	cb 01       	movw	r24, r22
    482e:	9e 83       	std	Y+6, r25	; 0x06
    4830:	8d 83       	std	Y+5, r24	; 0x05
    4832:	8d 81       	ldd	r24, Y+5	; 0x05
    4834:	9e 81       	ldd	r25, Y+6	; 0x06
    4836:	9a 83       	std	Y+2, r25	; 0x02
    4838:	89 83       	std	Y+1, r24	; 0x01
    483a:	89 81       	ldd	r24, Y+1	; 0x01
    483c:	9a 81       	ldd	r25, Y+2	; 0x02
    483e:	01 97       	sbiw	r24, 0x01	; 1
    4840:	f1 f7       	brne	.-4      	; 0x483e <send_falling_edge+0x1e8>
    4842:	9a 83       	std	Y+2, r25	; 0x02
    4844:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    4846:	6c 96       	adiw	r28, 0x1c	; 28
    4848:	0f b6       	in	r0, 0x3f	; 63
    484a:	f8 94       	cli
    484c:	de bf       	out	0x3e, r29	; 62
    484e:	0f be       	out	0x3f, r0	; 63
    4850:	cd bf       	out	0x3d, r28	; 61
    4852:	cf 91       	pop	r28
    4854:	df 91       	pop	r29
    4856:	08 95       	ret

00004858 <LCD_vSend_string>:

void LCD_vSend_string(char *data){
    4858:	df 93       	push	r29
    485a:	cf 93       	push	r28
    485c:	00 d0       	rcall	.+0      	; 0x485e <LCD_vSend_string+0x6>
    485e:	cd b7       	in	r28, 0x3d	; 61
    4860:	de b7       	in	r29, 0x3e	; 62
    4862:	9a 83       	std	Y+2, r25	; 0x02
    4864:	89 83       	std	Y+1, r24	; 0x01
    4866:	0a c0       	rjmp	.+20     	; 0x487c <LCD_vSend_string+0x24>

	while(*data != '\0' )
	{
		LCD_vSend_char(*data);
    4868:	e9 81       	ldd	r30, Y+1	; 0x01
    486a:	fa 81       	ldd	r31, Y+2	; 0x02
    486c:	80 81       	ld	r24, Z
    486e:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
		data++;
    4872:	89 81       	ldd	r24, Y+1	; 0x01
    4874:	9a 81       	ldd	r25, Y+2	; 0x02
    4876:	01 96       	adiw	r24, 0x01	; 1
    4878:	9a 83       	std	Y+2, r25	; 0x02
    487a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}

void LCD_vSend_string(char *data){

	while(*data != '\0' )
    487c:	e9 81       	ldd	r30, Y+1	; 0x01
    487e:	fa 81       	ldd	r31, Y+2	; 0x02
    4880:	80 81       	ld	r24, Z
    4882:	88 23       	and	r24, r24
    4884:	89 f7       	brne	.-30     	; 0x4868 <LCD_vSend_string+0x10>
	{
		LCD_vSend_char(*data);
		data++;
	}
}
    4886:	0f 90       	pop	r0
    4888:	0f 90       	pop	r0
    488a:	cf 91       	pop	r28
    488c:	df 91       	pop	r29
    488e:	08 95       	ret

00004890 <LCD_clearscreen>:

void LCD_clearscreen()
{
    4890:	df 93       	push	r29
    4892:	cf 93       	push	r28
    4894:	cd b7       	in	r28, 0x3d	; 61
    4896:	de b7       	in	r29, 0x3e	; 62
    4898:	2e 97       	sbiw	r28, 0x0e	; 14
    489a:	0f b6       	in	r0, 0x3f	; 63
    489c:	f8 94       	cli
    489e:	de bf       	out	0x3e, r29	; 62
    48a0:	0f be       	out	0x3f, r0	; 63
    48a2:	cd bf       	out	0x3d, r28	; 61
	LCD_vSend_cmd(CLR_SCREEN);
    48a4:	81 e0       	ldi	r24, 0x01	; 1
    48a6:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    48aa:	80 e0       	ldi	r24, 0x00	; 0
    48ac:	90 e0       	ldi	r25, 0x00	; 0
    48ae:	a0 e2       	ldi	r26, 0x20	; 32
    48b0:	b1 e4       	ldi	r27, 0x41	; 65
    48b2:	8b 87       	std	Y+11, r24	; 0x0b
    48b4:	9c 87       	std	Y+12, r25	; 0x0c
    48b6:	ad 87       	std	Y+13, r26	; 0x0d
    48b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    48bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    48be:	8d 85       	ldd	r24, Y+13	; 0x0d
    48c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    48c2:	20 e0       	ldi	r18, 0x00	; 0
    48c4:	30 e0       	ldi	r19, 0x00	; 0
    48c6:	4a ef       	ldi	r20, 0xFA	; 250
    48c8:	54 e4       	ldi	r21, 0x44	; 68
    48ca:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    48ce:	dc 01       	movw	r26, r24
    48d0:	cb 01       	movw	r24, r22
    48d2:	8f 83       	std	Y+7, r24	; 0x07
    48d4:	98 87       	std	Y+8, r25	; 0x08
    48d6:	a9 87       	std	Y+9, r26	; 0x09
    48d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    48da:	6f 81       	ldd	r22, Y+7	; 0x07
    48dc:	78 85       	ldd	r23, Y+8	; 0x08
    48de:	89 85       	ldd	r24, Y+9	; 0x09
    48e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    48e2:	20 e0       	ldi	r18, 0x00	; 0
    48e4:	30 e0       	ldi	r19, 0x00	; 0
    48e6:	40 e8       	ldi	r20, 0x80	; 128
    48e8:	5f e3       	ldi	r21, 0x3F	; 63
    48ea:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    48ee:	88 23       	and	r24, r24
    48f0:	2c f4       	brge	.+10     	; 0x48fc <LCD_clearscreen+0x6c>
		__ticks = 1;
    48f2:	81 e0       	ldi	r24, 0x01	; 1
    48f4:	90 e0       	ldi	r25, 0x00	; 0
    48f6:	9e 83       	std	Y+6, r25	; 0x06
    48f8:	8d 83       	std	Y+5, r24	; 0x05
    48fa:	3f c0       	rjmp	.+126    	; 0x497a <LCD_clearscreen+0xea>
	else if (__tmp > 65535)
    48fc:	6f 81       	ldd	r22, Y+7	; 0x07
    48fe:	78 85       	ldd	r23, Y+8	; 0x08
    4900:	89 85       	ldd	r24, Y+9	; 0x09
    4902:	9a 85       	ldd	r25, Y+10	; 0x0a
    4904:	20 e0       	ldi	r18, 0x00	; 0
    4906:	3f ef       	ldi	r19, 0xFF	; 255
    4908:	4f e7       	ldi	r20, 0x7F	; 127
    490a:	57 e4       	ldi	r21, 0x47	; 71
    490c:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4910:	18 16       	cp	r1, r24
    4912:	4c f5       	brge	.+82     	; 0x4966 <LCD_clearscreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4914:	6b 85       	ldd	r22, Y+11	; 0x0b
    4916:	7c 85       	ldd	r23, Y+12	; 0x0c
    4918:	8d 85       	ldd	r24, Y+13	; 0x0d
    491a:	9e 85       	ldd	r25, Y+14	; 0x0e
    491c:	20 e0       	ldi	r18, 0x00	; 0
    491e:	30 e0       	ldi	r19, 0x00	; 0
    4920:	40 e2       	ldi	r20, 0x20	; 32
    4922:	51 e4       	ldi	r21, 0x41	; 65
    4924:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4928:	dc 01       	movw	r26, r24
    492a:	cb 01       	movw	r24, r22
    492c:	bc 01       	movw	r22, r24
    492e:	cd 01       	movw	r24, r26
    4930:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4934:	dc 01       	movw	r26, r24
    4936:	cb 01       	movw	r24, r22
    4938:	9e 83       	std	Y+6, r25	; 0x06
    493a:	8d 83       	std	Y+5, r24	; 0x05
    493c:	0f c0       	rjmp	.+30     	; 0x495c <LCD_clearscreen+0xcc>
    493e:	88 ec       	ldi	r24, 0xC8	; 200
    4940:	90 e0       	ldi	r25, 0x00	; 0
    4942:	9c 83       	std	Y+4, r25	; 0x04
    4944:	8b 83       	std	Y+3, r24	; 0x03
    4946:	8b 81       	ldd	r24, Y+3	; 0x03
    4948:	9c 81       	ldd	r25, Y+4	; 0x04
    494a:	01 97       	sbiw	r24, 0x01	; 1
    494c:	f1 f7       	brne	.-4      	; 0x494a <LCD_clearscreen+0xba>
    494e:	9c 83       	std	Y+4, r25	; 0x04
    4950:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4952:	8d 81       	ldd	r24, Y+5	; 0x05
    4954:	9e 81       	ldd	r25, Y+6	; 0x06
    4956:	01 97       	sbiw	r24, 0x01	; 1
    4958:	9e 83       	std	Y+6, r25	; 0x06
    495a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    495c:	8d 81       	ldd	r24, Y+5	; 0x05
    495e:	9e 81       	ldd	r25, Y+6	; 0x06
    4960:	00 97       	sbiw	r24, 0x00	; 0
    4962:	69 f7       	brne	.-38     	; 0x493e <LCD_clearscreen+0xae>
    4964:	14 c0       	rjmp	.+40     	; 0x498e <LCD_clearscreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4966:	6f 81       	ldd	r22, Y+7	; 0x07
    4968:	78 85       	ldd	r23, Y+8	; 0x08
    496a:	89 85       	ldd	r24, Y+9	; 0x09
    496c:	9a 85       	ldd	r25, Y+10	; 0x0a
    496e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4972:	dc 01       	movw	r26, r24
    4974:	cb 01       	movw	r24, r22
    4976:	9e 83       	std	Y+6, r25	; 0x06
    4978:	8d 83       	std	Y+5, r24	; 0x05
    497a:	8d 81       	ldd	r24, Y+5	; 0x05
    497c:	9e 81       	ldd	r25, Y+6	; 0x06
    497e:	9a 83       	std	Y+2, r25	; 0x02
    4980:	89 83       	std	Y+1, r24	; 0x01
    4982:	89 81       	ldd	r24, Y+1	; 0x01
    4984:	9a 81       	ldd	r25, Y+2	; 0x02
    4986:	01 97       	sbiw	r24, 0x01	; 1
    4988:	f1 f7       	brne	.-4      	; 0x4986 <LCD_clearscreen+0xf6>
    498a:	9a 83       	std	Y+2, r25	; 0x02
    498c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    498e:	2e 96       	adiw	r28, 0x0e	; 14
    4990:	0f b6       	in	r0, 0x3f	; 63
    4992:	f8 94       	cli
    4994:	de bf       	out	0x3e, r29	; 62
    4996:	0f be       	out	0x3f, r0	; 63
    4998:	cd bf       	out	0x3d, r28	; 61
    499a:	cf 91       	pop	r28
    499c:	df 91       	pop	r29
    499e:	08 95       	ret

000049a0 <LCD_movecursor>:

void LCD_movecursor(char row,char coloumn)
{
    49a0:	df 93       	push	r29
    49a2:	cf 93       	push	r28
    49a4:	cd b7       	in	r28, 0x3d	; 61
    49a6:	de b7       	in	r29, 0x3e	; 62
    49a8:	61 97       	sbiw	r28, 0x11	; 17
    49aa:	0f b6       	in	r0, 0x3f	; 63
    49ac:	f8 94       	cli
    49ae:	de bf       	out	0x3e, r29	; 62
    49b0:	0f be       	out	0x3f, r0	; 63
    49b2:	cd bf       	out	0x3d, r28	; 61
    49b4:	88 8b       	std	Y+16, r24	; 0x10
    49b6:	69 8b       	std	Y+17, r22	; 0x11
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
    49b8:	88 89       	ldd	r24, Y+16	; 0x10
    49ba:	83 30       	cpi	r24, 0x03	; 3
    49bc:	48 f4       	brcc	.+18     	; 0x49d0 <LCD_movecursor+0x30>
    49be:	88 89       	ldd	r24, Y+16	; 0x10
    49c0:	88 23       	and	r24, r24
    49c2:	31 f0       	breq	.+12     	; 0x49d0 <LCD_movecursor+0x30>
    49c4:	89 89       	ldd	r24, Y+17	; 0x11
    49c6:	81 31       	cpi	r24, 0x11	; 17
    49c8:	18 f4       	brcc	.+6      	; 0x49d0 <LCD_movecursor+0x30>
    49ca:	89 89       	ldd	r24, Y+17	; 0x11
    49cc:	88 23       	and	r24, r24
    49ce:	19 f4       	brne	.+6      	; 0x49d6 <LCD_movecursor+0x36>
	{
		data=0x80;
    49d0:	80 e8       	ldi	r24, 0x80	; 128
    49d2:	8f 87       	std	Y+15, r24	; 0x0f
    49d4:	0d c0       	rjmp	.+26     	; 0x49f0 <LCD_movecursor+0x50>
	}
	else if(row==1)
    49d6:	88 89       	ldd	r24, Y+16	; 0x10
    49d8:	81 30       	cpi	r24, 0x01	; 1
    49da:	21 f4       	brne	.+8      	; 0x49e4 <LCD_movecursor+0x44>
	{
		data=0x80+coloumn-1 ;
    49dc:	89 89       	ldd	r24, Y+17	; 0x11
    49de:	81 58       	subi	r24, 0x81	; 129
    49e0:	8f 87       	std	Y+15, r24	; 0x0f
    49e2:	06 c0       	rjmp	.+12     	; 0x49f0 <LCD_movecursor+0x50>
	}
	else if (row==2)
    49e4:	88 89       	ldd	r24, Y+16	; 0x10
    49e6:	82 30       	cpi	r24, 0x02	; 2
    49e8:	19 f4       	brne	.+6      	; 0x49f0 <LCD_movecursor+0x50>
	{
		data=0xc0+coloumn-1;
    49ea:	89 89       	ldd	r24, Y+17	; 0x11
    49ec:	81 54       	subi	r24, 0x41	; 65
    49ee:	8f 87       	std	Y+15, r24	; 0x0f
	}
	LCD_vSend_cmd(data);
    49f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    49f2:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    49f6:	80 e0       	ldi	r24, 0x00	; 0
    49f8:	90 e0       	ldi	r25, 0x00	; 0
    49fa:	a0 e8       	ldi	r26, 0x80	; 128
    49fc:	bf e3       	ldi	r27, 0x3F	; 63
    49fe:	8b 87       	std	Y+11, r24	; 0x0b
    4a00:	9c 87       	std	Y+12, r25	; 0x0c
    4a02:	ad 87       	std	Y+13, r26	; 0x0d
    4a04:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a06:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a08:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a0e:	20 e0       	ldi	r18, 0x00	; 0
    4a10:	30 e0       	ldi	r19, 0x00	; 0
    4a12:	4a ef       	ldi	r20, 0xFA	; 250
    4a14:	54 e4       	ldi	r21, 0x44	; 68
    4a16:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4a1a:	dc 01       	movw	r26, r24
    4a1c:	cb 01       	movw	r24, r22
    4a1e:	8f 83       	std	Y+7, r24	; 0x07
    4a20:	98 87       	std	Y+8, r25	; 0x08
    4a22:	a9 87       	std	Y+9, r26	; 0x09
    4a24:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4a26:	6f 81       	ldd	r22, Y+7	; 0x07
    4a28:	78 85       	ldd	r23, Y+8	; 0x08
    4a2a:	89 85       	ldd	r24, Y+9	; 0x09
    4a2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a2e:	20 e0       	ldi	r18, 0x00	; 0
    4a30:	30 e0       	ldi	r19, 0x00	; 0
    4a32:	40 e8       	ldi	r20, 0x80	; 128
    4a34:	5f e3       	ldi	r21, 0x3F	; 63
    4a36:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4a3a:	88 23       	and	r24, r24
    4a3c:	2c f4       	brge	.+10     	; 0x4a48 <LCD_movecursor+0xa8>
		__ticks = 1;
    4a3e:	81 e0       	ldi	r24, 0x01	; 1
    4a40:	90 e0       	ldi	r25, 0x00	; 0
    4a42:	9e 83       	std	Y+6, r25	; 0x06
    4a44:	8d 83       	std	Y+5, r24	; 0x05
    4a46:	3f c0       	rjmp	.+126    	; 0x4ac6 <LCD_movecursor+0x126>
	else if (__tmp > 65535)
    4a48:	6f 81       	ldd	r22, Y+7	; 0x07
    4a4a:	78 85       	ldd	r23, Y+8	; 0x08
    4a4c:	89 85       	ldd	r24, Y+9	; 0x09
    4a4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a50:	20 e0       	ldi	r18, 0x00	; 0
    4a52:	3f ef       	ldi	r19, 0xFF	; 255
    4a54:	4f e7       	ldi	r20, 0x7F	; 127
    4a56:	57 e4       	ldi	r21, 0x47	; 71
    4a58:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4a5c:	18 16       	cp	r1, r24
    4a5e:	4c f5       	brge	.+82     	; 0x4ab2 <LCD_movecursor+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a60:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a62:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a64:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a66:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a68:	20 e0       	ldi	r18, 0x00	; 0
    4a6a:	30 e0       	ldi	r19, 0x00	; 0
    4a6c:	40 e2       	ldi	r20, 0x20	; 32
    4a6e:	51 e4       	ldi	r21, 0x41	; 65
    4a70:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4a74:	dc 01       	movw	r26, r24
    4a76:	cb 01       	movw	r24, r22
    4a78:	bc 01       	movw	r22, r24
    4a7a:	cd 01       	movw	r24, r26
    4a7c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a80:	dc 01       	movw	r26, r24
    4a82:	cb 01       	movw	r24, r22
    4a84:	9e 83       	std	Y+6, r25	; 0x06
    4a86:	8d 83       	std	Y+5, r24	; 0x05
    4a88:	0f c0       	rjmp	.+30     	; 0x4aa8 <LCD_movecursor+0x108>
    4a8a:	88 ec       	ldi	r24, 0xC8	; 200
    4a8c:	90 e0       	ldi	r25, 0x00	; 0
    4a8e:	9c 83       	std	Y+4, r25	; 0x04
    4a90:	8b 83       	std	Y+3, r24	; 0x03
    4a92:	8b 81       	ldd	r24, Y+3	; 0x03
    4a94:	9c 81       	ldd	r25, Y+4	; 0x04
    4a96:	01 97       	sbiw	r24, 0x01	; 1
    4a98:	f1 f7       	brne	.-4      	; 0x4a96 <LCD_movecursor+0xf6>
    4a9a:	9c 83       	std	Y+4, r25	; 0x04
    4a9c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    4aa0:	9e 81       	ldd	r25, Y+6	; 0x06
    4aa2:	01 97       	sbiw	r24, 0x01	; 1
    4aa4:	9e 83       	std	Y+6, r25	; 0x06
    4aa6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4aa8:	8d 81       	ldd	r24, Y+5	; 0x05
    4aaa:	9e 81       	ldd	r25, Y+6	; 0x06
    4aac:	00 97       	sbiw	r24, 0x00	; 0
    4aae:	69 f7       	brne	.-38     	; 0x4a8a <LCD_movecursor+0xea>
    4ab0:	14 c0       	rjmp	.+40     	; 0x4ada <LCD_movecursor+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ab2:	6f 81       	ldd	r22, Y+7	; 0x07
    4ab4:	78 85       	ldd	r23, Y+8	; 0x08
    4ab6:	89 85       	ldd	r24, Y+9	; 0x09
    4ab8:	9a 85       	ldd	r25, Y+10	; 0x0a
    4aba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4abe:	dc 01       	movw	r26, r24
    4ac0:	cb 01       	movw	r24, r22
    4ac2:	9e 83       	std	Y+6, r25	; 0x06
    4ac4:	8d 83       	std	Y+5, r24	; 0x05
    4ac6:	8d 81       	ldd	r24, Y+5	; 0x05
    4ac8:	9e 81       	ldd	r25, Y+6	; 0x06
    4aca:	9a 83       	std	Y+2, r25	; 0x02
    4acc:	89 83       	std	Y+1, r24	; 0x01
    4ace:	89 81       	ldd	r24, Y+1	; 0x01
    4ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ad2:	01 97       	sbiw	r24, 0x01	; 1
    4ad4:	f1 f7       	brne	.-4      	; 0x4ad2 <LCD_movecursor+0x132>
    4ad6:	9a 83       	std	Y+2, r25	; 0x02
    4ad8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    4ada:	61 96       	adiw	r28, 0x11	; 17
    4adc:	0f b6       	in	r0, 0x3f	; 63
    4ade:	f8 94       	cli
    4ae0:	de bf       	out	0x3e, r29	; 62
    4ae2:	0f be       	out	0x3f, r0	; 63
    4ae4:	cd bf       	out	0x3d, r28	; 61
    4ae6:	cf 91       	pop	r28
    4ae8:	df 91       	pop	r29
    4aea:	08 95       	ret

00004aec <LCD_store_custom_char>:



void LCD_store_custom_char(unsigned char location,char custom_char[]){
    4aec:	df 93       	push	r29
    4aee:	cf 93       	push	r28
    4af0:	00 d0       	rcall	.+0      	; 0x4af2 <LCD_store_custom_char+0x6>
    4af2:	00 d0       	rcall	.+0      	; 0x4af4 <LCD_store_custom_char+0x8>
    4af4:	cd b7       	in	r28, 0x3d	; 61
    4af6:	de b7       	in	r29, 0x3e	; 62
    4af8:	8a 83       	std	Y+2, r24	; 0x02
    4afa:	7c 83       	std	Y+4, r23	; 0x04
    4afc:	6b 83       	std	Y+3, r22	; 0x03

	LCD_vSend_cmd(64+(location-1)*8);
    4afe:	8a 81       	ldd	r24, Y+2	; 0x02
    4b00:	88 2f       	mov	r24, r24
    4b02:	90 e0       	ldi	r25, 0x00	; 0
    4b04:	07 96       	adiw	r24, 0x07	; 7
    4b06:	88 0f       	add	r24, r24
    4b08:	99 1f       	adc	r25, r25
    4b0a:	88 0f       	add	r24, r24
    4b0c:	99 1f       	adc	r25, r25
    4b0e:	88 0f       	add	r24, r24
    4b10:	99 1f       	adc	r25, r25
    4b12:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>

	for (char i=0;i<8;i++)
    4b16:	19 82       	std	Y+1, r1	; 0x01
    4b18:	0e c0       	rjmp	.+28     	; 0x4b36 <LCD_store_custom_char+0x4a>
	{
		LCD_vSend_char(custom_char[i]);
    4b1a:	89 81       	ldd	r24, Y+1	; 0x01
    4b1c:	28 2f       	mov	r18, r24
    4b1e:	30 e0       	ldi	r19, 0x00	; 0
    4b20:	8b 81       	ldd	r24, Y+3	; 0x03
    4b22:	9c 81       	ldd	r25, Y+4	; 0x04
    4b24:	fc 01       	movw	r30, r24
    4b26:	e2 0f       	add	r30, r18
    4b28:	f3 1f       	adc	r31, r19
    4b2a:	80 81       	ld	r24, Z
    4b2c:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>

void LCD_store_custom_char(unsigned char location,char custom_char[]){

	LCD_vSend_cmd(64+(location-1)*8);

	for (char i=0;i<8;i++)
    4b30:	89 81       	ldd	r24, Y+1	; 0x01
    4b32:	8f 5f       	subi	r24, 0xFF	; 255
    4b34:	89 83       	std	Y+1, r24	; 0x01
    4b36:	89 81       	ldd	r24, Y+1	; 0x01
    4b38:	88 30       	cpi	r24, 0x08	; 8
    4b3a:	78 f3       	brcs	.-34     	; 0x4b1a <LCD_store_custom_char+0x2e>
	{
		LCD_vSend_char(custom_char[i]);
	}
}
    4b3c:	0f 90       	pop	r0
    4b3e:	0f 90       	pop	r0
    4b40:	0f 90       	pop	r0
    4b42:	0f 90       	pop	r0
    4b44:	cf 91       	pop	r28
    4b46:	df 91       	pop	r29
    4b48:	08 95       	ret

00004b4a <LCD_diplay_custom_char>:


void LCD_diplay_custom_char(unsigned char location){
    4b4a:	df 93       	push	r29
    4b4c:	cf 93       	push	r28
    4b4e:	0f 92       	push	r0
    4b50:	cd b7       	in	r28, 0x3d	; 61
    4b52:	de b7       	in	r29, 0x3e	; 62
    4b54:	89 83       	std	Y+1, r24	; 0x01
	LCD_vSend_char(location-1);
    4b56:	89 81       	ldd	r24, Y+1	; 0x01
    4b58:	81 50       	subi	r24, 0x01	; 1
    4b5a:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
}
    4b5e:	0f 90       	pop	r0
    4b60:	cf 91       	pop	r28
    4b62:	df 91       	pop	r29
    4b64:	08 95       	ret

00004b66 <in_num1>:
signed char length = 0;
char res_length = 0, notloop = 1;
char no_interrupt = 1;

void in_num1()
{
    4b66:	df 93       	push	r29
    4b68:	cf 93       	push	r28
    4b6a:	cd b7       	in	r28, 0x3d	; 61
    4b6c:	de b7       	in	r29, 0x3e	; 62
    4b6e:	e5 97       	sbiw	r28, 0x35	; 53
    4b70:	0f b6       	in	r0, 0x3f	; 63
    4b72:	f8 94       	cli
    4b74:	de bf       	out	0x3e, r29	; 62
    4b76:	0f be       	out	0x3f, r0	; 63
    4b78:	cd bf       	out	0x3d, r28	; 61
    char x = 0;
    4b7a:	1d aa       	std	Y+53, r1	; 0x35
    length = 0;
    4b7c:	10 92 b0 01 	sts	0x01B0, r1
    floated = 0;
    4b80:	10 92 b3 01 	sts	0x01B3, r1
    double sign = 1;
    4b84:	80 e0       	ldi	r24, 0x00	; 0
    4b86:	90 e0       	ldi	r25, 0x00	; 0
    4b88:	a0 e8       	ldi	r26, 0x80	; 128
    4b8a:	bf e3       	ldi	r27, 0x3F	; 63
    4b8c:	89 ab       	std	Y+49, r24	; 0x31
    4b8e:	9a ab       	std	Y+50, r25	; 0x32
    4b90:	ab ab       	std	Y+51, r26	; 0x33
    4b92:	bc ab       	std	Y+52, r27	; 0x34
    char s = 0;
    4b94:	18 aa       	std	Y+48, r1	; 0x30

    if (notloop == 1)
    4b96:	80 91 96 01 	lds	r24, 0x0196
    4b9a:	81 30       	cpi	r24, 0x01	; 1
    4b9c:	09 f0       	breq	.+2      	; 0x4ba0 <in_num1+0x3a>
    4b9e:	f2 c1       	rjmp	.+996    	; 0x4f84 <in_num1+0x41e>
    {
        while (1)
        {
            x = keypad_u8check_press();
    4ba0:	0e 94 62 30 	call	0x60c4	; 0x60c4 <keypad_u8check_press>
    4ba4:	8d ab       	std	Y+53, r24	; 0x35
            if (x != 0xff) {
    4ba6:	8d a9       	ldd	r24, Y+53	; 0x35
    4ba8:	8f 3f       	cpi	r24, 0xFF	; 255
    4baa:	d1 f3       	breq	.-12     	; 0x4ba0 <in_num1+0x3a>
                if (x >= '0' && x <= '9' && length < 5)
    4bac:	8d a9       	ldd	r24, Y+53	; 0x35
    4bae:	80 33       	cpi	r24, 0x30	; 48
    4bb0:	08 f4       	brcc	.+2      	; 0x4bb4 <in_num1+0x4e>
    4bb2:	a9 c0       	rjmp	.+338    	; 0x4d06 <in_num1+0x1a0>
    4bb4:	8d a9       	ldd	r24, Y+53	; 0x35
    4bb6:	8a 33       	cpi	r24, 0x3A	; 58
    4bb8:	08 f0       	brcs	.+2      	; 0x4bbc <in_num1+0x56>
    4bba:	a5 c0       	rjmp	.+330    	; 0x4d06 <in_num1+0x1a0>
    4bbc:	80 91 b0 01 	lds	r24, 0x01B0
    4bc0:	85 30       	cpi	r24, 0x05	; 5
    4bc2:	0c f0       	brlt	.+2      	; 0x4bc6 <in_num1+0x60>
    4bc4:	a0 c0       	rjmp	.+320    	; 0x4d06 <in_num1+0x1a0>
                {
                    if (!(length == 0 && x == '0'))
    4bc6:	80 91 b0 01 	lds	r24, 0x01B0
    4bca:	88 23       	and	r24, r24
    4bcc:	21 f4       	brne	.+8      	; 0x4bd6 <in_num1+0x70>
    4bce:	8d a9       	ldd	r24, Y+53	; 0x35
    4bd0:	80 33       	cpi	r24, 0x30	; 48
    4bd2:	09 f4       	brne	.+2      	; 0x4bd6 <in_num1+0x70>
    4bd4:	64 c1       	rjmp	.+712    	; 0x4e9e <in_num1+0x338>
                    {
                        LCD_vSend_char(x);
    4bd6:	8d a9       	ldd	r24, Y+53	; 0x35
    4bd8:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                        length++;
    4bdc:	80 91 b0 01 	lds	r24, 0x01B0
    4be0:	8f 5f       	subi	r24, 0xFF	; 255
    4be2:	80 93 b0 01 	sts	0x01B0, r24
                        if (floated > 0)
    4be6:	80 91 b3 01 	lds	r24, 0x01B3
    4bea:	88 23       	and	r24, r24
    4bec:	09 f4       	brne	.+2      	; 0x4bf0 <in_num1+0x8a>
    4bee:	4c c0       	rjmp	.+152    	; 0x4c88 <in_num1+0x122>
                        {
                            double a = (x - '0');
    4bf0:	8d a9       	ldd	r24, Y+53	; 0x35
    4bf2:	88 2f       	mov	r24, r24
    4bf4:	90 e0       	ldi	r25, 0x00	; 0
    4bf6:	c0 97       	sbiw	r24, 0x30	; 48
    4bf8:	aa 27       	eor	r26, r26
    4bfa:	97 fd       	sbrc	r25, 7
    4bfc:	a0 95       	com	r26
    4bfe:	ba 2f       	mov	r27, r26
    4c00:	bc 01       	movw	r22, r24
    4c02:	cd 01       	movw	r24, r26
    4c04:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
    4c08:	dc 01       	movw	r26, r24
    4c0a:	cb 01       	movw	r24, r22
    4c0c:	8c a7       	std	Y+44, r24	; 0x2c
    4c0e:	9d a7       	std	Y+45, r25	; 0x2d
    4c10:	ae a7       	std	Y+46, r26	; 0x2e
    4c12:	bf a7       	std	Y+47, r27	; 0x2f
                            for (char i = 0; i < floated; i++)
    4c14:	1b a6       	std	Y+43, r1	; 0x2b
    4c16:	13 c0       	rjmp	.+38     	; 0x4c3e <in_num1+0xd8>
                                a /= 10;
    4c18:	6c a5       	ldd	r22, Y+44	; 0x2c
    4c1a:	7d a5       	ldd	r23, Y+45	; 0x2d
    4c1c:	8e a5       	ldd	r24, Y+46	; 0x2e
    4c1e:	9f a5       	ldd	r25, Y+47	; 0x2f
    4c20:	20 e0       	ldi	r18, 0x00	; 0
    4c22:	30 e0       	ldi	r19, 0x00	; 0
    4c24:	40 e2       	ldi	r20, 0x20	; 32
    4c26:	51 e4       	ldi	r21, 0x41	; 65
    4c28:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <__divsf3>
    4c2c:	dc 01       	movw	r26, r24
    4c2e:	cb 01       	movw	r24, r22
    4c30:	8c a7       	std	Y+44, r24	; 0x2c
    4c32:	9d a7       	std	Y+45, r25	; 0x2d
    4c34:	ae a7       	std	Y+46, r26	; 0x2e
    4c36:	bf a7       	std	Y+47, r27	; 0x2f
                        LCD_vSend_char(x);
                        length++;
                        if (floated > 0)
                        {
                            double a = (x - '0');
                            for (char i = 0; i < floated; i++)
    4c38:	8b a5       	ldd	r24, Y+43	; 0x2b
    4c3a:	8f 5f       	subi	r24, 0xFF	; 255
    4c3c:	8b a7       	std	Y+43, r24	; 0x2b
    4c3e:	90 91 b3 01 	lds	r25, 0x01B3
    4c42:	8b a5       	ldd	r24, Y+43	; 0x2b
    4c44:	89 17       	cp	r24, r25
    4c46:	40 f3       	brcs	.-48     	; 0x4c18 <in_num1+0xb2>
                                a /= 10;

                            num1 += a;
    4c48:	80 91 a8 01 	lds	r24, 0x01A8
    4c4c:	90 91 a9 01 	lds	r25, 0x01A9
    4c50:	a0 91 aa 01 	lds	r26, 0x01AA
    4c54:	b0 91 ab 01 	lds	r27, 0x01AB
    4c58:	bc 01       	movw	r22, r24
    4c5a:	cd 01       	movw	r24, r26
    4c5c:	2c a5       	ldd	r18, Y+44	; 0x2c
    4c5e:	3d a5       	ldd	r19, Y+45	; 0x2d
    4c60:	4e a5       	ldd	r20, Y+46	; 0x2e
    4c62:	5f a5       	ldd	r21, Y+47	; 0x2f
    4c64:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__addsf3>
    4c68:	dc 01       	movw	r26, r24
    4c6a:	cb 01       	movw	r24, r22
    4c6c:	80 93 a8 01 	sts	0x01A8, r24
    4c70:	90 93 a9 01 	sts	0x01A9, r25
    4c74:	a0 93 aa 01 	sts	0x01AA, r26
    4c78:	b0 93 ab 01 	sts	0x01AB, r27
                            floated++;
    4c7c:	80 91 b3 01 	lds	r24, 0x01B3
    4c80:	8f 5f       	subi	r24, 0xFF	; 255
    4c82:	80 93 b3 01 	sts	0x01B3, r24
    4c86:	0b c1       	rjmp	.+534    	; 0x4e9e <in_num1+0x338>
                        }
                        else
                        {
                            num1 *= 10;
    4c88:	80 91 a8 01 	lds	r24, 0x01A8
    4c8c:	90 91 a9 01 	lds	r25, 0x01A9
    4c90:	a0 91 aa 01 	lds	r26, 0x01AA
    4c94:	b0 91 ab 01 	lds	r27, 0x01AB
    4c98:	bc 01       	movw	r22, r24
    4c9a:	cd 01       	movw	r24, r26
    4c9c:	20 e0       	ldi	r18, 0x00	; 0
    4c9e:	30 e0       	ldi	r19, 0x00	; 0
    4ca0:	40 e2       	ldi	r20, 0x20	; 32
    4ca2:	51 e4       	ldi	r21, 0x41	; 65
    4ca4:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4ca8:	dc 01       	movw	r26, r24
    4caa:	cb 01       	movw	r24, r22
    4cac:	80 93 a8 01 	sts	0x01A8, r24
    4cb0:	90 93 a9 01 	sts	0x01A9, r25
    4cb4:	a0 93 aa 01 	sts	0x01AA, r26
    4cb8:	b0 93 ab 01 	sts	0x01AB, r27
                            num1 += (x - '0');
    4cbc:	8d a9       	ldd	r24, Y+53	; 0x35
    4cbe:	88 2f       	mov	r24, r24
    4cc0:	90 e0       	ldi	r25, 0x00	; 0
    4cc2:	c0 97       	sbiw	r24, 0x30	; 48
    4cc4:	aa 27       	eor	r26, r26
    4cc6:	97 fd       	sbrc	r25, 7
    4cc8:	a0 95       	com	r26
    4cca:	ba 2f       	mov	r27, r26
    4ccc:	bc 01       	movw	r22, r24
    4cce:	cd 01       	movw	r24, r26
    4cd0:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
    4cd4:	dc 01       	movw	r26, r24
    4cd6:	cb 01       	movw	r24, r22
    4cd8:	20 91 a8 01 	lds	r18, 0x01A8
    4cdc:	30 91 a9 01 	lds	r19, 0x01A9
    4ce0:	40 91 aa 01 	lds	r20, 0x01AA
    4ce4:	50 91 ab 01 	lds	r21, 0x01AB
    4ce8:	bc 01       	movw	r22, r24
    4cea:	cd 01       	movw	r24, r26
    4cec:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__addsf3>
    4cf0:	dc 01       	movw	r26, r24
    4cf2:	cb 01       	movw	r24, r22
    4cf4:	80 93 a8 01 	sts	0x01A8, r24
    4cf8:	90 93 a9 01 	sts	0x01A9, r25
    4cfc:	a0 93 aa 01 	sts	0x01AA, r26
    4d00:	b0 93 ab 01 	sts	0x01AB, r27
    4d04:	cc c0       	rjmp	.+408    	; 0x4e9e <in_num1+0x338>
                        }
                    }
                }
                else if (x == '-' && length == 0)
    4d06:	8d a9       	ldd	r24, Y+53	; 0x35
    4d08:	8d 32       	cpi	r24, 0x2D	; 45
    4d0a:	91 f4       	brne	.+36     	; 0x4d30 <in_num1+0x1ca>
    4d0c:	80 91 b0 01 	lds	r24, 0x01B0
    4d10:	88 23       	and	r24, r24
    4d12:	71 f4       	brne	.+28     	; 0x4d30 <in_num1+0x1ca>
                {
                    LCD_vSend_char(x);
    4d14:	8d a9       	ldd	r24, Y+53	; 0x35
    4d16:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                    sign = -1;
    4d1a:	80 e0       	ldi	r24, 0x00	; 0
    4d1c:	90 e0       	ldi	r25, 0x00	; 0
    4d1e:	a0 e8       	ldi	r26, 0x80	; 128
    4d20:	bf eb       	ldi	r27, 0xBF	; 191
    4d22:	89 ab       	std	Y+49, r24	; 0x31
    4d24:	9a ab       	std	Y+50, r25	; 0x32
    4d26:	ab ab       	std	Y+51, r26	; 0x33
    4d28:	bc ab       	std	Y+52, r27	; 0x34
                    s = 1;
    4d2a:	81 e0       	ldi	r24, 0x01	; 1
    4d2c:	88 ab       	std	Y+48, r24	; 0x30
    4d2e:	b7 c0       	rjmp	.+366    	; 0x4e9e <in_num1+0x338>
                }
                else if (length != 0 && (x == '+' || x == '-' || x == '*' || x == '/'))
    4d30:	80 91 b0 01 	lds	r24, 0x01B0
    4d34:	88 23       	and	r24, r24
    4d36:	09 f4       	brne	.+2      	; 0x4d3a <in_num1+0x1d4>
    4d38:	a0 c0       	rjmp	.+320    	; 0x4e7a <in_num1+0x314>
    4d3a:	8d a9       	ldd	r24, Y+53	; 0x35
    4d3c:	8b 32       	cpi	r24, 0x2B	; 43
    4d3e:	51 f0       	breq	.+20     	; 0x4d54 <in_num1+0x1ee>
    4d40:	8d a9       	ldd	r24, Y+53	; 0x35
    4d42:	8d 32       	cpi	r24, 0x2D	; 45
    4d44:	39 f0       	breq	.+14     	; 0x4d54 <in_num1+0x1ee>
    4d46:	8d a9       	ldd	r24, Y+53	; 0x35
    4d48:	8a 32       	cpi	r24, 0x2A	; 42
    4d4a:	21 f0       	breq	.+8      	; 0x4d54 <in_num1+0x1ee>
    4d4c:	8d a9       	ldd	r24, Y+53	; 0x35
    4d4e:	8f 32       	cpi	r24, 0x2F	; 47
    4d50:	09 f0       	breq	.+2      	; 0x4d54 <in_num1+0x1ee>
    4d52:	93 c0       	rjmp	.+294    	; 0x4e7a <in_num1+0x314>
                {
                    op = x;
    4d54:	8d a9       	ldd	r24, Y+53	; 0x35
    4d56:	80 93 b2 01 	sts	0x01B2, r24
                    LCD_vSend_char(x);
    4d5a:	8d a9       	ldd	r24, Y+53	; 0x35
    4d5c:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
    4d60:	80 e0       	ldi	r24, 0x00	; 0
    4d62:	90 e0       	ldi	r25, 0x00	; 0
    4d64:	aa ef       	ldi	r26, 0xFA	; 250
    4d66:	b3 e4       	ldi	r27, 0x43	; 67
    4d68:	8f a3       	std	Y+39, r24	; 0x27
    4d6a:	98 a7       	std	Y+40, r25	; 0x28
    4d6c:	a9 a7       	std	Y+41, r26	; 0x29
    4d6e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d70:	6f a1       	ldd	r22, Y+39	; 0x27
    4d72:	78 a5       	ldd	r23, Y+40	; 0x28
    4d74:	89 a5       	ldd	r24, Y+41	; 0x29
    4d76:	9a a5       	ldd	r25, Y+42	; 0x2a
    4d78:	20 e0       	ldi	r18, 0x00	; 0
    4d7a:	30 e0       	ldi	r19, 0x00	; 0
    4d7c:	4a ef       	ldi	r20, 0xFA	; 250
    4d7e:	54 e4       	ldi	r21, 0x44	; 68
    4d80:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4d84:	dc 01       	movw	r26, r24
    4d86:	cb 01       	movw	r24, r22
    4d88:	8b a3       	std	Y+35, r24	; 0x23
    4d8a:	9c a3       	std	Y+36, r25	; 0x24
    4d8c:	ad a3       	std	Y+37, r26	; 0x25
    4d8e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4d90:	6b a1       	ldd	r22, Y+35	; 0x23
    4d92:	7c a1       	ldd	r23, Y+36	; 0x24
    4d94:	8d a1       	ldd	r24, Y+37	; 0x25
    4d96:	9e a1       	ldd	r25, Y+38	; 0x26
    4d98:	20 e0       	ldi	r18, 0x00	; 0
    4d9a:	30 e0       	ldi	r19, 0x00	; 0
    4d9c:	40 e8       	ldi	r20, 0x80	; 128
    4d9e:	5f e3       	ldi	r21, 0x3F	; 63
    4da0:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4da4:	88 23       	and	r24, r24
    4da6:	2c f4       	brge	.+10     	; 0x4db2 <in_num1+0x24c>
		__ticks = 1;
    4da8:	81 e0       	ldi	r24, 0x01	; 1
    4daa:	90 e0       	ldi	r25, 0x00	; 0
    4dac:	9a a3       	std	Y+34, r25	; 0x22
    4dae:	89 a3       	std	Y+33, r24	; 0x21
    4db0:	3f c0       	rjmp	.+126    	; 0x4e30 <in_num1+0x2ca>
	else if (__tmp > 65535)
    4db2:	6b a1       	ldd	r22, Y+35	; 0x23
    4db4:	7c a1       	ldd	r23, Y+36	; 0x24
    4db6:	8d a1       	ldd	r24, Y+37	; 0x25
    4db8:	9e a1       	ldd	r25, Y+38	; 0x26
    4dba:	20 e0       	ldi	r18, 0x00	; 0
    4dbc:	3f ef       	ldi	r19, 0xFF	; 255
    4dbe:	4f e7       	ldi	r20, 0x7F	; 127
    4dc0:	57 e4       	ldi	r21, 0x47	; 71
    4dc2:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4dc6:	18 16       	cp	r1, r24
    4dc8:	4c f5       	brge	.+82     	; 0x4e1c <in_num1+0x2b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4dca:	6f a1       	ldd	r22, Y+39	; 0x27
    4dcc:	78 a5       	ldd	r23, Y+40	; 0x28
    4dce:	89 a5       	ldd	r24, Y+41	; 0x29
    4dd0:	9a a5       	ldd	r25, Y+42	; 0x2a
    4dd2:	20 e0       	ldi	r18, 0x00	; 0
    4dd4:	30 e0       	ldi	r19, 0x00	; 0
    4dd6:	40 e2       	ldi	r20, 0x20	; 32
    4dd8:	51 e4       	ldi	r21, 0x41	; 65
    4dda:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4dde:	dc 01       	movw	r26, r24
    4de0:	cb 01       	movw	r24, r22
    4de2:	bc 01       	movw	r22, r24
    4de4:	cd 01       	movw	r24, r26
    4de6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4dea:	dc 01       	movw	r26, r24
    4dec:	cb 01       	movw	r24, r22
    4dee:	9a a3       	std	Y+34, r25	; 0x22
    4df0:	89 a3       	std	Y+33, r24	; 0x21
    4df2:	0f c0       	rjmp	.+30     	; 0x4e12 <in_num1+0x2ac>
    4df4:	88 ec       	ldi	r24, 0xC8	; 200
    4df6:	90 e0       	ldi	r25, 0x00	; 0
    4df8:	98 a3       	std	Y+32, r25	; 0x20
    4dfa:	8f 8f       	std	Y+31, r24	; 0x1f
    4dfc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4dfe:	98 a1       	ldd	r25, Y+32	; 0x20
    4e00:	01 97       	sbiw	r24, 0x01	; 1
    4e02:	f1 f7       	brne	.-4      	; 0x4e00 <in_num1+0x29a>
    4e04:	98 a3       	std	Y+32, r25	; 0x20
    4e06:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e08:	89 a1       	ldd	r24, Y+33	; 0x21
    4e0a:	9a a1       	ldd	r25, Y+34	; 0x22
    4e0c:	01 97       	sbiw	r24, 0x01	; 1
    4e0e:	9a a3       	std	Y+34, r25	; 0x22
    4e10:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e12:	89 a1       	ldd	r24, Y+33	; 0x21
    4e14:	9a a1       	ldd	r25, Y+34	; 0x22
    4e16:	00 97       	sbiw	r24, 0x00	; 0
    4e18:	69 f7       	brne	.-38     	; 0x4df4 <in_num1+0x28e>
    4e1a:	14 c0       	rjmp	.+40     	; 0x4e44 <in_num1+0x2de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e1c:	6b a1       	ldd	r22, Y+35	; 0x23
    4e1e:	7c a1       	ldd	r23, Y+36	; 0x24
    4e20:	8d a1       	ldd	r24, Y+37	; 0x25
    4e22:	9e a1       	ldd	r25, Y+38	; 0x26
    4e24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e28:	dc 01       	movw	r26, r24
    4e2a:	cb 01       	movw	r24, r22
    4e2c:	9a a3       	std	Y+34, r25	; 0x22
    4e2e:	89 a3       	std	Y+33, r24	; 0x21
    4e30:	89 a1       	ldd	r24, Y+33	; 0x21
    4e32:	9a a1       	ldd	r25, Y+34	; 0x22
    4e34:	9e 8f       	std	Y+30, r25	; 0x1e
    4e36:	8d 8f       	std	Y+29, r24	; 0x1d
    4e38:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4e3a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4e3c:	01 97       	sbiw	r24, 0x01	; 1
    4e3e:	f1 f7       	brne	.-4      	; 0x4e3c <in_num1+0x2d6>
    4e40:	9e 8f       	std	Y+30, r25	; 0x1e
    4e42:	8d 8f       	std	Y+29, r24	; 0x1d
                    length -= 2;
                }
                _delay_ms(500);
            }
        }
        num1 *= sign;
    4e44:	80 91 a8 01 	lds	r24, 0x01A8
    4e48:	90 91 a9 01 	lds	r25, 0x01A9
    4e4c:	a0 91 aa 01 	lds	r26, 0x01AA
    4e50:	b0 91 ab 01 	lds	r27, 0x01AB
    4e54:	bc 01       	movw	r22, r24
    4e56:	cd 01       	movw	r24, r26
    4e58:	29 a9       	ldd	r18, Y+49	; 0x31
    4e5a:	3a a9       	ldd	r19, Y+50	; 0x32
    4e5c:	4b a9       	ldd	r20, Y+51	; 0x33
    4e5e:	5c a9       	ldd	r21, Y+52	; 0x34
    4e60:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4e64:	dc 01       	movw	r26, r24
    4e66:	cb 01       	movw	r24, r22
    4e68:	80 93 a8 01 	sts	0x01A8, r24
    4e6c:	90 93 a9 01 	sts	0x01A9, r25
    4e70:	a0 93 aa 01 	sts	0x01AA, r26
    4e74:	b0 93 ab 01 	sts	0x01AB, r27
    4e78:	0c c1       	rjmp	.+536    	; 0x5092 <in_num1+0x52c>
                    op = x;
                    LCD_vSend_char(x);
                    _delay_ms(500);
                    break;
                }
                else if (floated == 0 && x == '.')
    4e7a:	80 91 b3 01 	lds	r24, 0x01B3
    4e7e:	88 23       	and	r24, r24
    4e80:	71 f4       	brne	.+28     	; 0x4e9e <in_num1+0x338>
    4e82:	8d a9       	ldd	r24, Y+53	; 0x35
    4e84:	8e 32       	cpi	r24, 0x2E	; 46
    4e86:	59 f4       	brne	.+22     	; 0x4e9e <in_num1+0x338>
                {
                    LCD_vSend_char(x);
    4e88:	8d a9       	ldd	r24, Y+53	; 0x35
    4e8a:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                    floated = 1;
    4e8e:	81 e0       	ldi	r24, 0x01	; 1
    4e90:	80 93 b3 01 	sts	0x01B3, r24
                    length -= 2;
    4e94:	80 91 b0 01 	lds	r24, 0x01B0
    4e98:	82 50       	subi	r24, 0x02	; 2
    4e9a:	80 93 b0 01 	sts	0x01B0, r24
    4e9e:	80 e0       	ldi	r24, 0x00	; 0
    4ea0:	90 e0       	ldi	r25, 0x00	; 0
    4ea2:	aa ef       	ldi	r26, 0xFA	; 250
    4ea4:	b3 e4       	ldi	r27, 0x43	; 67
    4ea6:	89 8f       	std	Y+25, r24	; 0x19
    4ea8:	9a 8f       	std	Y+26, r25	; 0x1a
    4eaa:	ab 8f       	std	Y+27, r26	; 0x1b
    4eac:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4eae:	69 8d       	ldd	r22, Y+25	; 0x19
    4eb0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4eb2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4eb4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4eb6:	20 e0       	ldi	r18, 0x00	; 0
    4eb8:	30 e0       	ldi	r19, 0x00	; 0
    4eba:	4a ef       	ldi	r20, 0xFA	; 250
    4ebc:	54 e4       	ldi	r21, 0x44	; 68
    4ebe:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4ec2:	dc 01       	movw	r26, r24
    4ec4:	cb 01       	movw	r24, r22
    4ec6:	8d 8b       	std	Y+21, r24	; 0x15
    4ec8:	9e 8b       	std	Y+22, r25	; 0x16
    4eca:	af 8b       	std	Y+23, r26	; 0x17
    4ecc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4ece:	6d 89       	ldd	r22, Y+21	; 0x15
    4ed0:	7e 89       	ldd	r23, Y+22	; 0x16
    4ed2:	8f 89       	ldd	r24, Y+23	; 0x17
    4ed4:	98 8d       	ldd	r25, Y+24	; 0x18
    4ed6:	20 e0       	ldi	r18, 0x00	; 0
    4ed8:	30 e0       	ldi	r19, 0x00	; 0
    4eda:	40 e8       	ldi	r20, 0x80	; 128
    4edc:	5f e3       	ldi	r21, 0x3F	; 63
    4ede:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4ee2:	88 23       	and	r24, r24
    4ee4:	2c f4       	brge	.+10     	; 0x4ef0 <in_num1+0x38a>
		__ticks = 1;
    4ee6:	81 e0       	ldi	r24, 0x01	; 1
    4ee8:	90 e0       	ldi	r25, 0x00	; 0
    4eea:	9c 8b       	std	Y+20, r25	; 0x14
    4eec:	8b 8b       	std	Y+19, r24	; 0x13
    4eee:	3f c0       	rjmp	.+126    	; 0x4f6e <in_num1+0x408>
	else if (__tmp > 65535)
    4ef0:	6d 89       	ldd	r22, Y+21	; 0x15
    4ef2:	7e 89       	ldd	r23, Y+22	; 0x16
    4ef4:	8f 89       	ldd	r24, Y+23	; 0x17
    4ef6:	98 8d       	ldd	r25, Y+24	; 0x18
    4ef8:	20 e0       	ldi	r18, 0x00	; 0
    4efa:	3f ef       	ldi	r19, 0xFF	; 255
    4efc:	4f e7       	ldi	r20, 0x7F	; 127
    4efe:	57 e4       	ldi	r21, 0x47	; 71
    4f00:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    4f04:	18 16       	cp	r1, r24
    4f06:	4c f5       	brge	.+82     	; 0x4f5a <in_num1+0x3f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f08:	69 8d       	ldd	r22, Y+25	; 0x19
    4f0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f10:	20 e0       	ldi	r18, 0x00	; 0
    4f12:	30 e0       	ldi	r19, 0x00	; 0
    4f14:	40 e2       	ldi	r20, 0x20	; 32
    4f16:	51 e4       	ldi	r21, 0x41	; 65
    4f18:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4f1c:	dc 01       	movw	r26, r24
    4f1e:	cb 01       	movw	r24, r22
    4f20:	bc 01       	movw	r22, r24
    4f22:	cd 01       	movw	r24, r26
    4f24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f28:	dc 01       	movw	r26, r24
    4f2a:	cb 01       	movw	r24, r22
    4f2c:	9c 8b       	std	Y+20, r25	; 0x14
    4f2e:	8b 8b       	std	Y+19, r24	; 0x13
    4f30:	0f c0       	rjmp	.+30     	; 0x4f50 <in_num1+0x3ea>
    4f32:	88 ec       	ldi	r24, 0xC8	; 200
    4f34:	90 e0       	ldi	r25, 0x00	; 0
    4f36:	9a 8b       	std	Y+18, r25	; 0x12
    4f38:	89 8b       	std	Y+17, r24	; 0x11
    4f3a:	89 89       	ldd	r24, Y+17	; 0x11
    4f3c:	9a 89       	ldd	r25, Y+18	; 0x12
    4f3e:	01 97       	sbiw	r24, 0x01	; 1
    4f40:	f1 f7       	brne	.-4      	; 0x4f3e <in_num1+0x3d8>
    4f42:	9a 8b       	std	Y+18, r25	; 0x12
    4f44:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f46:	8b 89       	ldd	r24, Y+19	; 0x13
    4f48:	9c 89       	ldd	r25, Y+20	; 0x14
    4f4a:	01 97       	sbiw	r24, 0x01	; 1
    4f4c:	9c 8b       	std	Y+20, r25	; 0x14
    4f4e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f50:	8b 89       	ldd	r24, Y+19	; 0x13
    4f52:	9c 89       	ldd	r25, Y+20	; 0x14
    4f54:	00 97       	sbiw	r24, 0x00	; 0
    4f56:	69 f7       	brne	.-38     	; 0x4f32 <in_num1+0x3cc>
    4f58:	23 ce       	rjmp	.-954    	; 0x4ba0 <in_num1+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f5a:	6d 89       	ldd	r22, Y+21	; 0x15
    4f5c:	7e 89       	ldd	r23, Y+22	; 0x16
    4f5e:	8f 89       	ldd	r24, Y+23	; 0x17
    4f60:	98 8d       	ldd	r25, Y+24	; 0x18
    4f62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4f66:	dc 01       	movw	r26, r24
    4f68:	cb 01       	movw	r24, r22
    4f6a:	9c 8b       	std	Y+20, r25	; 0x14
    4f6c:	8b 8b       	std	Y+19, r24	; 0x13
    4f6e:	8b 89       	ldd	r24, Y+19	; 0x13
    4f70:	9c 89       	ldd	r25, Y+20	; 0x14
    4f72:	98 8b       	std	Y+16, r25	; 0x10
    4f74:	8f 87       	std	Y+15, r24	; 0x0f
    4f76:	8f 85       	ldd	r24, Y+15	; 0x0f
    4f78:	98 89       	ldd	r25, Y+16	; 0x10
    4f7a:	01 97       	sbiw	r24, 0x01	; 1
    4f7c:	f1 f7       	brne	.-4      	; 0x4f7a <in_num1+0x414>
    4f7e:	98 8b       	std	Y+16, r25	; 0x10
    4f80:	8f 87       	std	Y+15, r24	; 0x0f
    4f82:	0e ce       	rjmp	.-996    	; 0x4ba0 <in_num1+0x3a>
    }
    else
    {
        while (1)
        {
            x = keypad_u8check_press();
    4f84:	0e 94 62 30 	call	0x60c4	; 0x60c4 <keypad_u8check_press>
    4f88:	8d ab       	std	Y+53, r24	; 0x35
            if (x == '+' || x == '-' || x == '*' || x == '/')
    4f8a:	8d a9       	ldd	r24, Y+53	; 0x35
    4f8c:	8b 32       	cpi	r24, 0x2B	; 43
    4f8e:	49 f0       	breq	.+18     	; 0x4fa2 <in_num1+0x43c>
    4f90:	8d a9       	ldd	r24, Y+53	; 0x35
    4f92:	8d 32       	cpi	r24, 0x2D	; 45
    4f94:	31 f0       	breq	.+12     	; 0x4fa2 <in_num1+0x43c>
    4f96:	8d a9       	ldd	r24, Y+53	; 0x35
    4f98:	8a 32       	cpi	r24, 0x2A	; 42
    4f9a:	19 f0       	breq	.+6      	; 0x4fa2 <in_num1+0x43c>
    4f9c:	8d a9       	ldd	r24, Y+53	; 0x35
    4f9e:	8f 32       	cpi	r24, 0x2F	; 47
    4fa0:	89 f7       	brne	.-30     	; 0x4f84 <in_num1+0x41e>
            {
                op = x;
    4fa2:	8d a9       	ldd	r24, Y+53	; 0x35
    4fa4:	80 93 b2 01 	sts	0x01B2, r24
                LCD_vSend_char(x);
    4fa8:	8d a9       	ldd	r24, Y+53	; 0x35
    4faa:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
    4fae:	80 e0       	ldi	r24, 0x00	; 0
    4fb0:	90 e0       	ldi	r25, 0x00	; 0
    4fb2:	a6 e9       	ldi	r26, 0x96	; 150
    4fb4:	b3 e4       	ldi	r27, 0x43	; 67
    4fb6:	8b 87       	std	Y+11, r24	; 0x0b
    4fb8:	9c 87       	std	Y+12, r25	; 0x0c
    4fba:	ad 87       	std	Y+13, r26	; 0x0d
    4fbc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fbe:	6b 85       	ldd	r22, Y+11	; 0x0b
    4fc0:	7c 85       	ldd	r23, Y+12	; 0x0c
    4fc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    4fc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    4fc6:	20 e0       	ldi	r18, 0x00	; 0
    4fc8:	30 e0       	ldi	r19, 0x00	; 0
    4fca:	4a ef       	ldi	r20, 0xFA	; 250
    4fcc:	54 e4       	ldi	r21, 0x44	; 68
    4fce:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    4fd2:	dc 01       	movw	r26, r24
    4fd4:	cb 01       	movw	r24, r22
    4fd6:	8f 83       	std	Y+7, r24	; 0x07
    4fd8:	98 87       	std	Y+8, r25	; 0x08
    4fda:	a9 87       	std	Y+9, r26	; 0x09
    4fdc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4fde:	6f 81       	ldd	r22, Y+7	; 0x07
    4fe0:	78 85       	ldd	r23, Y+8	; 0x08
    4fe2:	89 85       	ldd	r24, Y+9	; 0x09
    4fe4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4fe6:	20 e0       	ldi	r18, 0x00	; 0
    4fe8:	30 e0       	ldi	r19, 0x00	; 0
    4fea:	40 e8       	ldi	r20, 0x80	; 128
    4fec:	5f e3       	ldi	r21, 0x3F	; 63
    4fee:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    4ff2:	88 23       	and	r24, r24
    4ff4:	2c f4       	brge	.+10     	; 0x5000 <in_num1+0x49a>
		__ticks = 1;
    4ff6:	81 e0       	ldi	r24, 0x01	; 1
    4ff8:	90 e0       	ldi	r25, 0x00	; 0
    4ffa:	9e 83       	std	Y+6, r25	; 0x06
    4ffc:	8d 83       	std	Y+5, r24	; 0x05
    4ffe:	3f c0       	rjmp	.+126    	; 0x507e <in_num1+0x518>
	else if (__tmp > 65535)
    5000:	6f 81       	ldd	r22, Y+7	; 0x07
    5002:	78 85       	ldd	r23, Y+8	; 0x08
    5004:	89 85       	ldd	r24, Y+9	; 0x09
    5006:	9a 85       	ldd	r25, Y+10	; 0x0a
    5008:	20 e0       	ldi	r18, 0x00	; 0
    500a:	3f ef       	ldi	r19, 0xFF	; 255
    500c:	4f e7       	ldi	r20, 0x7F	; 127
    500e:	57 e4       	ldi	r21, 0x47	; 71
    5010:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5014:	18 16       	cp	r1, r24
    5016:	4c f5       	brge	.+82     	; 0x506a <in_num1+0x504>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5018:	6b 85       	ldd	r22, Y+11	; 0x0b
    501a:	7c 85       	ldd	r23, Y+12	; 0x0c
    501c:	8d 85       	ldd	r24, Y+13	; 0x0d
    501e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5020:	20 e0       	ldi	r18, 0x00	; 0
    5022:	30 e0       	ldi	r19, 0x00	; 0
    5024:	40 e2       	ldi	r20, 0x20	; 32
    5026:	51 e4       	ldi	r21, 0x41	; 65
    5028:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    502c:	dc 01       	movw	r26, r24
    502e:	cb 01       	movw	r24, r22
    5030:	bc 01       	movw	r22, r24
    5032:	cd 01       	movw	r24, r26
    5034:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5038:	dc 01       	movw	r26, r24
    503a:	cb 01       	movw	r24, r22
    503c:	9e 83       	std	Y+6, r25	; 0x06
    503e:	8d 83       	std	Y+5, r24	; 0x05
    5040:	0f c0       	rjmp	.+30     	; 0x5060 <in_num1+0x4fa>
    5042:	88 ec       	ldi	r24, 0xC8	; 200
    5044:	90 e0       	ldi	r25, 0x00	; 0
    5046:	9c 83       	std	Y+4, r25	; 0x04
    5048:	8b 83       	std	Y+3, r24	; 0x03
    504a:	8b 81       	ldd	r24, Y+3	; 0x03
    504c:	9c 81       	ldd	r25, Y+4	; 0x04
    504e:	01 97       	sbiw	r24, 0x01	; 1
    5050:	f1 f7       	brne	.-4      	; 0x504e <in_num1+0x4e8>
    5052:	9c 83       	std	Y+4, r25	; 0x04
    5054:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5056:	8d 81       	ldd	r24, Y+5	; 0x05
    5058:	9e 81       	ldd	r25, Y+6	; 0x06
    505a:	01 97       	sbiw	r24, 0x01	; 1
    505c:	9e 83       	std	Y+6, r25	; 0x06
    505e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5060:	8d 81       	ldd	r24, Y+5	; 0x05
    5062:	9e 81       	ldd	r25, Y+6	; 0x06
    5064:	00 97       	sbiw	r24, 0x00	; 0
    5066:	69 f7       	brne	.-38     	; 0x5042 <in_num1+0x4dc>
    5068:	14 c0       	rjmp	.+40     	; 0x5092 <in_num1+0x52c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    506a:	6f 81       	ldd	r22, Y+7	; 0x07
    506c:	78 85       	ldd	r23, Y+8	; 0x08
    506e:	89 85       	ldd	r24, Y+9	; 0x09
    5070:	9a 85       	ldd	r25, Y+10	; 0x0a
    5072:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5076:	dc 01       	movw	r26, r24
    5078:	cb 01       	movw	r24, r22
    507a:	9e 83       	std	Y+6, r25	; 0x06
    507c:	8d 83       	std	Y+5, r24	; 0x05
    507e:	8d 81       	ldd	r24, Y+5	; 0x05
    5080:	9e 81       	ldd	r25, Y+6	; 0x06
    5082:	9a 83       	std	Y+2, r25	; 0x02
    5084:	89 83       	std	Y+1, r24	; 0x01
    5086:	89 81       	ldd	r24, Y+1	; 0x01
    5088:	9a 81       	ldd	r25, Y+2	; 0x02
    508a:	01 97       	sbiw	r24, 0x01	; 1
    508c:	f1 f7       	brne	.-4      	; 0x508a <in_num1+0x524>
    508e:	9a 83       	std	Y+2, r25	; 0x02
    5090:	89 83       	std	Y+1, r24	; 0x01
                _delay_ms(300);
                break;
            }
        }
    }
}
    5092:	e5 96       	adiw	r28, 0x35	; 53
    5094:	0f b6       	in	r0, 0x3f	; 63
    5096:	f8 94       	cli
    5098:	de bf       	out	0x3e, r29	; 62
    509a:	0f be       	out	0x3f, r0	; 63
    509c:	cd bf       	out	0x3d, r28	; 61
    509e:	cf 91       	pop	r28
    50a0:	df 91       	pop	r29
    50a2:	08 95       	ret

000050a4 <in_num2>:

void in_num2()
{
    50a4:	df 93       	push	r29
    50a6:	cf 93       	push	r28
    50a8:	cd b7       	in	r28, 0x3d	; 61
    50aa:	de b7       	in	r29, 0x3e	; 62
    50ac:	69 97       	sbiw	r28, 0x19	; 25
    50ae:	0f b6       	in	r0, 0x3f	; 63
    50b0:	f8 94       	cli
    50b2:	de bf       	out	0x3e, r29	; 62
    50b4:	0f be       	out	0x3f, r0	; 63
    50b6:	cd bf       	out	0x3d, r28	; 61
    char x = 0;
    50b8:	19 8e       	std	Y+25, r1	; 0x19
    length = 0;
    50ba:	10 92 b0 01 	sts	0x01B0, r1
    num2 = 0;
    50be:	80 e0       	ldi	r24, 0x00	; 0
    50c0:	90 e0       	ldi	r25, 0x00	; 0
    50c2:	a0 e0       	ldi	r26, 0x00	; 0
    50c4:	b0 e0       	ldi	r27, 0x00	; 0
    50c6:	80 93 ac 01 	sts	0x01AC, r24
    50ca:	90 93 ad 01 	sts	0x01AD, r25
    50ce:	a0 93 ae 01 	sts	0x01AE, r26
    50d2:	b0 93 af 01 	sts	0x01AF, r27
    floated = 0;
    50d6:	10 92 b3 01 	sts	0x01B3, r1
    double sign = 1;
    50da:	80 e0       	ldi	r24, 0x00	; 0
    50dc:	90 e0       	ldi	r25, 0x00	; 0
    50de:	a0 e8       	ldi	r26, 0x80	; 128
    50e0:	bf e3       	ldi	r27, 0x3F	; 63
    50e2:	8d 8b       	std	Y+21, r24	; 0x15
    50e4:	9e 8b       	std	Y+22, r25	; 0x16
    50e6:	af 8b       	std	Y+23, r26	; 0x17
    50e8:	b8 8f       	std	Y+24, r27	; 0x18
    char s = 0;
    50ea:	1c 8a       	std	Y+20, r1	; 0x14

    while (1)
    {
        x = keypad_u8check_press();
    50ec:	0e 94 62 30 	call	0x60c4	; 0x60c4 <keypad_u8check_press>
    50f0:	89 8f       	std	Y+25, r24	; 0x19
        if (x != 0xff)
    50f2:	89 8d       	ldd	r24, Y+25	; 0x19
    50f4:	8f 3f       	cpi	r24, 0xFF	; 255
    50f6:	d1 f3       	breq	.-12     	; 0x50ec <in_num2+0x48>
        {
            if (x >= '0' && x <= '9' && length < 5)
    50f8:	89 8d       	ldd	r24, Y+25	; 0x19
    50fa:	80 33       	cpi	r24, 0x30	; 48
    50fc:	08 f4       	brcc	.+2      	; 0x5100 <in_num2+0x5c>
    50fe:	a9 c0       	rjmp	.+338    	; 0x5252 <in_num2+0x1ae>
    5100:	89 8d       	ldd	r24, Y+25	; 0x19
    5102:	8a 33       	cpi	r24, 0x3A	; 58
    5104:	08 f0       	brcs	.+2      	; 0x5108 <in_num2+0x64>
    5106:	a5 c0       	rjmp	.+330    	; 0x5252 <in_num2+0x1ae>
    5108:	80 91 b0 01 	lds	r24, 0x01B0
    510c:	85 30       	cpi	r24, 0x05	; 5
    510e:	0c f0       	brlt	.+2      	; 0x5112 <in_num2+0x6e>
    5110:	a0 c0       	rjmp	.+320    	; 0x5252 <in_num2+0x1ae>
            {
                if (!(length == 0 && x == '0'))
    5112:	80 91 b0 01 	lds	r24, 0x01B0
    5116:	88 23       	and	r24, r24
    5118:	21 f4       	brne	.+8      	; 0x5122 <in_num2+0x7e>
    511a:	89 8d       	ldd	r24, Y+25	; 0x19
    511c:	80 33       	cpi	r24, 0x30	; 48
    511e:	09 f4       	brne	.+2      	; 0x5122 <in_num2+0x7e>
    5120:	c4 c0       	rjmp	.+392    	; 0x52aa <in_num2+0x206>
                {
                    LCD_vSend_char(x);
    5122:	89 8d       	ldd	r24, Y+25	; 0x19
    5124:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                    length++;
    5128:	80 91 b0 01 	lds	r24, 0x01B0
    512c:	8f 5f       	subi	r24, 0xFF	; 255
    512e:	80 93 b0 01 	sts	0x01B0, r24
                    if (floated > 0)
    5132:	80 91 b3 01 	lds	r24, 0x01B3
    5136:	88 23       	and	r24, r24
    5138:	09 f4       	brne	.+2      	; 0x513c <in_num2+0x98>
    513a:	4c c0       	rjmp	.+152    	; 0x51d4 <in_num2+0x130>
                    {
                        double a = (x - '0');
    513c:	89 8d       	ldd	r24, Y+25	; 0x19
    513e:	88 2f       	mov	r24, r24
    5140:	90 e0       	ldi	r25, 0x00	; 0
    5142:	c0 97       	sbiw	r24, 0x30	; 48
    5144:	aa 27       	eor	r26, r26
    5146:	97 fd       	sbrc	r25, 7
    5148:	a0 95       	com	r26
    514a:	ba 2f       	mov	r27, r26
    514c:	bc 01       	movw	r22, r24
    514e:	cd 01       	movw	r24, r26
    5150:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
    5154:	dc 01       	movw	r26, r24
    5156:	cb 01       	movw	r24, r22
    5158:	88 8b       	std	Y+16, r24	; 0x10
    515a:	99 8b       	std	Y+17, r25	; 0x11
    515c:	aa 8b       	std	Y+18, r26	; 0x12
    515e:	bb 8b       	std	Y+19, r27	; 0x13
                        for (char i = 0; i < floated; i++)
    5160:	1f 86       	std	Y+15, r1	; 0x0f
    5162:	13 c0       	rjmp	.+38     	; 0x518a <in_num2+0xe6>
                            a /= 10;
    5164:	68 89       	ldd	r22, Y+16	; 0x10
    5166:	79 89       	ldd	r23, Y+17	; 0x11
    5168:	8a 89       	ldd	r24, Y+18	; 0x12
    516a:	9b 89       	ldd	r25, Y+19	; 0x13
    516c:	20 e0       	ldi	r18, 0x00	; 0
    516e:	30 e0       	ldi	r19, 0x00	; 0
    5170:	40 e2       	ldi	r20, 0x20	; 32
    5172:	51 e4       	ldi	r21, 0x41	; 65
    5174:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <__divsf3>
    5178:	dc 01       	movw	r26, r24
    517a:	cb 01       	movw	r24, r22
    517c:	88 8b       	std	Y+16, r24	; 0x10
    517e:	99 8b       	std	Y+17, r25	; 0x11
    5180:	aa 8b       	std	Y+18, r26	; 0x12
    5182:	bb 8b       	std	Y+19, r27	; 0x13
                    LCD_vSend_char(x);
                    length++;
                    if (floated > 0)
                    {
                        double a = (x - '0');
                        for (char i = 0; i < floated; i++)
    5184:	8f 85       	ldd	r24, Y+15	; 0x0f
    5186:	8f 5f       	subi	r24, 0xFF	; 255
    5188:	8f 87       	std	Y+15, r24	; 0x0f
    518a:	90 91 b3 01 	lds	r25, 0x01B3
    518e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5190:	89 17       	cp	r24, r25
    5192:	40 f3       	brcs	.-48     	; 0x5164 <in_num2+0xc0>
                            a /= 10;

                        num2 += a;
    5194:	80 91 ac 01 	lds	r24, 0x01AC
    5198:	90 91 ad 01 	lds	r25, 0x01AD
    519c:	a0 91 ae 01 	lds	r26, 0x01AE
    51a0:	b0 91 af 01 	lds	r27, 0x01AF
    51a4:	bc 01       	movw	r22, r24
    51a6:	cd 01       	movw	r24, r26
    51a8:	28 89       	ldd	r18, Y+16	; 0x10
    51aa:	39 89       	ldd	r19, Y+17	; 0x11
    51ac:	4a 89       	ldd	r20, Y+18	; 0x12
    51ae:	5b 89       	ldd	r21, Y+19	; 0x13
    51b0:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__addsf3>
    51b4:	dc 01       	movw	r26, r24
    51b6:	cb 01       	movw	r24, r22
    51b8:	80 93 ac 01 	sts	0x01AC, r24
    51bc:	90 93 ad 01 	sts	0x01AD, r25
    51c0:	a0 93 ae 01 	sts	0x01AE, r26
    51c4:	b0 93 af 01 	sts	0x01AF, r27
                        floated++;
    51c8:	80 91 b3 01 	lds	r24, 0x01B3
    51cc:	8f 5f       	subi	r24, 0xFF	; 255
    51ce:	80 93 b3 01 	sts	0x01B3, r24
    51d2:	6b c0       	rjmp	.+214    	; 0x52aa <in_num2+0x206>
                    }
                    else
                    {
                        num2 *= 10;
    51d4:	80 91 ac 01 	lds	r24, 0x01AC
    51d8:	90 91 ad 01 	lds	r25, 0x01AD
    51dc:	a0 91 ae 01 	lds	r26, 0x01AE
    51e0:	b0 91 af 01 	lds	r27, 0x01AF
    51e4:	bc 01       	movw	r22, r24
    51e6:	cd 01       	movw	r24, r26
    51e8:	20 e0       	ldi	r18, 0x00	; 0
    51ea:	30 e0       	ldi	r19, 0x00	; 0
    51ec:	40 e2       	ldi	r20, 0x20	; 32
    51ee:	51 e4       	ldi	r21, 0x41	; 65
    51f0:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    51f4:	dc 01       	movw	r26, r24
    51f6:	cb 01       	movw	r24, r22
    51f8:	80 93 ac 01 	sts	0x01AC, r24
    51fc:	90 93 ad 01 	sts	0x01AD, r25
    5200:	a0 93 ae 01 	sts	0x01AE, r26
    5204:	b0 93 af 01 	sts	0x01AF, r27
                        num2 += (x - '0');
    5208:	89 8d       	ldd	r24, Y+25	; 0x19
    520a:	88 2f       	mov	r24, r24
    520c:	90 e0       	ldi	r25, 0x00	; 0
    520e:	c0 97       	sbiw	r24, 0x30	; 48
    5210:	aa 27       	eor	r26, r26
    5212:	97 fd       	sbrc	r25, 7
    5214:	a0 95       	com	r26
    5216:	ba 2f       	mov	r27, r26
    5218:	bc 01       	movw	r22, r24
    521a:	cd 01       	movw	r24, r26
    521c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__floatsisf>
    5220:	dc 01       	movw	r26, r24
    5222:	cb 01       	movw	r24, r22
    5224:	20 91 ac 01 	lds	r18, 0x01AC
    5228:	30 91 ad 01 	lds	r19, 0x01AD
    522c:	40 91 ae 01 	lds	r20, 0x01AE
    5230:	50 91 af 01 	lds	r21, 0x01AF
    5234:	bc 01       	movw	r22, r24
    5236:	cd 01       	movw	r24, r26
    5238:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__addsf3>
    523c:	dc 01       	movw	r26, r24
    523e:	cb 01       	movw	r24, r22
    5240:	80 93 ac 01 	sts	0x01AC, r24
    5244:	90 93 ad 01 	sts	0x01AD, r25
    5248:	a0 93 ae 01 	sts	0x01AE, r26
    524c:	b0 93 af 01 	sts	0x01AF, r27
    5250:	2c c0       	rjmp	.+88     	; 0x52aa <in_num2+0x206>
                    }
                }
            }
            else if (x == '-' && length == 0)
    5252:	89 8d       	ldd	r24, Y+25	; 0x19
    5254:	8d 32       	cpi	r24, 0x2D	; 45
    5256:	91 f4       	brne	.+36     	; 0x527c <in_num2+0x1d8>
    5258:	80 91 b0 01 	lds	r24, 0x01B0
    525c:	88 23       	and	r24, r24
    525e:	71 f4       	brne	.+28     	; 0x527c <in_num2+0x1d8>
            {
                LCD_vSend_char(x);
    5260:	89 8d       	ldd	r24, Y+25	; 0x19
    5262:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                sign = -1;
    5266:	80 e0       	ldi	r24, 0x00	; 0
    5268:	90 e0       	ldi	r25, 0x00	; 0
    526a:	a0 e8       	ldi	r26, 0x80	; 128
    526c:	bf eb       	ldi	r27, 0xBF	; 191
    526e:	8d 8b       	std	Y+21, r24	; 0x15
    5270:	9e 8b       	std	Y+22, r25	; 0x16
    5272:	af 8b       	std	Y+23, r26	; 0x17
    5274:	b8 8f       	std	Y+24, r27	; 0x18
                s = 1;
    5276:	81 e0       	ldi	r24, 0x01	; 1
    5278:	8c 8b       	std	Y+20, r24	; 0x14
    527a:	17 c0       	rjmp	.+46     	; 0x52aa <in_num2+0x206>
            }
            else if (floated == 0 && x == '.')
    527c:	80 91 b3 01 	lds	r24, 0x01B3
    5280:	88 23       	and	r24, r24
    5282:	79 f4       	brne	.+30     	; 0x52a2 <in_num2+0x1fe>
    5284:	89 8d       	ldd	r24, Y+25	; 0x19
    5286:	8e 32       	cpi	r24, 0x2E	; 46
    5288:	61 f4       	brne	.+24     	; 0x52a2 <in_num2+0x1fe>
            {
                LCD_vSend_char(x);
    528a:	89 8d       	ldd	r24, Y+25	; 0x19
    528c:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                floated = 1;
    5290:	81 e0       	ldi	r24, 0x01	; 1
    5292:	80 93 b3 01 	sts	0x01B3, r24
                length -= 2;
    5296:	80 91 b0 01 	lds	r24, 0x01B0
    529a:	82 50       	subi	r24, 0x02	; 2
    529c:	80 93 b0 01 	sts	0x01B0, r24
    52a0:	04 c0       	rjmp	.+8      	; 0x52aa <in_num2+0x206>
            }
            else if (x == '=')
    52a2:	89 8d       	ldd	r24, Y+25	; 0x19
    52a4:	8d 33       	cpi	r24, 0x3D	; 61
    52a6:	09 f4       	brne	.+2      	; 0x52aa <in_num2+0x206>
    52a8:	73 c0       	rjmp	.+230    	; 0x5390 <in_num2+0x2ec>
            {
                break;
    52aa:	80 e0       	ldi	r24, 0x00	; 0
    52ac:	90 e0       	ldi	r25, 0x00	; 0
    52ae:	a8 ec       	ldi	r26, 0xC8	; 200
    52b0:	b3 e4       	ldi	r27, 0x43	; 67
    52b2:	8b 87       	std	Y+11, r24	; 0x0b
    52b4:	9c 87       	std	Y+12, r25	; 0x0c
    52b6:	ad 87       	std	Y+13, r26	; 0x0d
    52b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    52bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    52be:	8d 85       	ldd	r24, Y+13	; 0x0d
    52c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    52c2:	20 e0       	ldi	r18, 0x00	; 0
    52c4:	30 e0       	ldi	r19, 0x00	; 0
    52c6:	4a ef       	ldi	r20, 0xFA	; 250
    52c8:	54 e4       	ldi	r21, 0x44	; 68
    52ca:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    52ce:	dc 01       	movw	r26, r24
    52d0:	cb 01       	movw	r24, r22
    52d2:	8f 83       	std	Y+7, r24	; 0x07
    52d4:	98 87       	std	Y+8, r25	; 0x08
    52d6:	a9 87       	std	Y+9, r26	; 0x09
    52d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    52da:	6f 81       	ldd	r22, Y+7	; 0x07
    52dc:	78 85       	ldd	r23, Y+8	; 0x08
    52de:	89 85       	ldd	r24, Y+9	; 0x09
    52e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    52e2:	20 e0       	ldi	r18, 0x00	; 0
    52e4:	30 e0       	ldi	r19, 0x00	; 0
    52e6:	40 e8       	ldi	r20, 0x80	; 128
    52e8:	5f e3       	ldi	r21, 0x3F	; 63
    52ea:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    52ee:	88 23       	and	r24, r24
    52f0:	2c f4       	brge	.+10     	; 0x52fc <in_num2+0x258>
		__ticks = 1;
    52f2:	81 e0       	ldi	r24, 0x01	; 1
    52f4:	90 e0       	ldi	r25, 0x00	; 0
    52f6:	9e 83       	std	Y+6, r25	; 0x06
    52f8:	8d 83       	std	Y+5, r24	; 0x05
    52fa:	3f c0       	rjmp	.+126    	; 0x537a <in_num2+0x2d6>
	else if (__tmp > 65535)
    52fc:	6f 81       	ldd	r22, Y+7	; 0x07
    52fe:	78 85       	ldd	r23, Y+8	; 0x08
    5300:	89 85       	ldd	r24, Y+9	; 0x09
    5302:	9a 85       	ldd	r25, Y+10	; 0x0a
    5304:	20 e0       	ldi	r18, 0x00	; 0
    5306:	3f ef       	ldi	r19, 0xFF	; 255
    5308:	4f e7       	ldi	r20, 0x7F	; 127
    530a:	57 e4       	ldi	r21, 0x47	; 71
    530c:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5310:	18 16       	cp	r1, r24
    5312:	4c f5       	brge	.+82     	; 0x5366 <in_num2+0x2c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5314:	6b 85       	ldd	r22, Y+11	; 0x0b
    5316:	7c 85       	ldd	r23, Y+12	; 0x0c
    5318:	8d 85       	ldd	r24, Y+13	; 0x0d
    531a:	9e 85       	ldd	r25, Y+14	; 0x0e
    531c:	20 e0       	ldi	r18, 0x00	; 0
    531e:	30 e0       	ldi	r19, 0x00	; 0
    5320:	40 e2       	ldi	r20, 0x20	; 32
    5322:	51 e4       	ldi	r21, 0x41	; 65
    5324:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5328:	dc 01       	movw	r26, r24
    532a:	cb 01       	movw	r24, r22
    532c:	bc 01       	movw	r22, r24
    532e:	cd 01       	movw	r24, r26
    5330:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5334:	dc 01       	movw	r26, r24
    5336:	cb 01       	movw	r24, r22
    5338:	9e 83       	std	Y+6, r25	; 0x06
    533a:	8d 83       	std	Y+5, r24	; 0x05
    533c:	0f c0       	rjmp	.+30     	; 0x535c <in_num2+0x2b8>
    533e:	88 ec       	ldi	r24, 0xC8	; 200
    5340:	90 e0       	ldi	r25, 0x00	; 0
    5342:	9c 83       	std	Y+4, r25	; 0x04
    5344:	8b 83       	std	Y+3, r24	; 0x03
    5346:	8b 81       	ldd	r24, Y+3	; 0x03
    5348:	9c 81       	ldd	r25, Y+4	; 0x04
    534a:	01 97       	sbiw	r24, 0x01	; 1
    534c:	f1 f7       	brne	.-4      	; 0x534a <in_num2+0x2a6>
    534e:	9c 83       	std	Y+4, r25	; 0x04
    5350:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5352:	8d 81       	ldd	r24, Y+5	; 0x05
    5354:	9e 81       	ldd	r25, Y+6	; 0x06
    5356:	01 97       	sbiw	r24, 0x01	; 1
    5358:	9e 83       	std	Y+6, r25	; 0x06
    535a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    535c:	8d 81       	ldd	r24, Y+5	; 0x05
    535e:	9e 81       	ldd	r25, Y+6	; 0x06
    5360:	00 97       	sbiw	r24, 0x00	; 0
    5362:	69 f7       	brne	.-38     	; 0x533e <in_num2+0x29a>
    5364:	c3 ce       	rjmp	.-634    	; 0x50ec <in_num2+0x48>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5366:	6f 81       	ldd	r22, Y+7	; 0x07
    5368:	78 85       	ldd	r23, Y+8	; 0x08
    536a:	89 85       	ldd	r24, Y+9	; 0x09
    536c:	9a 85       	ldd	r25, Y+10	; 0x0a
    536e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5372:	dc 01       	movw	r26, r24
    5374:	cb 01       	movw	r24, r22
    5376:	9e 83       	std	Y+6, r25	; 0x06
    5378:	8d 83       	std	Y+5, r24	; 0x05
    537a:	8d 81       	ldd	r24, Y+5	; 0x05
    537c:	9e 81       	ldd	r25, Y+6	; 0x06
    537e:	9a 83       	std	Y+2, r25	; 0x02
    5380:	89 83       	std	Y+1, r24	; 0x01
    5382:	89 81       	ldd	r24, Y+1	; 0x01
    5384:	9a 81       	ldd	r25, Y+2	; 0x02
    5386:	01 97       	sbiw	r24, 0x01	; 1
    5388:	f1 f7       	brne	.-4      	; 0x5386 <in_num2+0x2e2>
    538a:	9a 83       	std	Y+2, r25	; 0x02
    538c:	89 83       	std	Y+1, r24	; 0x01
    538e:	ae ce       	rjmp	.-676    	; 0x50ec <in_num2+0x48>
            }
            _delay_ms(400);
        }
    }
    num2 *= sign;
    5390:	80 91 ac 01 	lds	r24, 0x01AC
    5394:	90 91 ad 01 	lds	r25, 0x01AD
    5398:	a0 91 ae 01 	lds	r26, 0x01AE
    539c:	b0 91 af 01 	lds	r27, 0x01AF
    53a0:	bc 01       	movw	r22, r24
    53a2:	cd 01       	movw	r24, r26
    53a4:	2d 89       	ldd	r18, Y+21	; 0x15
    53a6:	3e 89       	ldd	r19, Y+22	; 0x16
    53a8:	4f 89       	ldd	r20, Y+23	; 0x17
    53aa:	58 8d       	ldd	r21, Y+24	; 0x18
    53ac:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    53b0:	dc 01       	movw	r26, r24
    53b2:	cb 01       	movw	r24, r22
    53b4:	80 93 ac 01 	sts	0x01AC, r24
    53b8:	90 93 ad 01 	sts	0x01AD, r25
    53bc:	a0 93 ae 01 	sts	0x01AE, r26
    53c0:	b0 93 af 01 	sts	0x01AF, r27
}
    53c4:	69 96       	adiw	r28, 0x19	; 25
    53c6:	0f b6       	in	r0, 0x3f	; 63
    53c8:	f8 94       	cli
    53ca:	de bf       	out	0x3e, r29	; 62
    53cc:	0f be       	out	0x3f, r0	; 63
    53ce:	cd bf       	out	0x3d, r28	; 61
    53d0:	cf 91       	pop	r28
    53d2:	df 91       	pop	r29
    53d4:	08 95       	ret

000053d6 <do_op>:

void do_op()
{
    53d6:	df 93       	push	r29
    53d8:	cf 93       	push	r28
    53da:	00 d0       	rcall	.+0      	; 0x53dc <do_op+0x6>
    53dc:	cd b7       	in	r28, 0x3d	; 61
    53de:	de b7       	in	r29, 0x3e	; 62
    switch (op)
    53e0:	80 91 b2 01 	lds	r24, 0x01B2
    53e4:	28 2f       	mov	r18, r24
    53e6:	30 e0       	ldi	r19, 0x00	; 0
    53e8:	3a 83       	std	Y+2, r19	; 0x02
    53ea:	29 83       	std	Y+1, r18	; 0x01
    53ec:	89 81       	ldd	r24, Y+1	; 0x01
    53ee:	9a 81       	ldd	r25, Y+2	; 0x02
    53f0:	8b 32       	cpi	r24, 0x2B	; 43
    53f2:	91 05       	cpc	r25, r1
    53f4:	b9 f1       	breq	.+110    	; 0x5464 <do_op+0x8e>
    53f6:	29 81       	ldd	r18, Y+1	; 0x01
    53f8:	3a 81       	ldd	r19, Y+2	; 0x02
    53fa:	2c 32       	cpi	r18, 0x2C	; 44
    53fc:	31 05       	cpc	r19, r1
    53fe:	3c f4       	brge	.+14     	; 0x540e <do_op+0x38>
    5400:	89 81       	ldd	r24, Y+1	; 0x01
    5402:	9a 81       	ldd	r25, Y+2	; 0x02
    5404:	8a 32       	cpi	r24, 0x2A	; 42
    5406:	91 05       	cpc	r25, r1
    5408:	09 f4       	brne	.+2      	; 0x540c <do_op+0x36>
    540a:	4b c0       	rjmp	.+150    	; 0x54a2 <do_op+0xcc>
    540c:	ae c0       	rjmp	.+348    	; 0x556a <do_op+0x194>
    540e:	29 81       	ldd	r18, Y+1	; 0x01
    5410:	3a 81       	ldd	r19, Y+2	; 0x02
    5412:	2d 32       	cpi	r18, 0x2D	; 45
    5414:	31 05       	cpc	r19, r1
    5416:	39 f0       	breq	.+14     	; 0x5426 <do_op+0x50>
    5418:	89 81       	ldd	r24, Y+1	; 0x01
    541a:	9a 81       	ldd	r25, Y+2	; 0x02
    541c:	8f 32       	cpi	r24, 0x2F	; 47
    541e:	91 05       	cpc	r25, r1
    5420:	09 f4       	brne	.+2      	; 0x5424 <do_op+0x4e>
    5422:	5e c0       	rjmp	.+188    	; 0x54e0 <do_op+0x10a>
    5424:	a2 c0       	rjmp	.+324    	; 0x556a <do_op+0x194>
    {
        case '-':
            result = num1 - num2;
    5426:	80 91 a8 01 	lds	r24, 0x01A8
    542a:	90 91 a9 01 	lds	r25, 0x01A9
    542e:	a0 91 aa 01 	lds	r26, 0x01AA
    5432:	b0 91 ab 01 	lds	r27, 0x01AB
    5436:	20 91 ac 01 	lds	r18, 0x01AC
    543a:	30 91 ad 01 	lds	r19, 0x01AD
    543e:	40 91 ae 01 	lds	r20, 0x01AE
    5442:	50 91 af 01 	lds	r21, 0x01AF
    5446:	bc 01       	movw	r22, r24
    5448:	cd 01       	movw	r24, r26
    544a:	0e 94 3d 14 	call	0x287a	; 0x287a <__subsf3>
    544e:	dc 01       	movw	r26, r24
    5450:	cb 01       	movw	r24, r22
    5452:	80 93 b4 01 	sts	0x01B4, r24
    5456:	90 93 b5 01 	sts	0x01B5, r25
    545a:	a0 93 b6 01 	sts	0x01B6, r26
    545e:	b0 93 b7 01 	sts	0x01B7, r27
    5462:	83 c0       	rjmp	.+262    	; 0x556a <do_op+0x194>
            break;
        case '+':
            result = num1 + num2;
    5464:	80 91 a8 01 	lds	r24, 0x01A8
    5468:	90 91 a9 01 	lds	r25, 0x01A9
    546c:	a0 91 aa 01 	lds	r26, 0x01AA
    5470:	b0 91 ab 01 	lds	r27, 0x01AB
    5474:	20 91 ac 01 	lds	r18, 0x01AC
    5478:	30 91 ad 01 	lds	r19, 0x01AD
    547c:	40 91 ae 01 	lds	r20, 0x01AE
    5480:	50 91 af 01 	lds	r21, 0x01AF
    5484:	bc 01       	movw	r22, r24
    5486:	cd 01       	movw	r24, r26
    5488:	0e 94 6e 14 	call	0x28dc	; 0x28dc <__addsf3>
    548c:	dc 01       	movw	r26, r24
    548e:	cb 01       	movw	r24, r22
    5490:	80 93 b4 01 	sts	0x01B4, r24
    5494:	90 93 b5 01 	sts	0x01B5, r25
    5498:	a0 93 b6 01 	sts	0x01B6, r26
    549c:	b0 93 b7 01 	sts	0x01B7, r27
    54a0:	64 c0       	rjmp	.+200    	; 0x556a <do_op+0x194>
            break;
        case '*':
            result = num1 * num2;
    54a2:	80 91 a8 01 	lds	r24, 0x01A8
    54a6:	90 91 a9 01 	lds	r25, 0x01A9
    54aa:	a0 91 aa 01 	lds	r26, 0x01AA
    54ae:	b0 91 ab 01 	lds	r27, 0x01AB
    54b2:	20 91 ac 01 	lds	r18, 0x01AC
    54b6:	30 91 ad 01 	lds	r19, 0x01AD
    54ba:	40 91 ae 01 	lds	r20, 0x01AE
    54be:	50 91 af 01 	lds	r21, 0x01AF
    54c2:	bc 01       	movw	r22, r24
    54c4:	cd 01       	movw	r24, r26
    54c6:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    54ca:	dc 01       	movw	r26, r24
    54cc:	cb 01       	movw	r24, r22
    54ce:	80 93 b4 01 	sts	0x01B4, r24
    54d2:	90 93 b5 01 	sts	0x01B5, r25
    54d6:	a0 93 b6 01 	sts	0x01B6, r26
    54da:	b0 93 b7 01 	sts	0x01B7, r27
    54de:	45 c0       	rjmp	.+138    	; 0x556a <do_op+0x194>
            break;
        case '/':
            if (num2 == 0)
    54e0:	80 91 ac 01 	lds	r24, 0x01AC
    54e4:	90 91 ad 01 	lds	r25, 0x01AD
    54e8:	a0 91 ae 01 	lds	r26, 0x01AE
    54ec:	b0 91 af 01 	lds	r27, 0x01AF
    54f0:	bc 01       	movw	r22, r24
    54f2:	cd 01       	movw	r24, r26
    54f4:	20 e0       	ldi	r18, 0x00	; 0
    54f6:	30 e0       	ldi	r19, 0x00	; 0
    54f8:	40 e0       	ldi	r20, 0x00	; 0
    54fa:	50 e0       	ldi	r21, 0x00	; 0
    54fc:	0e 94 41 16 	call	0x2c82	; 0x2c82 <__eqsf2>
    5500:	88 23       	and	r24, r24
    5502:	a9 f4       	brne	.+42     	; 0x552e <do_op+0x158>
            {
            	 LCD_movecursor(2, 1);
    5504:	82 e0       	ldi	r24, 0x02	; 2
    5506:	61 e0       	ldi	r22, 0x01	; 1
    5508:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
                LCD_vSend_string("Error: Div by 0");
    550c:	80 e6       	ldi	r24, 0x60	; 96
    550e:	90 e0       	ldi	r25, 0x00	; 0
    5510:	0e 94 2c 24 	call	0x4858	; 0x4858 <LCD_vSend_string>
                result = 0;
    5514:	80 e0       	ldi	r24, 0x00	; 0
    5516:	90 e0       	ldi	r25, 0x00	; 0
    5518:	a0 e0       	ldi	r26, 0x00	; 0
    551a:	b0 e0       	ldi	r27, 0x00	; 0
    551c:	80 93 b4 01 	sts	0x01B4, r24
    5520:	90 93 b5 01 	sts	0x01B5, r25
    5524:	a0 93 b6 01 	sts	0x01B6, r26
    5528:	b0 93 b7 01 	sts	0x01B7, r27
    552c:	1e c0       	rjmp	.+60     	; 0x556a <do_op+0x194>
            }
            else
            {
                result = num1 / num2;
    552e:	80 91 a8 01 	lds	r24, 0x01A8
    5532:	90 91 a9 01 	lds	r25, 0x01A9
    5536:	a0 91 aa 01 	lds	r26, 0x01AA
    553a:	b0 91 ab 01 	lds	r27, 0x01AB
    553e:	20 91 ac 01 	lds	r18, 0x01AC
    5542:	30 91 ad 01 	lds	r19, 0x01AD
    5546:	40 91 ae 01 	lds	r20, 0x01AE
    554a:	50 91 af 01 	lds	r21, 0x01AF
    554e:	bc 01       	movw	r22, r24
    5550:	cd 01       	movw	r24, r26
    5552:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <__divsf3>
    5556:	dc 01       	movw	r26, r24
    5558:	cb 01       	movw	r24, r22
    555a:	80 93 b4 01 	sts	0x01B4, r24
    555e:	90 93 b5 01 	sts	0x01B5, r25
    5562:	a0 93 b6 01 	sts	0x01B6, r26
    5566:	b0 93 b7 01 	sts	0x01B7, r27
            }
            break;
        default:
            break;
    }
}
    556a:	0f 90       	pop	r0
    556c:	0f 90       	pop	r0
    556e:	cf 91       	pop	r28
    5570:	df 91       	pop	r29
    5572:	08 95       	ret

00005574 <display_num>:

void display_num(char ro, char c)
{
    5574:	af 92       	push	r10
    5576:	bf 92       	push	r11
    5578:	cf 92       	push	r12
    557a:	df 92       	push	r13
    557c:	ef 92       	push	r14
    557e:	ff 92       	push	r15
    5580:	0f 93       	push	r16
    5582:	1f 93       	push	r17
    5584:	df 93       	push	r29
    5586:	cf 93       	push	r28
    5588:	cd b7       	in	r28, 0x3d	; 61
    558a:	de b7       	in	r29, 0x3e	; 62
    558c:	6b 97       	sbiw	r28, 0x1b	; 27
    558e:	0f b6       	in	r0, 0x3f	; 63
    5590:	f8 94       	cli
    5592:	de bf       	out	0x3e, r29	; 62
    5594:	0f be       	out	0x3f, r0	; 63
    5596:	cd bf       	out	0x3d, r28	; 61
    5598:	8a 8f       	std	Y+26, r24	; 0x1a
    559a:	6b 8f       	std	Y+27, r22	; 0x1b
    char n = 0;
    559c:	19 8e       	std	Y+25, r1	; 0x19
    double result1 = result;
    559e:	80 91 b4 01 	lds	r24, 0x01B4
    55a2:	90 91 b5 01 	lds	r25, 0x01B5
    55a6:	a0 91 b6 01 	lds	r26, 0x01B6
    55aa:	b0 91 b7 01 	lds	r27, 0x01B7
    55ae:	8d 8b       	std	Y+21, r24	; 0x15
    55b0:	9e 8b       	std	Y+22, r25	; 0x16
    55b2:	af 8b       	std	Y+23, r26	; 0x17
    55b4:	b8 8f       	std	Y+24, r27	; 0x18
    if (result1 < 0)
    55b6:	6d 89       	ldd	r22, Y+21	; 0x15
    55b8:	7e 89       	ldd	r23, Y+22	; 0x16
    55ba:	8f 89       	ldd	r24, Y+23	; 0x17
    55bc:	98 8d       	ldd	r25, Y+24	; 0x18
    55be:	20 e0       	ldi	r18, 0x00	; 0
    55c0:	30 e0       	ldi	r19, 0x00	; 0
    55c2:	40 e0       	ldi	r20, 0x00	; 0
    55c4:	50 e0       	ldi	r21, 0x00	; 0
    55c6:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    55ca:	88 23       	and	r24, r24
    55cc:	84 f4       	brge	.+32     	; 0x55ee <display_num+0x7a>
    {
        n = 1;
    55ce:	81 e0       	ldi	r24, 0x01	; 1
    55d0:	89 8f       	std	Y+25, r24	; 0x19
        result1 *= -1;
    55d2:	8d 89       	ldd	r24, Y+21	; 0x15
    55d4:	9e 89       	ldd	r25, Y+22	; 0x16
    55d6:	af 89       	ldd	r26, Y+23	; 0x17
    55d8:	b8 8d       	ldd	r27, Y+24	; 0x18
    55da:	b0 58       	subi	r27, 0x80	; 128
    55dc:	8d 8b       	std	Y+21, r24	; 0x15
    55de:	9e 8b       	std	Y+22, r25	; 0x16
    55e0:	af 8b       	std	Y+23, r26	; 0x17
    55e2:	b8 8f       	std	Y+24, r27	; 0x18
        res_length++;
    55e4:	80 91 b1 01 	lds	r24, 0x01B1
    55e8:	8f 5f       	subi	r24, 0xFF	; 255
    55ea:	80 93 b1 01 	sts	0x01B1, r24
    }
    res_length = 0;
    55ee:	10 92 b1 01 	sts	0x01B1, r1
    char cc = c;
    55f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    55f4:	8c 8b       	std	Y+20, r24	; 0x14
    long long res = (long long)result1;
    55f6:	6d 89       	ldd	r22, Y+21	; 0x15
    55f8:	7e 89       	ldd	r23, Y+22	; 0x16
    55fa:	8f 89       	ldd	r24, Y+23	; 0x17
    55fc:	98 8d       	ldd	r25, Y+24	; 0x18
    55fe:	0e 94 75 00 	call	0xea	; 0xea <__fixsfdi>
    5602:	a2 2e       	mov	r10, r18
    5604:	b3 2e       	mov	r11, r19
    5606:	c4 2e       	mov	r12, r20
    5608:	d5 2e       	mov	r13, r21
    560a:	e6 2e       	mov	r14, r22
    560c:	f7 2e       	mov	r15, r23
    560e:	08 2f       	mov	r16, r24
    5610:	19 2f       	mov	r17, r25
    5612:	ac 86       	std	Y+12, r10	; 0x0c
    5614:	bd 86       	std	Y+13, r11	; 0x0d
    5616:	ce 86       	std	Y+14, r12	; 0x0e
    5618:	df 86       	std	Y+15, r13	; 0x0f
    561a:	e8 8a       	std	Y+16, r14	; 0x10
    561c:	f9 8a       	std	Y+17, r15	; 0x11
    561e:	0a 8b       	std	Y+18, r16	; 0x12
    5620:	1b 8b       	std	Y+19, r17	; 0x13
    long long rem = (result1 - res) * 100.0;
    5622:	2c 85       	ldd	r18, Y+12	; 0x0c
    5624:	3d 85       	ldd	r19, Y+13	; 0x0d
    5626:	4e 85       	ldd	r20, Y+14	; 0x0e
    5628:	5f 85       	ldd	r21, Y+15	; 0x0f
    562a:	68 89       	ldd	r22, Y+16	; 0x10
    562c:	79 89       	ldd	r23, Y+17	; 0x11
    562e:	8a 89       	ldd	r24, Y+18	; 0x12
    5630:	9b 89       	ldd	r25, Y+19	; 0x13
    5632:	0e 94 91 01 	call	0x322	; 0x322 <__floatdisf>
    5636:	9b 01       	movw	r18, r22
    5638:	ac 01       	movw	r20, r24
    563a:	6d 89       	ldd	r22, Y+21	; 0x15
    563c:	7e 89       	ldd	r23, Y+22	; 0x16
    563e:	8f 89       	ldd	r24, Y+23	; 0x17
    5640:	98 8d       	ldd	r25, Y+24	; 0x18
    5642:	0e 94 3d 14 	call	0x287a	; 0x287a <__subsf3>
    5646:	dc 01       	movw	r26, r24
    5648:	cb 01       	movw	r24, r22
    564a:	bc 01       	movw	r22, r24
    564c:	cd 01       	movw	r24, r26
    564e:	20 e0       	ldi	r18, 0x00	; 0
    5650:	30 e0       	ldi	r19, 0x00	; 0
    5652:	48 ec       	ldi	r20, 0xC8	; 200
    5654:	52 e4       	ldi	r21, 0x42	; 66
    5656:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    565a:	dc 01       	movw	r26, r24
    565c:	cb 01       	movw	r24, r22
    565e:	bc 01       	movw	r22, r24
    5660:	cd 01       	movw	r24, r26
    5662:	0e 94 75 00 	call	0xea	; 0xea <__fixsfdi>
    5666:	a2 2e       	mov	r10, r18
    5668:	b3 2e       	mov	r11, r19
    566a:	c4 2e       	mov	r12, r20
    566c:	d5 2e       	mov	r13, r21
    566e:	e6 2e       	mov	r14, r22
    5670:	f7 2e       	mov	r15, r23
    5672:	08 2f       	mov	r16, r24
    5674:	19 2f       	mov	r17, r25
    5676:	ac 82       	std	Y+4, r10	; 0x04
    5678:	bd 82       	std	Y+5, r11	; 0x05
    567a:	ce 82       	std	Y+6, r12	; 0x06
    567c:	df 82       	std	Y+7, r13	; 0x07
    567e:	e8 86       	std	Y+8, r14	; 0x08
    5680:	f9 86       	std	Y+9, r15	; 0x09
    5682:	0a 87       	std	Y+10, r16	; 0x0a
    5684:	1b 87       	std	Y+11, r17	; 0x0b
    char point = 0;
    5686:	1b 82       	std	Y+3, r1	; 0x03

    if (res == 0 && rem == 0)
    5688:	8c 85       	ldd	r24, Y+12	; 0x0c
    568a:	9d 85       	ldd	r25, Y+13	; 0x0d
    568c:	89 2b       	or	r24, r25
    568e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5690:	89 2b       	or	r24, r25
    5692:	9f 85       	ldd	r25, Y+15	; 0x0f
    5694:	89 2b       	or	r24, r25
    5696:	98 89       	ldd	r25, Y+16	; 0x10
    5698:	89 2b       	or	r24, r25
    569a:	99 89       	ldd	r25, Y+17	; 0x11
    569c:	89 2b       	or	r24, r25
    569e:	9a 89       	ldd	r25, Y+18	; 0x12
    56a0:	89 2b       	or	r24, r25
    56a2:	9b 89       	ldd	r25, Y+19	; 0x13
    56a4:	89 2b       	or	r24, r25
    56a6:	88 23       	and	r24, r24
    56a8:	11 f5       	brne	.+68     	; 0x56ee <display_num+0x17a>
    56aa:	8c 81       	ldd	r24, Y+4	; 0x04
    56ac:	9d 81       	ldd	r25, Y+5	; 0x05
    56ae:	89 2b       	or	r24, r25
    56b0:	9e 81       	ldd	r25, Y+6	; 0x06
    56b2:	89 2b       	or	r24, r25
    56b4:	9f 81       	ldd	r25, Y+7	; 0x07
    56b6:	89 2b       	or	r24, r25
    56b8:	98 85       	ldd	r25, Y+8	; 0x08
    56ba:	89 2b       	or	r24, r25
    56bc:	99 85       	ldd	r25, Y+9	; 0x09
    56be:	89 2b       	or	r24, r25
    56c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    56c2:	89 2b       	or	r24, r25
    56c4:	9b 85       	ldd	r25, Y+11	; 0x0b
    56c6:	89 2b       	or	r24, r25
    56c8:	88 23       	and	r24, r24
    56ca:	89 f4       	brne	.+34     	; 0x56ee <display_num+0x17a>
    {
        LCD_movecursor(ro, c--);
    56cc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    56ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    56d0:	81 50       	subi	r24, 0x01	; 1
    56d2:	8b 8f       	std	Y+27, r24	; 0x1b
    56d4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    56d6:	69 2f       	mov	r22, r25
    56d8:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
        LCD_vSend_char('0');
    56dc:	80 e3       	ldi	r24, 0x30	; 48
    56de:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
        res_length++;
    56e2:	80 91 b1 01 	lds	r24, 0x01B1
    56e6:	8f 5f       	subi	r24, 0xFF	; 255
    56e8:	80 93 b1 01 	sts	0x01B1, r24
    56ec:	0a c2       	rjmp	.+1044   	; 0x5b02 <display_num+0x58e>
    }
    else
    {
        if (rem > 0)
    56ee:	8b 85       	ldd	r24, Y+11	; 0x0b
    56f0:	18 16       	cp	r1, r24
    56f2:	94 f1       	brlt	.+100    	; 0x5758 <display_num+0x1e4>
    56f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    56f6:	88 23       	and	r24, r24
    56f8:	09 f0       	breq	.+2      	; 0x56fc <display_num+0x188>
    56fa:	11 c1       	rjmp	.+546    	; 0x591e <display_num+0x3aa>
    56fc:	8a 85       	ldd	r24, Y+10	; 0x0a
    56fe:	88 23       	and	r24, r24
    5700:	59 f5       	brne	.+86     	; 0x5758 <display_num+0x1e4>
    5702:	8a 85       	ldd	r24, Y+10	; 0x0a
    5704:	88 23       	and	r24, r24
    5706:	09 f0       	breq	.+2      	; 0x570a <display_num+0x196>
    5708:	0a c1       	rjmp	.+532    	; 0x591e <display_num+0x3aa>
    570a:	89 85       	ldd	r24, Y+9	; 0x09
    570c:	88 23       	and	r24, r24
    570e:	21 f5       	brne	.+72     	; 0x5758 <display_num+0x1e4>
    5710:	89 85       	ldd	r24, Y+9	; 0x09
    5712:	88 23       	and	r24, r24
    5714:	09 f0       	breq	.+2      	; 0x5718 <display_num+0x1a4>
    5716:	03 c1       	rjmp	.+518    	; 0x591e <display_num+0x3aa>
    5718:	88 85       	ldd	r24, Y+8	; 0x08
    571a:	88 23       	and	r24, r24
    571c:	e9 f4       	brne	.+58     	; 0x5758 <display_num+0x1e4>
    571e:	88 85       	ldd	r24, Y+8	; 0x08
    5720:	88 23       	and	r24, r24
    5722:	09 f0       	breq	.+2      	; 0x5726 <display_num+0x1b2>
    5724:	fc c0       	rjmp	.+504    	; 0x591e <display_num+0x3aa>
    5726:	8f 81       	ldd	r24, Y+7	; 0x07
    5728:	88 23       	and	r24, r24
    572a:	b1 f4       	brne	.+44     	; 0x5758 <display_num+0x1e4>
    572c:	8f 81       	ldd	r24, Y+7	; 0x07
    572e:	88 23       	and	r24, r24
    5730:	09 f0       	breq	.+2      	; 0x5734 <display_num+0x1c0>
    5732:	f5 c0       	rjmp	.+490    	; 0x591e <display_num+0x3aa>
    5734:	8e 81       	ldd	r24, Y+6	; 0x06
    5736:	88 23       	and	r24, r24
    5738:	79 f4       	brne	.+30     	; 0x5758 <display_num+0x1e4>
    573a:	8e 81       	ldd	r24, Y+6	; 0x06
    573c:	88 23       	and	r24, r24
    573e:	09 f0       	breq	.+2      	; 0x5742 <display_num+0x1ce>
    5740:	ee c0       	rjmp	.+476    	; 0x591e <display_num+0x3aa>
    5742:	8d 81       	ldd	r24, Y+5	; 0x05
    5744:	88 23       	and	r24, r24
    5746:	41 f4       	brne	.+16     	; 0x5758 <display_num+0x1e4>
    5748:	8d 81       	ldd	r24, Y+5	; 0x05
    574a:	88 23       	and	r24, r24
    574c:	09 f0       	breq	.+2      	; 0x5750 <display_num+0x1dc>
    574e:	e7 c0       	rjmp	.+462    	; 0x591e <display_num+0x3aa>
    5750:	8c 81       	ldd	r24, Y+4	; 0x04
    5752:	88 23       	and	r24, r24
    5754:	09 f4       	brne	.+2      	; 0x5758 <display_num+0x1e4>
    5756:	e3 c0       	rjmp	.+454    	; 0x591e <display_num+0x3aa>
        {
            char y = rem % 10;
    5758:	ac 80       	ldd	r10, Y+4	; 0x04
    575a:	bd 80       	ldd	r11, Y+5	; 0x05
    575c:	ce 80       	ldd	r12, Y+6	; 0x06
    575e:	df 80       	ldd	r13, Y+7	; 0x07
    5760:	e8 84       	ldd	r14, Y+8	; 0x08
    5762:	f9 84       	ldd	r15, Y+9	; 0x09
    5764:	0a 85       	ldd	r16, Y+10	; 0x0a
    5766:	1b 85       	ldd	r17, Y+11	; 0x0b
    5768:	2a 2d       	mov	r18, r10
    576a:	3b 2d       	mov	r19, r11
    576c:	4c 2d       	mov	r20, r12
    576e:	5d 2d       	mov	r21, r13
    5770:	6e 2d       	mov	r22, r14
    5772:	7f 2d       	mov	r23, r15
    5774:	80 2f       	mov	r24, r16
    5776:	91 2f       	mov	r25, r17
    5778:	0f 2e       	mov	r0, r31
    577a:	fa e0       	ldi	r31, 0x0A	; 10
    577c:	af 2e       	mov	r10, r31
    577e:	f0 2d       	mov	r31, r0
    5780:	bb 24       	eor	r11, r11
    5782:	cc 24       	eor	r12, r12
    5784:	dd 24       	eor	r13, r13
    5786:	ee 24       	eor	r14, r14
    5788:	ff 24       	eor	r15, r15
    578a:	00 e0       	ldi	r16, 0x00	; 0
    578c:	10 e0       	ldi	r17, 0x00	; 0
    578e:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__moddi3>
    5792:	a2 2e       	mov	r10, r18
    5794:	b3 2e       	mov	r11, r19
    5796:	c4 2e       	mov	r12, r20
    5798:	d5 2e       	mov	r13, r21
    579a:	e6 2e       	mov	r14, r22
    579c:	f7 2e       	mov	r15, r23
    579e:	08 2f       	mov	r16, r24
    57a0:	19 2f       	mov	r17, r25
    57a2:	2a 2d       	mov	r18, r10
    57a4:	3b 2d       	mov	r19, r11
    57a6:	4c 2d       	mov	r20, r12
    57a8:	5d 2d       	mov	r21, r13
    57aa:	6e 2d       	mov	r22, r14
    57ac:	7f 2d       	mov	r23, r15
    57ae:	80 2f       	mov	r24, r16
    57b0:	91 2f       	mov	r25, r17
    57b2:	29 83       	std	Y+1, r18	; 0x01
    57b4:	6f c0       	rjmp	.+222    	; 0x5894 <display_num+0x320>
            while (rem > 0)
            {
                point++;
    57b6:	8b 81       	ldd	r24, Y+3	; 0x03
    57b8:	8f 5f       	subi	r24, 0xFF	; 255
    57ba:	8b 83       	std	Y+3, r24	; 0x03
                res_length++;
    57bc:	80 91 b1 01 	lds	r24, 0x01B1
    57c0:	8f 5f       	subi	r24, 0xFF	; 255
    57c2:	80 93 b1 01 	sts	0x01B1, r24
                LCD_movecursor(ro, c--);
    57c6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    57c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    57ca:	81 50       	subi	r24, 0x01	; 1
    57cc:	8b 8f       	std	Y+27, r24	; 0x1b
    57ce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    57d0:	69 2f       	mov	r22, r25
    57d2:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
                LCD_vSend_char('0' + y);
    57d6:	89 81       	ldd	r24, Y+1	; 0x01
    57d8:	80 5d       	subi	r24, 0xD0	; 208
    57da:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                rem /= 10;
    57de:	ac 80       	ldd	r10, Y+4	; 0x04
    57e0:	bd 80       	ldd	r11, Y+5	; 0x05
    57e2:	ce 80       	ldd	r12, Y+6	; 0x06
    57e4:	df 80       	ldd	r13, Y+7	; 0x07
    57e6:	e8 84       	ldd	r14, Y+8	; 0x08
    57e8:	f9 84       	ldd	r15, Y+9	; 0x09
    57ea:	0a 85       	ldd	r16, Y+10	; 0x0a
    57ec:	1b 85       	ldd	r17, Y+11	; 0x0b
    57ee:	2a 2d       	mov	r18, r10
    57f0:	3b 2d       	mov	r19, r11
    57f2:	4c 2d       	mov	r20, r12
    57f4:	5d 2d       	mov	r21, r13
    57f6:	6e 2d       	mov	r22, r14
    57f8:	7f 2d       	mov	r23, r15
    57fa:	80 2f       	mov	r24, r16
    57fc:	91 2f       	mov	r25, r17
    57fe:	0f 2e       	mov	r0, r31
    5800:	fa e0       	ldi	r31, 0x0A	; 10
    5802:	af 2e       	mov	r10, r31
    5804:	f0 2d       	mov	r31, r0
    5806:	bb 24       	eor	r11, r11
    5808:	cc 24       	eor	r12, r12
    580a:	dd 24       	eor	r13, r13
    580c:	ee 24       	eor	r14, r14
    580e:	ff 24       	eor	r15, r15
    5810:	00 e0       	ldi	r16, 0x00	; 0
    5812:	10 e0       	ldi	r17, 0x00	; 0
    5814:	0e 94 8c 02 	call	0x518	; 0x518 <__divdi3>
    5818:	a2 2e       	mov	r10, r18
    581a:	b3 2e       	mov	r11, r19
    581c:	c4 2e       	mov	r12, r20
    581e:	d5 2e       	mov	r13, r21
    5820:	e6 2e       	mov	r14, r22
    5822:	f7 2e       	mov	r15, r23
    5824:	08 2f       	mov	r16, r24
    5826:	19 2f       	mov	r17, r25
    5828:	ac 82       	std	Y+4, r10	; 0x04
    582a:	bd 82       	std	Y+5, r11	; 0x05
    582c:	ce 82       	std	Y+6, r12	; 0x06
    582e:	df 82       	std	Y+7, r13	; 0x07
    5830:	e8 86       	std	Y+8, r14	; 0x08
    5832:	f9 86       	std	Y+9, r15	; 0x09
    5834:	0a 87       	std	Y+10, r16	; 0x0a
    5836:	1b 87       	std	Y+11, r17	; 0x0b
                y = rem % 10;
    5838:	ac 80       	ldd	r10, Y+4	; 0x04
    583a:	bd 80       	ldd	r11, Y+5	; 0x05
    583c:	ce 80       	ldd	r12, Y+6	; 0x06
    583e:	df 80       	ldd	r13, Y+7	; 0x07
    5840:	e8 84       	ldd	r14, Y+8	; 0x08
    5842:	f9 84       	ldd	r15, Y+9	; 0x09
    5844:	0a 85       	ldd	r16, Y+10	; 0x0a
    5846:	1b 85       	ldd	r17, Y+11	; 0x0b
    5848:	2a 2d       	mov	r18, r10
    584a:	3b 2d       	mov	r19, r11
    584c:	4c 2d       	mov	r20, r12
    584e:	5d 2d       	mov	r21, r13
    5850:	6e 2d       	mov	r22, r14
    5852:	7f 2d       	mov	r23, r15
    5854:	80 2f       	mov	r24, r16
    5856:	91 2f       	mov	r25, r17
    5858:	0f 2e       	mov	r0, r31
    585a:	fa e0       	ldi	r31, 0x0A	; 10
    585c:	af 2e       	mov	r10, r31
    585e:	f0 2d       	mov	r31, r0
    5860:	bb 24       	eor	r11, r11
    5862:	cc 24       	eor	r12, r12
    5864:	dd 24       	eor	r13, r13
    5866:	ee 24       	eor	r14, r14
    5868:	ff 24       	eor	r15, r15
    586a:	00 e0       	ldi	r16, 0x00	; 0
    586c:	10 e0       	ldi	r17, 0x00	; 0
    586e:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__moddi3>
    5872:	a2 2e       	mov	r10, r18
    5874:	b3 2e       	mov	r11, r19
    5876:	c4 2e       	mov	r12, r20
    5878:	d5 2e       	mov	r13, r21
    587a:	e6 2e       	mov	r14, r22
    587c:	f7 2e       	mov	r15, r23
    587e:	08 2f       	mov	r16, r24
    5880:	19 2f       	mov	r17, r25
    5882:	2a 2d       	mov	r18, r10
    5884:	3b 2d       	mov	r19, r11
    5886:	4c 2d       	mov	r20, r12
    5888:	5d 2d       	mov	r21, r13
    588a:	6e 2d       	mov	r22, r14
    588c:	7f 2d       	mov	r23, r15
    588e:	80 2f       	mov	r24, r16
    5890:	91 2f       	mov	r25, r17
    5892:	29 83       	std	Y+1, r18	; 0x01
    else
    {
        if (rem > 0)
        {
            char y = rem % 10;
            while (rem > 0)
    5894:	8b 85       	ldd	r24, Y+11	; 0x0b
    5896:	18 16       	cp	r1, r24
    5898:	0c f4       	brge	.+2      	; 0x589c <display_num+0x328>
    589a:	8d cf       	rjmp	.-230    	; 0x57b6 <display_num+0x242>
    589c:	8b 85       	ldd	r24, Y+11	; 0x0b
    589e:	88 23       	and	r24, r24
    58a0:	71 f5       	brne	.+92     	; 0x58fe <display_num+0x38a>
    58a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    58a4:	88 23       	and	r24, r24
    58a6:	09 f0       	breq	.+2      	; 0x58aa <display_num+0x336>
    58a8:	86 cf       	rjmp	.-244    	; 0x57b6 <display_num+0x242>
    58aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    58ac:	88 23       	and	r24, r24
    58ae:	39 f5       	brne	.+78     	; 0x58fe <display_num+0x38a>
    58b0:	89 85       	ldd	r24, Y+9	; 0x09
    58b2:	88 23       	and	r24, r24
    58b4:	09 f0       	breq	.+2      	; 0x58b8 <display_num+0x344>
    58b6:	7f cf       	rjmp	.-258    	; 0x57b6 <display_num+0x242>
    58b8:	89 85       	ldd	r24, Y+9	; 0x09
    58ba:	88 23       	and	r24, r24
    58bc:	01 f5       	brne	.+64     	; 0x58fe <display_num+0x38a>
    58be:	88 85       	ldd	r24, Y+8	; 0x08
    58c0:	88 23       	and	r24, r24
    58c2:	09 f0       	breq	.+2      	; 0x58c6 <display_num+0x352>
    58c4:	78 cf       	rjmp	.-272    	; 0x57b6 <display_num+0x242>
    58c6:	88 85       	ldd	r24, Y+8	; 0x08
    58c8:	88 23       	and	r24, r24
    58ca:	c9 f4       	brne	.+50     	; 0x58fe <display_num+0x38a>
    58cc:	8f 81       	ldd	r24, Y+7	; 0x07
    58ce:	88 23       	and	r24, r24
    58d0:	09 f0       	breq	.+2      	; 0x58d4 <display_num+0x360>
    58d2:	71 cf       	rjmp	.-286    	; 0x57b6 <display_num+0x242>
    58d4:	8f 81       	ldd	r24, Y+7	; 0x07
    58d6:	88 23       	and	r24, r24
    58d8:	91 f4       	brne	.+36     	; 0x58fe <display_num+0x38a>
    58da:	8e 81       	ldd	r24, Y+6	; 0x06
    58dc:	88 23       	and	r24, r24
    58de:	09 f0       	breq	.+2      	; 0x58e2 <display_num+0x36e>
    58e0:	6a cf       	rjmp	.-300    	; 0x57b6 <display_num+0x242>
    58e2:	8e 81       	ldd	r24, Y+6	; 0x06
    58e4:	88 23       	and	r24, r24
    58e6:	59 f4       	brne	.+22     	; 0x58fe <display_num+0x38a>
    58e8:	8d 81       	ldd	r24, Y+5	; 0x05
    58ea:	88 23       	and	r24, r24
    58ec:	09 f0       	breq	.+2      	; 0x58f0 <display_num+0x37c>
    58ee:	63 cf       	rjmp	.-314    	; 0x57b6 <display_num+0x242>
    58f0:	8d 81       	ldd	r24, Y+5	; 0x05
    58f2:	88 23       	and	r24, r24
    58f4:	21 f4       	brne	.+8      	; 0x58fe <display_num+0x38a>
    58f6:	8c 81       	ldd	r24, Y+4	; 0x04
    58f8:	88 23       	and	r24, r24
    58fa:	09 f0       	breq	.+2      	; 0x58fe <display_num+0x38a>
    58fc:	5c cf       	rjmp	.-328    	; 0x57b6 <display_num+0x242>
                LCD_movecursor(ro, c--);
                LCD_vSend_char('0' + y);
                rem /= 10;
                y = rem % 10;
            }
            LCD_movecursor(ro, c--);
    58fe:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5900:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5902:	81 50       	subi	r24, 0x01	; 1
    5904:	8b 8f       	std	Y+27, r24	; 0x1b
    5906:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5908:	69 2f       	mov	r22, r25
    590a:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
            LCD_vSend_char('.');
    590e:	8e e2       	ldi	r24, 0x2E	; 46
    5910:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
            res_length++;
    5914:	80 91 b1 01 	lds	r24, 0x01B1
    5918:	8f 5f       	subi	r24, 0xFF	; 255
    591a:	80 93 b1 01 	sts	0x01B1, r24
        }

        char y = res % 10;
    591e:	ac 84       	ldd	r10, Y+12	; 0x0c
    5920:	bd 84       	ldd	r11, Y+13	; 0x0d
    5922:	ce 84       	ldd	r12, Y+14	; 0x0e
    5924:	df 84       	ldd	r13, Y+15	; 0x0f
    5926:	e8 88       	ldd	r14, Y+16	; 0x10
    5928:	f9 88       	ldd	r15, Y+17	; 0x11
    592a:	0a 89       	ldd	r16, Y+18	; 0x12
    592c:	1b 89       	ldd	r17, Y+19	; 0x13
    592e:	2a 2d       	mov	r18, r10
    5930:	3b 2d       	mov	r19, r11
    5932:	4c 2d       	mov	r20, r12
    5934:	5d 2d       	mov	r21, r13
    5936:	6e 2d       	mov	r22, r14
    5938:	7f 2d       	mov	r23, r15
    593a:	80 2f       	mov	r24, r16
    593c:	91 2f       	mov	r25, r17
    593e:	0f 2e       	mov	r0, r31
    5940:	fa e0       	ldi	r31, 0x0A	; 10
    5942:	af 2e       	mov	r10, r31
    5944:	f0 2d       	mov	r31, r0
    5946:	bb 24       	eor	r11, r11
    5948:	cc 24       	eor	r12, r12
    594a:	dd 24       	eor	r13, r13
    594c:	ee 24       	eor	r14, r14
    594e:	ff 24       	eor	r15, r15
    5950:	00 e0       	ldi	r16, 0x00	; 0
    5952:	10 e0       	ldi	r17, 0x00	; 0
    5954:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__moddi3>
    5958:	a2 2e       	mov	r10, r18
    595a:	b3 2e       	mov	r11, r19
    595c:	c4 2e       	mov	r12, r20
    595e:	d5 2e       	mov	r13, r21
    5960:	e6 2e       	mov	r14, r22
    5962:	f7 2e       	mov	r15, r23
    5964:	08 2f       	mov	r16, r24
    5966:	19 2f       	mov	r17, r25
    5968:	2a 2d       	mov	r18, r10
    596a:	3b 2d       	mov	r19, r11
    596c:	4c 2d       	mov	r20, r12
    596e:	5d 2d       	mov	r21, r13
    5970:	6e 2d       	mov	r22, r14
    5972:	7f 2d       	mov	r23, r15
    5974:	80 2f       	mov	r24, r16
    5976:	91 2f       	mov	r25, r17
    5978:	2a 83       	std	Y+2, r18	; 0x02
        if (res == 0)
    597a:	8c 85       	ldd	r24, Y+12	; 0x0c
    597c:	9d 85       	ldd	r25, Y+13	; 0x0d
    597e:	89 2b       	or	r24, r25
    5980:	9e 85       	ldd	r25, Y+14	; 0x0e
    5982:	89 2b       	or	r24, r25
    5984:	9f 85       	ldd	r25, Y+15	; 0x0f
    5986:	89 2b       	or	r24, r25
    5988:	98 89       	ldd	r25, Y+16	; 0x10
    598a:	89 2b       	or	r24, r25
    598c:	99 89       	ldd	r25, Y+17	; 0x11
    598e:	89 2b       	or	r24, r25
    5990:	9a 89       	ldd	r25, Y+18	; 0x12
    5992:	89 2b       	or	r24, r25
    5994:	9b 89       	ldd	r25, Y+19	; 0x13
    5996:	89 2b       	or	r24, r25
    5998:	88 23       	and	r24, r24
    599a:	09 f0       	breq	.+2      	; 0x599e <display_num+0x42a>
    599c:	7d c0       	rjmp	.+250    	; 0x5a98 <display_num+0x524>
        {
            LCD_movecursor(ro, c--);
    599e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    59a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    59a2:	81 50       	subi	r24, 0x01	; 1
    59a4:	8b 8f       	std	Y+27, r24	; 0x1b
    59a6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    59a8:	69 2f       	mov	r22, r25
    59aa:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
            LCD_vSend_char('0');
    59ae:	80 e3       	ldi	r24, 0x30	; 48
    59b0:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
            res_length++;
    59b4:	80 91 b1 01 	lds	r24, 0x01B1
    59b8:	8f 5f       	subi	r24, 0xFF	; 255
    59ba:	80 93 b1 01 	sts	0x01B1, r24
    59be:	a1 c0       	rjmp	.+322    	; 0x5b02 <display_num+0x58e>
        }
        else
        {
            while (res > 0)
            {
                res_length++;
    59c0:	80 91 b1 01 	lds	r24, 0x01B1
    59c4:	8f 5f       	subi	r24, 0xFF	; 255
    59c6:	80 93 b1 01 	sts	0x01B1, r24
                LCD_movecursor(ro, c--);
    59ca:	9b 8d       	ldd	r25, Y+27	; 0x1b
    59cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    59ce:	81 50       	subi	r24, 0x01	; 1
    59d0:	8b 8f       	std	Y+27, r24	; 0x1b
    59d2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    59d4:	69 2f       	mov	r22, r25
    59d6:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
                LCD_vSend_char('0' + y);
    59da:	8a 81       	ldd	r24, Y+2	; 0x02
    59dc:	80 5d       	subi	r24, 0xD0	; 208
    59de:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
                res /= 10;
    59e2:	ac 84       	ldd	r10, Y+12	; 0x0c
    59e4:	bd 84       	ldd	r11, Y+13	; 0x0d
    59e6:	ce 84       	ldd	r12, Y+14	; 0x0e
    59e8:	df 84       	ldd	r13, Y+15	; 0x0f
    59ea:	e8 88       	ldd	r14, Y+16	; 0x10
    59ec:	f9 88       	ldd	r15, Y+17	; 0x11
    59ee:	0a 89       	ldd	r16, Y+18	; 0x12
    59f0:	1b 89       	ldd	r17, Y+19	; 0x13
    59f2:	2a 2d       	mov	r18, r10
    59f4:	3b 2d       	mov	r19, r11
    59f6:	4c 2d       	mov	r20, r12
    59f8:	5d 2d       	mov	r21, r13
    59fa:	6e 2d       	mov	r22, r14
    59fc:	7f 2d       	mov	r23, r15
    59fe:	80 2f       	mov	r24, r16
    5a00:	91 2f       	mov	r25, r17
    5a02:	0f 2e       	mov	r0, r31
    5a04:	fa e0       	ldi	r31, 0x0A	; 10
    5a06:	af 2e       	mov	r10, r31
    5a08:	f0 2d       	mov	r31, r0
    5a0a:	bb 24       	eor	r11, r11
    5a0c:	cc 24       	eor	r12, r12
    5a0e:	dd 24       	eor	r13, r13
    5a10:	ee 24       	eor	r14, r14
    5a12:	ff 24       	eor	r15, r15
    5a14:	00 e0       	ldi	r16, 0x00	; 0
    5a16:	10 e0       	ldi	r17, 0x00	; 0
    5a18:	0e 94 8c 02 	call	0x518	; 0x518 <__divdi3>
    5a1c:	a2 2e       	mov	r10, r18
    5a1e:	b3 2e       	mov	r11, r19
    5a20:	c4 2e       	mov	r12, r20
    5a22:	d5 2e       	mov	r13, r21
    5a24:	e6 2e       	mov	r14, r22
    5a26:	f7 2e       	mov	r15, r23
    5a28:	08 2f       	mov	r16, r24
    5a2a:	19 2f       	mov	r17, r25
    5a2c:	ac 86       	std	Y+12, r10	; 0x0c
    5a2e:	bd 86       	std	Y+13, r11	; 0x0d
    5a30:	ce 86       	std	Y+14, r12	; 0x0e
    5a32:	df 86       	std	Y+15, r13	; 0x0f
    5a34:	e8 8a       	std	Y+16, r14	; 0x10
    5a36:	f9 8a       	std	Y+17, r15	; 0x11
    5a38:	0a 8b       	std	Y+18, r16	; 0x12
    5a3a:	1b 8b       	std	Y+19, r17	; 0x13
                y = res % 10;
    5a3c:	ac 84       	ldd	r10, Y+12	; 0x0c
    5a3e:	bd 84       	ldd	r11, Y+13	; 0x0d
    5a40:	ce 84       	ldd	r12, Y+14	; 0x0e
    5a42:	df 84       	ldd	r13, Y+15	; 0x0f
    5a44:	e8 88       	ldd	r14, Y+16	; 0x10
    5a46:	f9 88       	ldd	r15, Y+17	; 0x11
    5a48:	0a 89       	ldd	r16, Y+18	; 0x12
    5a4a:	1b 89       	ldd	r17, Y+19	; 0x13
    5a4c:	2a 2d       	mov	r18, r10
    5a4e:	3b 2d       	mov	r19, r11
    5a50:	4c 2d       	mov	r20, r12
    5a52:	5d 2d       	mov	r21, r13
    5a54:	6e 2d       	mov	r22, r14
    5a56:	7f 2d       	mov	r23, r15
    5a58:	80 2f       	mov	r24, r16
    5a5a:	91 2f       	mov	r25, r17
    5a5c:	0f 2e       	mov	r0, r31
    5a5e:	fa e0       	ldi	r31, 0x0A	; 10
    5a60:	af 2e       	mov	r10, r31
    5a62:	f0 2d       	mov	r31, r0
    5a64:	bb 24       	eor	r11, r11
    5a66:	cc 24       	eor	r12, r12
    5a68:	dd 24       	eor	r13, r13
    5a6a:	ee 24       	eor	r14, r14
    5a6c:	ff 24       	eor	r15, r15
    5a6e:	00 e0       	ldi	r16, 0x00	; 0
    5a70:	10 e0       	ldi	r17, 0x00	; 0
    5a72:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__moddi3>
    5a76:	a2 2e       	mov	r10, r18
    5a78:	b3 2e       	mov	r11, r19
    5a7a:	c4 2e       	mov	r12, r20
    5a7c:	d5 2e       	mov	r13, r21
    5a7e:	e6 2e       	mov	r14, r22
    5a80:	f7 2e       	mov	r15, r23
    5a82:	08 2f       	mov	r16, r24
    5a84:	19 2f       	mov	r17, r25
    5a86:	2a 2d       	mov	r18, r10
    5a88:	3b 2d       	mov	r19, r11
    5a8a:	4c 2d       	mov	r20, r12
    5a8c:	5d 2d       	mov	r21, r13
    5a8e:	6e 2d       	mov	r22, r14
    5a90:	7f 2d       	mov	r23, r15
    5a92:	80 2f       	mov	r24, r16
    5a94:	91 2f       	mov	r25, r17
    5a96:	2a 83       	std	Y+2, r18	; 0x02
            LCD_vSend_char('0');
            res_length++;
        }
        else
        {
            while (res > 0)
    5a98:	8b 89       	ldd	r24, Y+19	; 0x13
    5a9a:	18 16       	cp	r1, r24
    5a9c:	0c f4       	brge	.+2      	; 0x5aa0 <display_num+0x52c>
    5a9e:	90 cf       	rjmp	.-224    	; 0x59c0 <display_num+0x44c>
    5aa0:	8b 89       	ldd	r24, Y+19	; 0x13
    5aa2:	88 23       	and	r24, r24
    5aa4:	71 f5       	brne	.+92     	; 0x5b02 <display_num+0x58e>
    5aa6:	8a 89       	ldd	r24, Y+18	; 0x12
    5aa8:	88 23       	and	r24, r24
    5aaa:	09 f0       	breq	.+2      	; 0x5aae <display_num+0x53a>
    5aac:	89 cf       	rjmp	.-238    	; 0x59c0 <display_num+0x44c>
    5aae:	8a 89       	ldd	r24, Y+18	; 0x12
    5ab0:	88 23       	and	r24, r24
    5ab2:	39 f5       	brne	.+78     	; 0x5b02 <display_num+0x58e>
    5ab4:	89 89       	ldd	r24, Y+17	; 0x11
    5ab6:	88 23       	and	r24, r24
    5ab8:	09 f0       	breq	.+2      	; 0x5abc <display_num+0x548>
    5aba:	82 cf       	rjmp	.-252    	; 0x59c0 <display_num+0x44c>
    5abc:	89 89       	ldd	r24, Y+17	; 0x11
    5abe:	88 23       	and	r24, r24
    5ac0:	01 f5       	brne	.+64     	; 0x5b02 <display_num+0x58e>
    5ac2:	88 89       	ldd	r24, Y+16	; 0x10
    5ac4:	88 23       	and	r24, r24
    5ac6:	09 f0       	breq	.+2      	; 0x5aca <display_num+0x556>
    5ac8:	7b cf       	rjmp	.-266    	; 0x59c0 <display_num+0x44c>
    5aca:	88 89       	ldd	r24, Y+16	; 0x10
    5acc:	88 23       	and	r24, r24
    5ace:	c9 f4       	brne	.+50     	; 0x5b02 <display_num+0x58e>
    5ad0:	8f 85       	ldd	r24, Y+15	; 0x0f
    5ad2:	88 23       	and	r24, r24
    5ad4:	09 f0       	breq	.+2      	; 0x5ad8 <display_num+0x564>
    5ad6:	74 cf       	rjmp	.-280    	; 0x59c0 <display_num+0x44c>
    5ad8:	8f 85       	ldd	r24, Y+15	; 0x0f
    5ada:	88 23       	and	r24, r24
    5adc:	91 f4       	brne	.+36     	; 0x5b02 <display_num+0x58e>
    5ade:	8e 85       	ldd	r24, Y+14	; 0x0e
    5ae0:	88 23       	and	r24, r24
    5ae2:	09 f0       	breq	.+2      	; 0x5ae6 <display_num+0x572>
    5ae4:	6d cf       	rjmp	.-294    	; 0x59c0 <display_num+0x44c>
    5ae6:	8e 85       	ldd	r24, Y+14	; 0x0e
    5ae8:	88 23       	and	r24, r24
    5aea:	59 f4       	brne	.+22     	; 0x5b02 <display_num+0x58e>
    5aec:	8d 85       	ldd	r24, Y+13	; 0x0d
    5aee:	88 23       	and	r24, r24
    5af0:	09 f0       	breq	.+2      	; 0x5af4 <display_num+0x580>
    5af2:	66 cf       	rjmp	.-308    	; 0x59c0 <display_num+0x44c>
    5af4:	8d 85       	ldd	r24, Y+13	; 0x0d
    5af6:	88 23       	and	r24, r24
    5af8:	21 f4       	brne	.+8      	; 0x5b02 <display_num+0x58e>
    5afa:	8c 85       	ldd	r24, Y+12	; 0x0c
    5afc:	88 23       	and	r24, r24
    5afe:	09 f0       	breq	.+2      	; 0x5b02 <display_num+0x58e>
    5b00:	5f cf       	rjmp	.-322    	; 0x59c0 <display_num+0x44c>
                y = res % 10;
            }
        }
    }

    if (n == 1)
    5b02:	89 8d       	ldd	r24, Y+25	; 0x19
    5b04:	81 30       	cpi	r24, 0x01	; 1
    5b06:	59 f4       	brne	.+22     	; 0x5b1e <display_num+0x5aa>
    {
        LCD_movecursor(ro, c--);
    5b08:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5b0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5b0c:	81 50       	subi	r24, 0x01	; 1
    5b0e:	8b 8f       	std	Y+27, r24	; 0x1b
    5b10:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5b12:	69 2f       	mov	r22, r25
    5b14:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
        LCD_vSend_char('-');
    5b18:	8d e2       	ldi	r24, 0x2D	; 45
    5b1a:	0e 94 9a 22 	call	0x4534	; 0x4534 <LCD_vSend_char>
    }
    LCD_movecursor(ro, cc + 1);
    5b1e:	8c 89       	ldd	r24, Y+20	; 0x14
    5b20:	98 2f       	mov	r25, r24
    5b22:	9f 5f       	subi	r25, 0xFF	; 255
    5b24:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5b26:	69 2f       	mov	r22, r25
    5b28:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
}
    5b2c:	6b 96       	adiw	r28, 0x1b	; 27
    5b2e:	0f b6       	in	r0, 0x3f	; 63
    5b30:	f8 94       	cli
    5b32:	de bf       	out	0x3e, r29	; 62
    5b34:	0f be       	out	0x3f, r0	; 63
    5b36:	cd bf       	out	0x3d, r28	; 61
    5b38:	cf 91       	pop	r28
    5b3a:	df 91       	pop	r29
    5b3c:	1f 91       	pop	r17
    5b3e:	0f 91       	pop	r16
    5b40:	ff 90       	pop	r15
    5b42:	ef 90       	pop	r14
    5b44:	df 90       	pop	r13
    5b46:	cf 90       	pop	r12
    5b48:	bf 90       	pop	r11
    5b4a:	af 90       	pop	r10
    5b4c:	08 95       	ret

00005b4e <buzzer_1>:

void buzzer_1(void)
{
    5b4e:	df 93       	push	r29
    5b50:	cf 93       	push	r28
    5b52:	cd b7       	in	r28, 0x3d	; 61
    5b54:	de b7       	in	r29, 0x3e	; 62
    5b56:	6c 97       	sbiw	r28, 0x1c	; 28
    5b58:	0f b6       	in	r0, 0x3f	; 63
    5b5a:	f8 94       	cli
    5b5c:	de bf       	out	0x3e, r29	; 62
    5b5e:	0f be       	out	0x3f, r0	; 63
    5b60:	cd bf       	out	0x3d, r28	; 61
    PORTC = 0b00000110;
    5b62:	e5 e3       	ldi	r30, 0x35	; 53
    5b64:	f0 e0       	ldi	r31, 0x00	; 0
    5b66:	86 e0       	ldi	r24, 0x06	; 6
    5b68:	80 83       	st	Z, r24
    5b6a:	80 e0       	ldi	r24, 0x00	; 0
    5b6c:	90 e0       	ldi	r25, 0x00	; 0
    5b6e:	aa ef       	ldi	r26, 0xFA	; 250
    5b70:	b3 e4       	ldi	r27, 0x43	; 67
    5b72:	89 8f       	std	Y+25, r24	; 0x19
    5b74:	9a 8f       	std	Y+26, r25	; 0x1a
    5b76:	ab 8f       	std	Y+27, r26	; 0x1b
    5b78:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b7a:	69 8d       	ldd	r22, Y+25	; 0x19
    5b7c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5b7e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5b80:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5b82:	20 e0       	ldi	r18, 0x00	; 0
    5b84:	30 e0       	ldi	r19, 0x00	; 0
    5b86:	4a ef       	ldi	r20, 0xFA	; 250
    5b88:	54 e4       	ldi	r21, 0x44	; 68
    5b8a:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5b8e:	dc 01       	movw	r26, r24
    5b90:	cb 01       	movw	r24, r22
    5b92:	8d 8b       	std	Y+21, r24	; 0x15
    5b94:	9e 8b       	std	Y+22, r25	; 0x16
    5b96:	af 8b       	std	Y+23, r26	; 0x17
    5b98:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5b9a:	6d 89       	ldd	r22, Y+21	; 0x15
    5b9c:	7e 89       	ldd	r23, Y+22	; 0x16
    5b9e:	8f 89       	ldd	r24, Y+23	; 0x17
    5ba0:	98 8d       	ldd	r25, Y+24	; 0x18
    5ba2:	20 e0       	ldi	r18, 0x00	; 0
    5ba4:	30 e0       	ldi	r19, 0x00	; 0
    5ba6:	40 e8       	ldi	r20, 0x80	; 128
    5ba8:	5f e3       	ldi	r21, 0x3F	; 63
    5baa:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    5bae:	88 23       	and	r24, r24
    5bb0:	2c f4       	brge	.+10     	; 0x5bbc <buzzer_1+0x6e>
		__ticks = 1;
    5bb2:	81 e0       	ldi	r24, 0x01	; 1
    5bb4:	90 e0       	ldi	r25, 0x00	; 0
    5bb6:	9c 8b       	std	Y+20, r25	; 0x14
    5bb8:	8b 8b       	std	Y+19, r24	; 0x13
    5bba:	3f c0       	rjmp	.+126    	; 0x5c3a <buzzer_1+0xec>
	else if (__tmp > 65535)
    5bbc:	6d 89       	ldd	r22, Y+21	; 0x15
    5bbe:	7e 89       	ldd	r23, Y+22	; 0x16
    5bc0:	8f 89       	ldd	r24, Y+23	; 0x17
    5bc2:	98 8d       	ldd	r25, Y+24	; 0x18
    5bc4:	20 e0       	ldi	r18, 0x00	; 0
    5bc6:	3f ef       	ldi	r19, 0xFF	; 255
    5bc8:	4f e7       	ldi	r20, 0x7F	; 127
    5bca:	57 e4       	ldi	r21, 0x47	; 71
    5bcc:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5bd0:	18 16       	cp	r1, r24
    5bd2:	4c f5       	brge	.+82     	; 0x5c26 <buzzer_1+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5bd4:	69 8d       	ldd	r22, Y+25	; 0x19
    5bd6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5bd8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5bda:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5bdc:	20 e0       	ldi	r18, 0x00	; 0
    5bde:	30 e0       	ldi	r19, 0x00	; 0
    5be0:	40 e2       	ldi	r20, 0x20	; 32
    5be2:	51 e4       	ldi	r21, 0x41	; 65
    5be4:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5be8:	dc 01       	movw	r26, r24
    5bea:	cb 01       	movw	r24, r22
    5bec:	bc 01       	movw	r22, r24
    5bee:	cd 01       	movw	r24, r26
    5bf0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5bf4:	dc 01       	movw	r26, r24
    5bf6:	cb 01       	movw	r24, r22
    5bf8:	9c 8b       	std	Y+20, r25	; 0x14
    5bfa:	8b 8b       	std	Y+19, r24	; 0x13
    5bfc:	0f c0       	rjmp	.+30     	; 0x5c1c <buzzer_1+0xce>
    5bfe:	88 ec       	ldi	r24, 0xC8	; 200
    5c00:	90 e0       	ldi	r25, 0x00	; 0
    5c02:	9a 8b       	std	Y+18, r25	; 0x12
    5c04:	89 8b       	std	Y+17, r24	; 0x11
    5c06:	89 89       	ldd	r24, Y+17	; 0x11
    5c08:	9a 89       	ldd	r25, Y+18	; 0x12
    5c0a:	01 97       	sbiw	r24, 0x01	; 1
    5c0c:	f1 f7       	brne	.-4      	; 0x5c0a <buzzer_1+0xbc>
    5c0e:	9a 8b       	std	Y+18, r25	; 0x12
    5c10:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5c12:	8b 89       	ldd	r24, Y+19	; 0x13
    5c14:	9c 89       	ldd	r25, Y+20	; 0x14
    5c16:	01 97       	sbiw	r24, 0x01	; 1
    5c18:	9c 8b       	std	Y+20, r25	; 0x14
    5c1a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5c1c:	8b 89       	ldd	r24, Y+19	; 0x13
    5c1e:	9c 89       	ldd	r25, Y+20	; 0x14
    5c20:	00 97       	sbiw	r24, 0x00	; 0
    5c22:	69 f7       	brne	.-38     	; 0x5bfe <buzzer_1+0xb0>
    5c24:	14 c0       	rjmp	.+40     	; 0x5c4e <buzzer_1+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c26:	6d 89       	ldd	r22, Y+21	; 0x15
    5c28:	7e 89       	ldd	r23, Y+22	; 0x16
    5c2a:	8f 89       	ldd	r24, Y+23	; 0x17
    5c2c:	98 8d       	ldd	r25, Y+24	; 0x18
    5c2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c32:	dc 01       	movw	r26, r24
    5c34:	cb 01       	movw	r24, r22
    5c36:	9c 8b       	std	Y+20, r25	; 0x14
    5c38:	8b 8b       	std	Y+19, r24	; 0x13
    5c3a:	8b 89       	ldd	r24, Y+19	; 0x13
    5c3c:	9c 89       	ldd	r25, Y+20	; 0x14
    5c3e:	98 8b       	std	Y+16, r25	; 0x10
    5c40:	8f 87       	std	Y+15, r24	; 0x0f
    5c42:	8f 85       	ldd	r24, Y+15	; 0x0f
    5c44:	98 89       	ldd	r25, Y+16	; 0x10
    5c46:	01 97       	sbiw	r24, 0x01	; 1
    5c48:	f1 f7       	brne	.-4      	; 0x5c46 <buzzer_1+0xf8>
    5c4a:	98 8b       	std	Y+16, r25	; 0x10
    5c4c:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(500);
    PORTC = 0b00000000;
    5c4e:	e5 e3       	ldi	r30, 0x35	; 53
    5c50:	f0 e0       	ldi	r31, 0x00	; 0
    5c52:	10 82       	st	Z, r1
    5c54:	80 e0       	ldi	r24, 0x00	; 0
    5c56:	90 e0       	ldi	r25, 0x00	; 0
    5c58:	aa ef       	ldi	r26, 0xFA	; 250
    5c5a:	b3 e4       	ldi	r27, 0x43	; 67
    5c5c:	8b 87       	std	Y+11, r24	; 0x0b
    5c5e:	9c 87       	std	Y+12, r25	; 0x0c
    5c60:	ad 87       	std	Y+13, r26	; 0x0d
    5c62:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c64:	6b 85       	ldd	r22, Y+11	; 0x0b
    5c66:	7c 85       	ldd	r23, Y+12	; 0x0c
    5c68:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c6a:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c6c:	20 e0       	ldi	r18, 0x00	; 0
    5c6e:	30 e0       	ldi	r19, 0x00	; 0
    5c70:	4a ef       	ldi	r20, 0xFA	; 250
    5c72:	54 e4       	ldi	r21, 0x44	; 68
    5c74:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5c78:	dc 01       	movw	r26, r24
    5c7a:	cb 01       	movw	r24, r22
    5c7c:	8f 83       	std	Y+7, r24	; 0x07
    5c7e:	98 87       	std	Y+8, r25	; 0x08
    5c80:	a9 87       	std	Y+9, r26	; 0x09
    5c82:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5c84:	6f 81       	ldd	r22, Y+7	; 0x07
    5c86:	78 85       	ldd	r23, Y+8	; 0x08
    5c88:	89 85       	ldd	r24, Y+9	; 0x09
    5c8a:	9a 85       	ldd	r25, Y+10	; 0x0a
    5c8c:	20 e0       	ldi	r18, 0x00	; 0
    5c8e:	30 e0       	ldi	r19, 0x00	; 0
    5c90:	40 e8       	ldi	r20, 0x80	; 128
    5c92:	5f e3       	ldi	r21, 0x3F	; 63
    5c94:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    5c98:	88 23       	and	r24, r24
    5c9a:	2c f4       	brge	.+10     	; 0x5ca6 <buzzer_1+0x158>
		__ticks = 1;
    5c9c:	81 e0       	ldi	r24, 0x01	; 1
    5c9e:	90 e0       	ldi	r25, 0x00	; 0
    5ca0:	9e 83       	std	Y+6, r25	; 0x06
    5ca2:	8d 83       	std	Y+5, r24	; 0x05
    5ca4:	3f c0       	rjmp	.+126    	; 0x5d24 <buzzer_1+0x1d6>
	else if (__tmp > 65535)
    5ca6:	6f 81       	ldd	r22, Y+7	; 0x07
    5ca8:	78 85       	ldd	r23, Y+8	; 0x08
    5caa:	89 85       	ldd	r24, Y+9	; 0x09
    5cac:	9a 85       	ldd	r25, Y+10	; 0x0a
    5cae:	20 e0       	ldi	r18, 0x00	; 0
    5cb0:	3f ef       	ldi	r19, 0xFF	; 255
    5cb2:	4f e7       	ldi	r20, 0x7F	; 127
    5cb4:	57 e4       	ldi	r21, 0x47	; 71
    5cb6:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5cba:	18 16       	cp	r1, r24
    5cbc:	4c f5       	brge	.+82     	; 0x5d10 <buzzer_1+0x1c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cbe:	6b 85       	ldd	r22, Y+11	; 0x0b
    5cc0:	7c 85       	ldd	r23, Y+12	; 0x0c
    5cc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    5cc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    5cc6:	20 e0       	ldi	r18, 0x00	; 0
    5cc8:	30 e0       	ldi	r19, 0x00	; 0
    5cca:	40 e2       	ldi	r20, 0x20	; 32
    5ccc:	51 e4       	ldi	r21, 0x41	; 65
    5cce:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5cd2:	dc 01       	movw	r26, r24
    5cd4:	cb 01       	movw	r24, r22
    5cd6:	bc 01       	movw	r22, r24
    5cd8:	cd 01       	movw	r24, r26
    5cda:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5cde:	dc 01       	movw	r26, r24
    5ce0:	cb 01       	movw	r24, r22
    5ce2:	9e 83       	std	Y+6, r25	; 0x06
    5ce4:	8d 83       	std	Y+5, r24	; 0x05
    5ce6:	0f c0       	rjmp	.+30     	; 0x5d06 <buzzer_1+0x1b8>
    5ce8:	88 ec       	ldi	r24, 0xC8	; 200
    5cea:	90 e0       	ldi	r25, 0x00	; 0
    5cec:	9c 83       	std	Y+4, r25	; 0x04
    5cee:	8b 83       	std	Y+3, r24	; 0x03
    5cf0:	8b 81       	ldd	r24, Y+3	; 0x03
    5cf2:	9c 81       	ldd	r25, Y+4	; 0x04
    5cf4:	01 97       	sbiw	r24, 0x01	; 1
    5cf6:	f1 f7       	brne	.-4      	; 0x5cf4 <buzzer_1+0x1a6>
    5cf8:	9c 83       	std	Y+4, r25	; 0x04
    5cfa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cfc:	8d 81       	ldd	r24, Y+5	; 0x05
    5cfe:	9e 81       	ldd	r25, Y+6	; 0x06
    5d00:	01 97       	sbiw	r24, 0x01	; 1
    5d02:	9e 83       	std	Y+6, r25	; 0x06
    5d04:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d06:	8d 81       	ldd	r24, Y+5	; 0x05
    5d08:	9e 81       	ldd	r25, Y+6	; 0x06
    5d0a:	00 97       	sbiw	r24, 0x00	; 0
    5d0c:	69 f7       	brne	.-38     	; 0x5ce8 <buzzer_1+0x19a>
    5d0e:	14 c0       	rjmp	.+40     	; 0x5d38 <buzzer_1+0x1ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d10:	6f 81       	ldd	r22, Y+7	; 0x07
    5d12:	78 85       	ldd	r23, Y+8	; 0x08
    5d14:	89 85       	ldd	r24, Y+9	; 0x09
    5d16:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d18:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5d1c:	dc 01       	movw	r26, r24
    5d1e:	cb 01       	movw	r24, r22
    5d20:	9e 83       	std	Y+6, r25	; 0x06
    5d22:	8d 83       	std	Y+5, r24	; 0x05
    5d24:	8d 81       	ldd	r24, Y+5	; 0x05
    5d26:	9e 81       	ldd	r25, Y+6	; 0x06
    5d28:	9a 83       	std	Y+2, r25	; 0x02
    5d2a:	89 83       	std	Y+1, r24	; 0x01
    5d2c:	89 81       	ldd	r24, Y+1	; 0x01
    5d2e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d30:	01 97       	sbiw	r24, 0x01	; 1
    5d32:	f1 f7       	brne	.-4      	; 0x5d30 <buzzer_1+0x1e2>
    5d34:	9a 83       	std	Y+2, r25	; 0x02
    5d36:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(500);
}
    5d38:	6c 96       	adiw	r28, 0x1c	; 28
    5d3a:	0f b6       	in	r0, 0x3f	; 63
    5d3c:	f8 94       	cli
    5d3e:	de bf       	out	0x3e, r29	; 62
    5d40:	0f be       	out	0x3f, r0	; 63
    5d42:	cd bf       	out	0x3d, r28	; 61
    5d44:	cf 91       	pop	r28
    5d46:	df 91       	pop	r29
    5d48:	08 95       	ret

00005d4a <main>:

int main(void)
{
    5d4a:	df 93       	push	r29
    5d4c:	cf 93       	push	r28
    5d4e:	cd b7       	in	r28, 0x3d	; 61
    5d50:	de b7       	in	r29, 0x3e	; 62
    5d52:	aa 97       	sbiw	r28, 0x2a	; 42
    5d54:	0f b6       	in	r0, 0x3f	; 63
    5d56:	f8 94       	cli
    5d58:	de bf       	out	0x3e, r29	; 62
    5d5a:	0f be       	out	0x3f, r0	; 63
    5d5c:	cd bf       	out	0x3d, r28	; 61
    keypad_vInit();
    5d5e:	0e 94 4d 30 	call	0x609a	; 0x609a <keypad_vInit>
    LCD_vInit();
    5d62:	0e 94 0f 20 	call	0x401e	; 0x401e <LCD_vInit>
    LCD_movecursor(1, 1);
    5d66:	81 e0       	ldi	r24, 0x01	; 1
    5d68:	61 e0       	ldi	r22, 0x01	; 1
    5d6a:	0e 94 d0 24 	call	0x49a0	; 0x49a0 <LCD_movecursor>
    LCD_vSend_string("ENG_Kareem Adel");
    5d6e:	80 e7       	ldi	r24, 0x70	; 112
    5d70:	90 e0       	ldi	r25, 0x00	; 0
    5d72:	0e 94 2c 24 	call	0x4858	; 0x4858 <LCD_vSend_string>
    5d76:	80 e0       	ldi	r24, 0x00	; 0
    5d78:	90 e0       	ldi	r25, 0x00	; 0
    5d7a:	aa ef       	ldi	r26, 0xFA	; 250
    5d7c:	b4 e4       	ldi	r27, 0x44	; 68
    5d7e:	8f a3       	std	Y+39, r24	; 0x27
    5d80:	98 a7       	std	Y+40, r25	; 0x28
    5d82:	a9 a7       	std	Y+41, r26	; 0x29
    5d84:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d86:	6f a1       	ldd	r22, Y+39	; 0x27
    5d88:	78 a5       	ldd	r23, Y+40	; 0x28
    5d8a:	89 a5       	ldd	r24, Y+41	; 0x29
    5d8c:	9a a5       	ldd	r25, Y+42	; 0x2a
    5d8e:	20 e0       	ldi	r18, 0x00	; 0
    5d90:	30 e0       	ldi	r19, 0x00	; 0
    5d92:	4a ef       	ldi	r20, 0xFA	; 250
    5d94:	54 e4       	ldi	r21, 0x44	; 68
    5d96:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5d9a:	dc 01       	movw	r26, r24
    5d9c:	cb 01       	movw	r24, r22
    5d9e:	8b a3       	std	Y+35, r24	; 0x23
    5da0:	9c a3       	std	Y+36, r25	; 0x24
    5da2:	ad a3       	std	Y+37, r26	; 0x25
    5da4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5da6:	6b a1       	ldd	r22, Y+35	; 0x23
    5da8:	7c a1       	ldd	r23, Y+36	; 0x24
    5daa:	8d a1       	ldd	r24, Y+37	; 0x25
    5dac:	9e a1       	ldd	r25, Y+38	; 0x26
    5dae:	20 e0       	ldi	r18, 0x00	; 0
    5db0:	30 e0       	ldi	r19, 0x00	; 0
    5db2:	40 e8       	ldi	r20, 0x80	; 128
    5db4:	5f e3       	ldi	r21, 0x3F	; 63
    5db6:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    5dba:	88 23       	and	r24, r24
    5dbc:	2c f4       	brge	.+10     	; 0x5dc8 <main+0x7e>
		__ticks = 1;
    5dbe:	81 e0       	ldi	r24, 0x01	; 1
    5dc0:	90 e0       	ldi	r25, 0x00	; 0
    5dc2:	9a a3       	std	Y+34, r25	; 0x22
    5dc4:	89 a3       	std	Y+33, r24	; 0x21
    5dc6:	3f c0       	rjmp	.+126    	; 0x5e46 <main+0xfc>
	else if (__tmp > 65535)
    5dc8:	6b a1       	ldd	r22, Y+35	; 0x23
    5dca:	7c a1       	ldd	r23, Y+36	; 0x24
    5dcc:	8d a1       	ldd	r24, Y+37	; 0x25
    5dce:	9e a1       	ldd	r25, Y+38	; 0x26
    5dd0:	20 e0       	ldi	r18, 0x00	; 0
    5dd2:	3f ef       	ldi	r19, 0xFF	; 255
    5dd4:	4f e7       	ldi	r20, 0x7F	; 127
    5dd6:	57 e4       	ldi	r21, 0x47	; 71
    5dd8:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5ddc:	18 16       	cp	r1, r24
    5dde:	4c f5       	brge	.+82     	; 0x5e32 <main+0xe8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5de0:	6f a1       	ldd	r22, Y+39	; 0x27
    5de2:	78 a5       	ldd	r23, Y+40	; 0x28
    5de4:	89 a5       	ldd	r24, Y+41	; 0x29
    5de6:	9a a5       	ldd	r25, Y+42	; 0x2a
    5de8:	20 e0       	ldi	r18, 0x00	; 0
    5dea:	30 e0       	ldi	r19, 0x00	; 0
    5dec:	40 e2       	ldi	r20, 0x20	; 32
    5dee:	51 e4       	ldi	r21, 0x41	; 65
    5df0:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5df4:	dc 01       	movw	r26, r24
    5df6:	cb 01       	movw	r24, r22
    5df8:	bc 01       	movw	r22, r24
    5dfa:	cd 01       	movw	r24, r26
    5dfc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5e00:	dc 01       	movw	r26, r24
    5e02:	cb 01       	movw	r24, r22
    5e04:	9a a3       	std	Y+34, r25	; 0x22
    5e06:	89 a3       	std	Y+33, r24	; 0x21
    5e08:	0f c0       	rjmp	.+30     	; 0x5e28 <main+0xde>
    5e0a:	88 ec       	ldi	r24, 0xC8	; 200
    5e0c:	90 e0       	ldi	r25, 0x00	; 0
    5e0e:	98 a3       	std	Y+32, r25	; 0x20
    5e10:	8f 8f       	std	Y+31, r24	; 0x1f
    5e12:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5e14:	98 a1       	ldd	r25, Y+32	; 0x20
    5e16:	01 97       	sbiw	r24, 0x01	; 1
    5e18:	f1 f7       	brne	.-4      	; 0x5e16 <main+0xcc>
    5e1a:	98 a3       	std	Y+32, r25	; 0x20
    5e1c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e1e:	89 a1       	ldd	r24, Y+33	; 0x21
    5e20:	9a a1       	ldd	r25, Y+34	; 0x22
    5e22:	01 97       	sbiw	r24, 0x01	; 1
    5e24:	9a a3       	std	Y+34, r25	; 0x22
    5e26:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e28:	89 a1       	ldd	r24, Y+33	; 0x21
    5e2a:	9a a1       	ldd	r25, Y+34	; 0x22
    5e2c:	00 97       	sbiw	r24, 0x00	; 0
    5e2e:	69 f7       	brne	.-38     	; 0x5e0a <main+0xc0>
    5e30:	14 c0       	rjmp	.+40     	; 0x5e5a <main+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5e32:	6b a1       	ldd	r22, Y+35	; 0x23
    5e34:	7c a1       	ldd	r23, Y+36	; 0x24
    5e36:	8d a1       	ldd	r24, Y+37	; 0x25
    5e38:	9e a1       	ldd	r25, Y+38	; 0x26
    5e3a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5e3e:	dc 01       	movw	r26, r24
    5e40:	cb 01       	movw	r24, r22
    5e42:	9a a3       	std	Y+34, r25	; 0x22
    5e44:	89 a3       	std	Y+33, r24	; 0x21
    5e46:	89 a1       	ldd	r24, Y+33	; 0x21
    5e48:	9a a1       	ldd	r25, Y+34	; 0x22
    5e4a:	9e 8f       	std	Y+30, r25	; 0x1e
    5e4c:	8d 8f       	std	Y+29, r24	; 0x1d
    5e4e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5e50:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5e52:	01 97       	sbiw	r24, 0x01	; 1
    5e54:	f1 f7       	brne	.-4      	; 0x5e52 <main+0x108>
    5e56:	9e 8f       	std	Y+30, r25	; 0x1e
    5e58:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(2000);
    LCD_clearscreen();
    5e5a:	0e 94 48 24 	call	0x4890	; 0x4890 <LCD_clearscreen>
    LCD_vSend_string("Calc is ready");
    5e5e:	80 e8       	ldi	r24, 0x80	; 128
    5e60:	90 e0       	ldi	r25, 0x00	; 0
    5e62:	0e 94 2c 24 	call	0x4858	; 0x4858 <LCD_vSend_string>
    5e66:	80 e0       	ldi	r24, 0x00	; 0
    5e68:	90 e0       	ldi	r25, 0x00	; 0
    5e6a:	aa e7       	ldi	r26, 0x7A	; 122
    5e6c:	b4 e4       	ldi	r27, 0x44	; 68
    5e6e:	89 8f       	std	Y+25, r24	; 0x19
    5e70:	9a 8f       	std	Y+26, r25	; 0x1a
    5e72:	ab 8f       	std	Y+27, r26	; 0x1b
    5e74:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e76:	69 8d       	ldd	r22, Y+25	; 0x19
    5e78:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5e7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5e7c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5e7e:	20 e0       	ldi	r18, 0x00	; 0
    5e80:	30 e0       	ldi	r19, 0x00	; 0
    5e82:	4a ef       	ldi	r20, 0xFA	; 250
    5e84:	54 e4       	ldi	r21, 0x44	; 68
    5e86:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5e8a:	dc 01       	movw	r26, r24
    5e8c:	cb 01       	movw	r24, r22
    5e8e:	8d 8b       	std	Y+21, r24	; 0x15
    5e90:	9e 8b       	std	Y+22, r25	; 0x16
    5e92:	af 8b       	std	Y+23, r26	; 0x17
    5e94:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5e96:	6d 89       	ldd	r22, Y+21	; 0x15
    5e98:	7e 89       	ldd	r23, Y+22	; 0x16
    5e9a:	8f 89       	ldd	r24, Y+23	; 0x17
    5e9c:	98 8d       	ldd	r25, Y+24	; 0x18
    5e9e:	20 e0       	ldi	r18, 0x00	; 0
    5ea0:	30 e0       	ldi	r19, 0x00	; 0
    5ea2:	40 e8       	ldi	r20, 0x80	; 128
    5ea4:	5f e3       	ldi	r21, 0x3F	; 63
    5ea6:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    5eaa:	88 23       	and	r24, r24
    5eac:	2c f4       	brge	.+10     	; 0x5eb8 <main+0x16e>
		__ticks = 1;
    5eae:	81 e0       	ldi	r24, 0x01	; 1
    5eb0:	90 e0       	ldi	r25, 0x00	; 0
    5eb2:	9c 8b       	std	Y+20, r25	; 0x14
    5eb4:	8b 8b       	std	Y+19, r24	; 0x13
    5eb6:	3f c0       	rjmp	.+126    	; 0x5f36 <main+0x1ec>
	else if (__tmp > 65535)
    5eb8:	6d 89       	ldd	r22, Y+21	; 0x15
    5eba:	7e 89       	ldd	r23, Y+22	; 0x16
    5ebc:	8f 89       	ldd	r24, Y+23	; 0x17
    5ebe:	98 8d       	ldd	r25, Y+24	; 0x18
    5ec0:	20 e0       	ldi	r18, 0x00	; 0
    5ec2:	3f ef       	ldi	r19, 0xFF	; 255
    5ec4:	4f e7       	ldi	r20, 0x7F	; 127
    5ec6:	57 e4       	ldi	r21, 0x47	; 71
    5ec8:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5ecc:	18 16       	cp	r1, r24
    5ece:	4c f5       	brge	.+82     	; 0x5f22 <main+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5ed0:	69 8d       	ldd	r22, Y+25	; 0x19
    5ed2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5ed4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5ed6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5ed8:	20 e0       	ldi	r18, 0x00	; 0
    5eda:	30 e0       	ldi	r19, 0x00	; 0
    5edc:	40 e2       	ldi	r20, 0x20	; 32
    5ede:	51 e4       	ldi	r21, 0x41	; 65
    5ee0:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5ee4:	dc 01       	movw	r26, r24
    5ee6:	cb 01       	movw	r24, r22
    5ee8:	bc 01       	movw	r22, r24
    5eea:	cd 01       	movw	r24, r26
    5eec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5ef0:	dc 01       	movw	r26, r24
    5ef2:	cb 01       	movw	r24, r22
    5ef4:	9c 8b       	std	Y+20, r25	; 0x14
    5ef6:	8b 8b       	std	Y+19, r24	; 0x13
    5ef8:	0f c0       	rjmp	.+30     	; 0x5f18 <main+0x1ce>
    5efa:	88 ec       	ldi	r24, 0xC8	; 200
    5efc:	90 e0       	ldi	r25, 0x00	; 0
    5efe:	9a 8b       	std	Y+18, r25	; 0x12
    5f00:	89 8b       	std	Y+17, r24	; 0x11
    5f02:	89 89       	ldd	r24, Y+17	; 0x11
    5f04:	9a 89       	ldd	r25, Y+18	; 0x12
    5f06:	01 97       	sbiw	r24, 0x01	; 1
    5f08:	f1 f7       	brne	.-4      	; 0x5f06 <main+0x1bc>
    5f0a:	9a 8b       	std	Y+18, r25	; 0x12
    5f0c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f0e:	8b 89       	ldd	r24, Y+19	; 0x13
    5f10:	9c 89       	ldd	r25, Y+20	; 0x14
    5f12:	01 97       	sbiw	r24, 0x01	; 1
    5f14:	9c 8b       	std	Y+20, r25	; 0x14
    5f16:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f18:	8b 89       	ldd	r24, Y+19	; 0x13
    5f1a:	9c 89       	ldd	r25, Y+20	; 0x14
    5f1c:	00 97       	sbiw	r24, 0x00	; 0
    5f1e:	69 f7       	brne	.-38     	; 0x5efa <main+0x1b0>
    5f20:	14 c0       	rjmp	.+40     	; 0x5f4a <main+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f22:	6d 89       	ldd	r22, Y+21	; 0x15
    5f24:	7e 89       	ldd	r23, Y+22	; 0x16
    5f26:	8f 89       	ldd	r24, Y+23	; 0x17
    5f28:	98 8d       	ldd	r25, Y+24	; 0x18
    5f2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5f2e:	dc 01       	movw	r26, r24
    5f30:	cb 01       	movw	r24, r22
    5f32:	9c 8b       	std	Y+20, r25	; 0x14
    5f34:	8b 8b       	std	Y+19, r24	; 0x13
    5f36:	8b 89       	ldd	r24, Y+19	; 0x13
    5f38:	9c 89       	ldd	r25, Y+20	; 0x14
    5f3a:	98 8b       	std	Y+16, r25	; 0x10
    5f3c:	8f 87       	std	Y+15, r24	; 0x0f
    5f3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5f40:	98 89       	ldd	r25, Y+16	; 0x10
    5f42:	01 97       	sbiw	r24, 0x01	; 1
    5f44:	f1 f7       	brne	.-4      	; 0x5f42 <main+0x1f8>
    5f46:	98 8b       	std	Y+16, r25	; 0x10
    5f48:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(1000);
    LCD_clearscreen();
    5f4a:	0e 94 48 24 	call	0x4890	; 0x4890 <LCD_clearscreen>

    while (1)
    {
        in_num1();
    5f4e:	0e 94 b3 25 	call	0x4b66	; 0x4b66 <in_num1>
        in_num2();
    5f52:	0e 94 52 28 	call	0x50a4	; 0x50a4 <in_num2>
        do_op();
    5f56:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <do_op>
        display_num(2, 16);
    5f5a:	82 e0       	ldi	r24, 0x02	; 2
    5f5c:	60 e1       	ldi	r22, 0x10	; 16
    5f5e:	0e 94 ba 2a 	call	0x5574	; 0x5574 <display_num>
        buzzer_1();
    5f62:	0e 94 a7 2d 	call	0x5b4e	; 0x5b4e <buzzer_1>

        LCD_vSend_cmd(CURSOR_OF_DISPLAY_ON);
    5f66:	8c e0       	ldi	r24, 0x0C	; 12
    5f68:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
    5f6c:	80 e0       	ldi	r24, 0x00	; 0
    5f6e:	90 e0       	ldi	r25, 0x00	; 0
    5f70:	aa ef       	ldi	r26, 0xFA	; 250
    5f72:	b3 e4       	ldi	r27, 0x43	; 67
    5f74:	8b 87       	std	Y+11, r24	; 0x0b
    5f76:	9c 87       	std	Y+12, r25	; 0x0c
    5f78:	ad 87       	std	Y+13, r26	; 0x0d
    5f7a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f7c:	6b 85       	ldd	r22, Y+11	; 0x0b
    5f7e:	7c 85       	ldd	r23, Y+12	; 0x0c
    5f80:	8d 85       	ldd	r24, Y+13	; 0x0d
    5f82:	9e 85       	ldd	r25, Y+14	; 0x0e
    5f84:	20 e0       	ldi	r18, 0x00	; 0
    5f86:	30 e0       	ldi	r19, 0x00	; 0
    5f88:	4a ef       	ldi	r20, 0xFA	; 250
    5f8a:	54 e4       	ldi	r21, 0x44	; 68
    5f8c:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5f90:	dc 01       	movw	r26, r24
    5f92:	cb 01       	movw	r24, r22
    5f94:	8f 83       	std	Y+7, r24	; 0x07
    5f96:	98 87       	std	Y+8, r25	; 0x08
    5f98:	a9 87       	std	Y+9, r26	; 0x09
    5f9a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5f9c:	6f 81       	ldd	r22, Y+7	; 0x07
    5f9e:	78 85       	ldd	r23, Y+8	; 0x08
    5fa0:	89 85       	ldd	r24, Y+9	; 0x09
    5fa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    5fa4:	20 e0       	ldi	r18, 0x00	; 0
    5fa6:	30 e0       	ldi	r19, 0x00	; 0
    5fa8:	40 e8       	ldi	r20, 0x80	; 128
    5faa:	5f e3       	ldi	r21, 0x3F	; 63
    5fac:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    5fb0:	88 23       	and	r24, r24
    5fb2:	2c f4       	brge	.+10     	; 0x5fbe <main+0x274>
		__ticks = 1;
    5fb4:	81 e0       	ldi	r24, 0x01	; 1
    5fb6:	90 e0       	ldi	r25, 0x00	; 0
    5fb8:	9e 83       	std	Y+6, r25	; 0x06
    5fba:	8d 83       	std	Y+5, r24	; 0x05
    5fbc:	3f c0       	rjmp	.+126    	; 0x603c <main+0x2f2>
	else if (__tmp > 65535)
    5fbe:	6f 81       	ldd	r22, Y+7	; 0x07
    5fc0:	78 85       	ldd	r23, Y+8	; 0x08
    5fc2:	89 85       	ldd	r24, Y+9	; 0x09
    5fc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    5fc6:	20 e0       	ldi	r18, 0x00	; 0
    5fc8:	3f ef       	ldi	r19, 0xFF	; 255
    5fca:	4f e7       	ldi	r20, 0x7F	; 127
    5fcc:	57 e4       	ldi	r21, 0x47	; 71
    5fce:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    5fd2:	18 16       	cp	r1, r24
    5fd4:	4c f5       	brge	.+82     	; 0x6028 <main+0x2de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5fd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    5fd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    5fda:	8d 85       	ldd	r24, Y+13	; 0x0d
    5fdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    5fde:	20 e0       	ldi	r18, 0x00	; 0
    5fe0:	30 e0       	ldi	r19, 0x00	; 0
    5fe2:	40 e2       	ldi	r20, 0x20	; 32
    5fe4:	51 e4       	ldi	r21, 0x41	; 65
    5fe6:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    5fea:	dc 01       	movw	r26, r24
    5fec:	cb 01       	movw	r24, r22
    5fee:	bc 01       	movw	r22, r24
    5ff0:	cd 01       	movw	r24, r26
    5ff2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5ff6:	dc 01       	movw	r26, r24
    5ff8:	cb 01       	movw	r24, r22
    5ffa:	9e 83       	std	Y+6, r25	; 0x06
    5ffc:	8d 83       	std	Y+5, r24	; 0x05
    5ffe:	0f c0       	rjmp	.+30     	; 0x601e <main+0x2d4>
    6000:	88 ec       	ldi	r24, 0xC8	; 200
    6002:	90 e0       	ldi	r25, 0x00	; 0
    6004:	9c 83       	std	Y+4, r25	; 0x04
    6006:	8b 83       	std	Y+3, r24	; 0x03
    6008:	8b 81       	ldd	r24, Y+3	; 0x03
    600a:	9c 81       	ldd	r25, Y+4	; 0x04
    600c:	01 97       	sbiw	r24, 0x01	; 1
    600e:	f1 f7       	brne	.-4      	; 0x600c <main+0x2c2>
    6010:	9c 83       	std	Y+4, r25	; 0x04
    6012:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6014:	8d 81       	ldd	r24, Y+5	; 0x05
    6016:	9e 81       	ldd	r25, Y+6	; 0x06
    6018:	01 97       	sbiw	r24, 0x01	; 1
    601a:	9e 83       	std	Y+6, r25	; 0x06
    601c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    601e:	8d 81       	ldd	r24, Y+5	; 0x05
    6020:	9e 81       	ldd	r25, Y+6	; 0x06
    6022:	00 97       	sbiw	r24, 0x00	; 0
    6024:	69 f7       	brne	.-38     	; 0x6000 <main+0x2b6>
    6026:	14 c0       	rjmp	.+40     	; 0x6050 <main+0x306>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6028:	6f 81       	ldd	r22, Y+7	; 0x07
    602a:	78 85       	ldd	r23, Y+8	; 0x08
    602c:	89 85       	ldd	r24, Y+9	; 0x09
    602e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6030:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6034:	dc 01       	movw	r26, r24
    6036:	cb 01       	movw	r24, r22
    6038:	9e 83       	std	Y+6, r25	; 0x06
    603a:	8d 83       	std	Y+5, r24	; 0x05
    603c:	8d 81       	ldd	r24, Y+5	; 0x05
    603e:	9e 81       	ldd	r25, Y+6	; 0x06
    6040:	9a 83       	std	Y+2, r25	; 0x02
    6042:	89 83       	std	Y+1, r24	; 0x01
    6044:	89 81       	ldd	r24, Y+1	; 0x01
    6046:	9a 81       	ldd	r25, Y+2	; 0x02
    6048:	01 97       	sbiw	r24, 0x01	; 1
    604a:	f1 f7       	brne	.-4      	; 0x6048 <main+0x2fe>
    604c:	9a 83       	std	Y+2, r25	; 0x02
    604e:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(500);
        while (keypad_u8check_press() != '=');
    6050:	0e 94 62 30 	call	0x60c4	; 0x60c4 <keypad_u8check_press>
    6054:	8d 33       	cpi	r24, 0x3D	; 61
    6056:	e1 f7       	brne	.-8      	; 0x6050 <main+0x306>
        LCD_vSend_cmd(CLR_SCREEN);
    6058:	81 e0       	ldi	r24, 0x01	; 1
    605a:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
        LCD_vSend_cmd(CURSOR_BLINK_DISPLAY_ON);
    605e:	8f e0       	ldi	r24, 0x0F	; 15
    6060:	0e 94 09 22 	call	0x4412	; 0x4412 <LCD_vSend_cmd>
        display_num(1, res_length + 1);
    6064:	80 91 b1 01 	lds	r24, 0x01B1
    6068:	98 2f       	mov	r25, r24
    606a:	9f 5f       	subi	r25, 0xFF	; 255
    606c:	81 e0       	ldi	r24, 0x01	; 1
    606e:	69 2f       	mov	r22, r25
    6070:	0e 94 ba 2a 	call	0x5574	; 0x5574 <display_num>
        notloop = 0;
    6074:	10 92 96 01 	sts	0x0196, r1
        num1 = result;
    6078:	80 91 b4 01 	lds	r24, 0x01B4
    607c:	90 91 b5 01 	lds	r25, 0x01B5
    6080:	a0 91 b6 01 	lds	r26, 0x01B6
    6084:	b0 91 b7 01 	lds	r27, 0x01B7
    6088:	80 93 a8 01 	sts	0x01A8, r24
    608c:	90 93 a9 01 	sts	0x01A9, r25
    6090:	a0 93 aa 01 	sts	0x01AA, r26
    6094:	b0 93 ab 01 	sts	0x01AB, r27
    6098:	5a cf       	rjmp	.-332    	; 0x5f4e <main+0x204>

0000609a <keypad_vInit>:
char arr[4][4]={{'7','8','9','/'},
				{'4','5','6','*'},
				{'1','2','3','-'},
				{'.','0','=','+'}};
void keypad_vInit()
{
    609a:	df 93       	push	r29
    609c:	cf 93       	push	r28
    609e:	cd b7       	in	r28, 0x3d	; 61
    60a0:	de b7       	in	r29, 0x3e	; 62
	
	
	DDRA=0;
    60a2:	ea e3       	ldi	r30, 0x3A	; 58
    60a4:	f0 e0       	ldi	r31, 0x00	; 0
    60a6:	10 82       	st	Z, r1
	DDRA|=0x0f;
    60a8:	aa e3       	ldi	r26, 0x3A	; 58
    60aa:	b0 e0       	ldi	r27, 0x00	; 0
    60ac:	ea e3       	ldi	r30, 0x3A	; 58
    60ae:	f0 e0       	ldi	r31, 0x00	; 0
    60b0:	80 81       	ld	r24, Z
    60b2:	8f 60       	ori	r24, 0x0F	; 15
    60b4:	8c 93       	st	X, r24
	PORTA=0Xff;
    60b6:	eb e3       	ldi	r30, 0x3B	; 59
    60b8:	f0 e0       	ldi	r31, 0x00	; 0
    60ba:	8f ef       	ldi	r24, 0xFF	; 255
    60bc:	80 83       	st	Z, r24
		
}
    60be:	cf 91       	pop	r28
    60c0:	df 91       	pop	r29
    60c2:	08 95       	ret

000060c4 <keypad_u8check_press>:
char keypad_u8check_press()
{
    60c4:	df 93       	push	r29
    60c6:	cf 93       	push	r28
    60c8:	cd b7       	in	r28, 0x3d	; 61
    60ca:	de b7       	in	r29, 0x3e	; 62
    60cc:	62 97       	sbiw	r28, 0x12	; 18
    60ce:	0f b6       	in	r0, 0x3f	; 63
    60d0:	f8 94       	cli
    60d2:	de bf       	out	0x3e, r29	; 62
    60d4:	0f be       	out	0x3f, r0	; 63
    60d6:	cd bf       	out	0x3d, r28	; 61

			char row,coloumn,x;
			char returnval=NOTPRESSED;
    60d8:	8f ef       	ldi	r24, 0xFF	; 255
    60da:	8f 87       	std	Y+15, r24	; 0x0f
			for(row=0;row<4;row++)
    60dc:	1a 8a       	std	Y+18, r1	; 0x12
    60de:	36 c0       	rjmp	.+108    	; 0x614c <keypad_u8check_press+0x88>
			{
				DIO_vwrite('A',row,0);
    60e0:	81 e4       	ldi	r24, 0x41	; 65
    60e2:	6a 89       	ldd	r22, Y+18	; 0x12
    60e4:	40 e0       	ldi	r20, 0x00	; 0
    60e6:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
				
				
			for(coloumn=0;coloumn<4;coloumn++)
    60ea:	19 8a       	std	Y+17, r1	; 0x11
    60ec:	21 c0       	rjmp	.+66     	; 0x6130 <keypad_u8check_press+0x6c>
			{
				x=DIO_u8read('A',(coloumn+4));
    60ee:	89 89       	ldd	r24, Y+17	; 0x11
    60f0:	98 2f       	mov	r25, r24
    60f2:	9c 5f       	subi	r25, 0xFC	; 252
    60f4:	81 e4       	ldi	r24, 0x41	; 65
    60f6:	69 2f       	mov	r22, r25
    60f8:	0e 94 b3 1c 	call	0x3966	; 0x3966 <DIO_u8read>
    60fc:	88 8b       	std	Y+16, r24	; 0x10
				if(x==0)
    60fe:	88 89       	ldd	r24, Y+16	; 0x10
    6100:	88 23       	and	r24, r24
    6102:	99 f4       	brne	.+38     	; 0x612a <keypad_u8check_press+0x66>
				{
					returnval=arr[row][coloumn];
    6104:	8a 89       	ldd	r24, Y+18	; 0x12
    6106:	48 2f       	mov	r20, r24
    6108:	50 e0       	ldi	r21, 0x00	; 0
    610a:	89 89       	ldd	r24, Y+17	; 0x11
    610c:	28 2f       	mov	r18, r24
    610e:	30 e0       	ldi	r19, 0x00	; 0
    6110:	ca 01       	movw	r24, r20
    6112:	88 0f       	add	r24, r24
    6114:	99 1f       	adc	r25, r25
    6116:	88 0f       	add	r24, r24
    6118:	99 1f       	adc	r25, r25
    611a:	82 0f       	add	r24, r18
    611c:	93 1f       	adc	r25, r19
    611e:	fc 01       	movw	r30, r24
    6120:	e8 56       	subi	r30, 0x68	; 104
    6122:	fe 4f       	sbci	r31, 0xFE	; 254
    6124:	80 81       	ld	r24, Z
    6126:	8f 87       	std	Y+15, r24	; 0x0f
    6128:	06 c0       	rjmp	.+12     	; 0x6136 <keypad_u8check_press+0x72>
			for(row=0;row<4;row++)
			{
				DIO_vwrite('A',row,0);
				
				
			for(coloumn=0;coloumn<4;coloumn++)
    612a:	89 89       	ldd	r24, Y+17	; 0x11
    612c:	8f 5f       	subi	r24, 0xFF	; 255
    612e:	89 8b       	std	Y+17, r24	; 0x11
    6130:	89 89       	ldd	r24, Y+17	; 0x11
    6132:	84 30       	cpi	r24, 0x04	; 4
    6134:	e0 f2       	brcs	.-72     	; 0x60ee <keypad_u8check_press+0x2a>
				{
					returnval=arr[row][coloumn];
					break;
				}
			}
			DIO_vwrite('A',row,1);
    6136:	81 e4       	ldi	r24, 0x41	; 65
    6138:	6a 89       	ldd	r22, Y+18	; 0x12
    613a:	41 e0       	ldi	r20, 0x01	; 1
    613c:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <DIO_vwrite>
			
			if(x==0)
    6140:	88 89       	ldd	r24, Y+16	; 0x10
    6142:	88 23       	and	r24, r24
    6144:	31 f0       	breq	.+12     	; 0x6152 <keypad_u8check_press+0x8e>
char keypad_u8check_press()
{

			char row,coloumn,x;
			char returnval=NOTPRESSED;
			for(row=0;row<4;row++)
    6146:	8a 89       	ldd	r24, Y+18	; 0x12
    6148:	8f 5f       	subi	r24, 0xFF	; 255
    614a:	8a 8b       	std	Y+18, r24	; 0x12
    614c:	8a 89       	ldd	r24, Y+18	; 0x12
    614e:	84 30       	cpi	r24, 0x04	; 4
    6150:	38 f2       	brcs	.-114    	; 0x60e0 <keypad_u8check_press+0x1c>
    6152:	80 e0       	ldi	r24, 0x00	; 0
    6154:	90 e0       	ldi	r25, 0x00	; 0
    6156:	a8 e4       	ldi	r26, 0x48	; 72
    6158:	b2 e4       	ldi	r27, 0x42	; 66
    615a:	8b 87       	std	Y+11, r24	; 0x0b
    615c:	9c 87       	std	Y+12, r25	; 0x0c
    615e:	ad 87       	std	Y+13, r26	; 0x0d
    6160:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6162:	6b 85       	ldd	r22, Y+11	; 0x0b
    6164:	7c 85       	ldd	r23, Y+12	; 0x0c
    6166:	8d 85       	ldd	r24, Y+13	; 0x0d
    6168:	9e 85       	ldd	r25, Y+14	; 0x0e
    616a:	20 e0       	ldi	r18, 0x00	; 0
    616c:	30 e0       	ldi	r19, 0x00	; 0
    616e:	4a ef       	ldi	r20, 0xFA	; 250
    6170:	54 e4       	ldi	r21, 0x44	; 68
    6172:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    6176:	dc 01       	movw	r26, r24
    6178:	cb 01       	movw	r24, r22
    617a:	8f 83       	std	Y+7, r24	; 0x07
    617c:	98 87       	std	Y+8, r25	; 0x08
    617e:	a9 87       	std	Y+9, r26	; 0x09
    6180:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6182:	6f 81       	ldd	r22, Y+7	; 0x07
    6184:	78 85       	ldd	r23, Y+8	; 0x08
    6186:	89 85       	ldd	r24, Y+9	; 0x09
    6188:	9a 85       	ldd	r25, Y+10	; 0x0a
    618a:	20 e0       	ldi	r18, 0x00	; 0
    618c:	30 e0       	ldi	r19, 0x00	; 0
    618e:	40 e8       	ldi	r20, 0x80	; 128
    6190:	5f e3       	ldi	r21, 0x3F	; 63
    6192:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <__ltsf2>
    6196:	88 23       	and	r24, r24
    6198:	2c f4       	brge	.+10     	; 0x61a4 <keypad_u8check_press+0xe0>
		__ticks = 1;
    619a:	81 e0       	ldi	r24, 0x01	; 1
    619c:	90 e0       	ldi	r25, 0x00	; 0
    619e:	9e 83       	std	Y+6, r25	; 0x06
    61a0:	8d 83       	std	Y+5, r24	; 0x05
    61a2:	3f c0       	rjmp	.+126    	; 0x6222 <keypad_u8check_press+0x15e>
	else if (__tmp > 65535)
    61a4:	6f 81       	ldd	r22, Y+7	; 0x07
    61a6:	78 85       	ldd	r23, Y+8	; 0x08
    61a8:	89 85       	ldd	r24, Y+9	; 0x09
    61aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    61ac:	20 e0       	ldi	r18, 0x00	; 0
    61ae:	3f ef       	ldi	r19, 0xFF	; 255
    61b0:	4f e7       	ldi	r20, 0x7F	; 127
    61b2:	57 e4       	ldi	r21, 0x47	; 71
    61b4:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__gtsf2>
    61b8:	18 16       	cp	r1, r24
    61ba:	4c f5       	brge	.+82     	; 0x620e <keypad_u8check_press+0x14a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    61bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    61be:	7c 85       	ldd	r23, Y+12	; 0x0c
    61c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    61c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    61c4:	20 e0       	ldi	r18, 0x00	; 0
    61c6:	30 e0       	ldi	r19, 0x00	; 0
    61c8:	40 e2       	ldi	r20, 0x20	; 32
    61ca:	51 e4       	ldi	r21, 0x41	; 65
    61cc:	0e 94 9b 14 	call	0x2936	; 0x2936 <__mulsf3>
    61d0:	dc 01       	movw	r26, r24
    61d2:	cb 01       	movw	r24, r22
    61d4:	bc 01       	movw	r22, r24
    61d6:	cd 01       	movw	r24, r26
    61d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    61dc:	dc 01       	movw	r26, r24
    61de:	cb 01       	movw	r24, r22
    61e0:	9e 83       	std	Y+6, r25	; 0x06
    61e2:	8d 83       	std	Y+5, r24	; 0x05
    61e4:	0f c0       	rjmp	.+30     	; 0x6204 <keypad_u8check_press+0x140>
    61e6:	88 ec       	ldi	r24, 0xC8	; 200
    61e8:	90 e0       	ldi	r25, 0x00	; 0
    61ea:	9c 83       	std	Y+4, r25	; 0x04
    61ec:	8b 83       	std	Y+3, r24	; 0x03
    61ee:	8b 81       	ldd	r24, Y+3	; 0x03
    61f0:	9c 81       	ldd	r25, Y+4	; 0x04
    61f2:	01 97       	sbiw	r24, 0x01	; 1
    61f4:	f1 f7       	brne	.-4      	; 0x61f2 <keypad_u8check_press+0x12e>
    61f6:	9c 83       	std	Y+4, r25	; 0x04
    61f8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    61fa:	8d 81       	ldd	r24, Y+5	; 0x05
    61fc:	9e 81       	ldd	r25, Y+6	; 0x06
    61fe:	01 97       	sbiw	r24, 0x01	; 1
    6200:	9e 83       	std	Y+6, r25	; 0x06
    6202:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6204:	8d 81       	ldd	r24, Y+5	; 0x05
    6206:	9e 81       	ldd	r25, Y+6	; 0x06
    6208:	00 97       	sbiw	r24, 0x00	; 0
    620a:	69 f7       	brne	.-38     	; 0x61e6 <keypad_u8check_press+0x122>
    620c:	14 c0       	rjmp	.+40     	; 0x6236 <keypad_u8check_press+0x172>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    620e:	6f 81       	ldd	r22, Y+7	; 0x07
    6210:	78 85       	ldd	r23, Y+8	; 0x08
    6212:	89 85       	ldd	r24, Y+9	; 0x09
    6214:	9a 85       	ldd	r25, Y+10	; 0x0a
    6216:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    621a:	dc 01       	movw	r26, r24
    621c:	cb 01       	movw	r24, r22
    621e:	9e 83       	std	Y+6, r25	; 0x06
    6220:	8d 83       	std	Y+5, r24	; 0x05
    6222:	8d 81       	ldd	r24, Y+5	; 0x05
    6224:	9e 81       	ldd	r25, Y+6	; 0x06
    6226:	9a 83       	std	Y+2, r25	; 0x02
    6228:	89 83       	std	Y+1, r24	; 0x01
    622a:	89 81       	ldd	r24, Y+1	; 0x01
    622c:	9a 81       	ldd	r25, Y+2	; 0x02
    622e:	01 97       	sbiw	r24, 0x01	; 1
    6230:	f1 f7       	brne	.-4      	; 0x622e <keypad_u8check_press+0x16a>
    6232:	9a 83       	std	Y+2, r25	; 0x02
    6234:	89 83       	std	Y+1, r24	; 0x01
			{
				break;
			}
		}
		_delay_ms(50);
		return returnval ;
    6236:	8f 85       	ldd	r24, Y+15	; 0x0f
}
    6238:	62 96       	adiw	r28, 0x12	; 18
    623a:	0f b6       	in	r0, 0x3f	; 63
    623c:	f8 94       	cli
    623e:	de bf       	out	0x3e, r29	; 62
    6240:	0f be       	out	0x3f, r0	; 63
    6242:	cd bf       	out	0x3d, r28	; 61
    6244:	cf 91       	pop	r28
    6246:	df 91       	pop	r29
    6248:	08 95       	ret

0000624a <__mulsi3>:
    624a:	62 9f       	mul	r22, r18
    624c:	d0 01       	movw	r26, r0
    624e:	73 9f       	mul	r23, r19
    6250:	f0 01       	movw	r30, r0
    6252:	82 9f       	mul	r24, r18
    6254:	e0 0d       	add	r30, r0
    6256:	f1 1d       	adc	r31, r1
    6258:	64 9f       	mul	r22, r20
    625a:	e0 0d       	add	r30, r0
    625c:	f1 1d       	adc	r31, r1
    625e:	92 9f       	mul	r25, r18
    6260:	f0 0d       	add	r31, r0
    6262:	83 9f       	mul	r24, r19
    6264:	f0 0d       	add	r31, r0
    6266:	74 9f       	mul	r23, r20
    6268:	f0 0d       	add	r31, r0
    626a:	65 9f       	mul	r22, r21
    626c:	f0 0d       	add	r31, r0
    626e:	99 27       	eor	r25, r25
    6270:	72 9f       	mul	r23, r18
    6272:	b0 0d       	add	r27, r0
    6274:	e1 1d       	adc	r30, r1
    6276:	f9 1f       	adc	r31, r25
    6278:	63 9f       	mul	r22, r19
    627a:	b0 0d       	add	r27, r0
    627c:	e1 1d       	adc	r30, r1
    627e:	f9 1f       	adc	r31, r25
    6280:	bd 01       	movw	r22, r26
    6282:	cf 01       	movw	r24, r30
    6284:	11 24       	eor	r1, r1
    6286:	08 95       	ret

00006288 <__udivmodsi4>:
    6288:	a1 e2       	ldi	r26, 0x21	; 33
    628a:	1a 2e       	mov	r1, r26
    628c:	aa 1b       	sub	r26, r26
    628e:	bb 1b       	sub	r27, r27
    6290:	fd 01       	movw	r30, r26
    6292:	0d c0       	rjmp	.+26     	; 0x62ae <__udivmodsi4_ep>

00006294 <__udivmodsi4_loop>:
    6294:	aa 1f       	adc	r26, r26
    6296:	bb 1f       	adc	r27, r27
    6298:	ee 1f       	adc	r30, r30
    629a:	ff 1f       	adc	r31, r31
    629c:	a2 17       	cp	r26, r18
    629e:	b3 07       	cpc	r27, r19
    62a0:	e4 07       	cpc	r30, r20
    62a2:	f5 07       	cpc	r31, r21
    62a4:	20 f0       	brcs	.+8      	; 0x62ae <__udivmodsi4_ep>
    62a6:	a2 1b       	sub	r26, r18
    62a8:	b3 0b       	sbc	r27, r19
    62aa:	e4 0b       	sbc	r30, r20
    62ac:	f5 0b       	sbc	r31, r21

000062ae <__udivmodsi4_ep>:
    62ae:	66 1f       	adc	r22, r22
    62b0:	77 1f       	adc	r23, r23
    62b2:	88 1f       	adc	r24, r24
    62b4:	99 1f       	adc	r25, r25
    62b6:	1a 94       	dec	r1
    62b8:	69 f7       	brne	.-38     	; 0x6294 <__udivmodsi4_loop>
    62ba:	60 95       	com	r22
    62bc:	70 95       	com	r23
    62be:	80 95       	com	r24
    62c0:	90 95       	com	r25
    62c2:	9b 01       	movw	r18, r22
    62c4:	ac 01       	movw	r20, r24
    62c6:	bd 01       	movw	r22, r26
    62c8:	cf 01       	movw	r24, r30
    62ca:	08 95       	ret

000062cc <__prologue_saves__>:
    62cc:	2f 92       	push	r2
    62ce:	3f 92       	push	r3
    62d0:	4f 92       	push	r4
    62d2:	5f 92       	push	r5
    62d4:	6f 92       	push	r6
    62d6:	7f 92       	push	r7
    62d8:	8f 92       	push	r8
    62da:	9f 92       	push	r9
    62dc:	af 92       	push	r10
    62de:	bf 92       	push	r11
    62e0:	cf 92       	push	r12
    62e2:	df 92       	push	r13
    62e4:	ef 92       	push	r14
    62e6:	ff 92       	push	r15
    62e8:	0f 93       	push	r16
    62ea:	1f 93       	push	r17
    62ec:	cf 93       	push	r28
    62ee:	df 93       	push	r29
    62f0:	cd b7       	in	r28, 0x3d	; 61
    62f2:	de b7       	in	r29, 0x3e	; 62
    62f4:	ca 1b       	sub	r28, r26
    62f6:	db 0b       	sbc	r29, r27
    62f8:	0f b6       	in	r0, 0x3f	; 63
    62fa:	f8 94       	cli
    62fc:	de bf       	out	0x3e, r29	; 62
    62fe:	0f be       	out	0x3f, r0	; 63
    6300:	cd bf       	out	0x3d, r28	; 61
    6302:	09 94       	ijmp

00006304 <__epilogue_restores__>:
    6304:	2a 88       	ldd	r2, Y+18	; 0x12
    6306:	39 88       	ldd	r3, Y+17	; 0x11
    6308:	48 88       	ldd	r4, Y+16	; 0x10
    630a:	5f 84       	ldd	r5, Y+15	; 0x0f
    630c:	6e 84       	ldd	r6, Y+14	; 0x0e
    630e:	7d 84       	ldd	r7, Y+13	; 0x0d
    6310:	8c 84       	ldd	r8, Y+12	; 0x0c
    6312:	9b 84       	ldd	r9, Y+11	; 0x0b
    6314:	aa 84       	ldd	r10, Y+10	; 0x0a
    6316:	b9 84       	ldd	r11, Y+9	; 0x09
    6318:	c8 84       	ldd	r12, Y+8	; 0x08
    631a:	df 80       	ldd	r13, Y+7	; 0x07
    631c:	ee 80       	ldd	r14, Y+6	; 0x06
    631e:	fd 80       	ldd	r15, Y+5	; 0x05
    6320:	0c 81       	ldd	r16, Y+4	; 0x04
    6322:	1b 81       	ldd	r17, Y+3	; 0x03
    6324:	aa 81       	ldd	r26, Y+2	; 0x02
    6326:	b9 81       	ldd	r27, Y+1	; 0x01
    6328:	ce 0f       	add	r28, r30
    632a:	d1 1d       	adc	r29, r1
    632c:	0f b6       	in	r0, 0x3f	; 63
    632e:	f8 94       	cli
    6330:	de bf       	out	0x3e, r29	; 62
    6332:	0f be       	out	0x3f, r0	; 63
    6334:	cd bf       	out	0x3d, r28	; 61
    6336:	ed 01       	movw	r28, r26
    6338:	08 95       	ret

0000633a <_exit>:
    633a:	f8 94       	cli

0000633c <__stop_program>:
    633c:	ff cf       	rjmp	.-2      	; 0x633c <__stop_program>
